{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/background.css","path":"css/background.css","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/demo/四合一图床.html","path":"demo/四合一图床.html","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/home-background.jpg","path":"img/home-background.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/img1.jpg","path":"img/img1.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/2023年需要做的事情.md","hash":"b88fd1fb9c1acc80682624a5a11e4e0ca40bb200","modified":1720191941601},{"_id":"source/_posts/2024-07-05-Docker的卸载.md","hash":"f0c8521ca8ab1252e8789e3df9c60c1daa6040f0","modified":1720191941701},{"_id":"source/_posts/2024-07-05-在自己服务器上部署Rustdesk服务.md","hash":"0cb06266d67f59c09681fb5598c44d4f09fb2b97","modified":1720191942105},{"_id":"source/_posts/2024-07-05-ubuntu20.04安装Docker.md","hash":"e8ca62b7396755f7d81b61eb6b17c01e457385c4","modified":1720191941797},{"_id":"source/_posts/2024-07-05-记录删除通过yml文件生成的docker容器.md","hash":"7eb2a612d8f3b6d79fbf2875e14ef6a36ed9cbd1","modified":1720191941893},{"_id":"source/_posts/2024-07-05-记录设置docker容器开机自启动.md","hash":"bef1e3dcef6a3350b4152eb83f7613eeb5c9128e","modified":1720191941989},{"_id":"source/_posts/2024-07-05-设置服务器开机自动启动frps服务端.md","hash":"6666103c1da2e253d93d3a71cbb41902c8ce4664","modified":1720192022084},{"_id":"source/_posts/CSS简单了解介绍.md","hash":"cfce620752c95b8a800e4ea81b013defd179c858","modified":1720191942281},{"_id":"source/_posts/HTML复习笔记.md","hash":"3149d9242124c7a5a13dce885f90657cf5526934","modified":1720191942477},{"_id":"source/_posts/git提交代码完整流程.md","hash":"7d3069f3897ccb609a1466f1aa3c4118c2c501c1","modified":1720191942377},{"_id":"source/_posts/ubuntu20.04安装git.md","hash":"b54f157859406da560b8f9bcd3f040f080448a6e","modified":1720191942685},{"_id":"source/_posts/Markdown学习笔记.md","hash":"435a65284c035f49f5ef2ce3d807e88659a2a3e6","modified":1720191942589},{"_id":"source/_posts/一切的开始.md","hash":"81cefde660849f389485079301c25e69e4ab0bf2","modified":1720191943377},{"_id":"source/_posts/博客更新与备份备忘录.md","hash":"6bf35f19a03ac05e818e457f56fcaef4a3e6148e","modified":1720191942785},{"_id":"source/_posts/我想留在深圳.md","hash":"484b60a574c8637e100856456c1a93936250dbaa","modified":1720191943293},{"_id":"source/_posts/换电脑后linux下迁移恢复hexo.md","hash":"5afcbd44173fb56132bc73d797f995b551f0fce3","modified":1720191942977},{"_id":"source/_posts/歌曲《十一种孤独》歌词收藏.md","hash":"cf236989ef08c3500e3a2b2f8b5dfb28e5a60b79","modified":1720191942881},{"_id":"source/_posts/记录HTML五种布局.md","hash":"3dd57bcf469e2763c88058ea734c0fa69fd4d857","modified":1720191943089},{"_id":"source/Gallery/index.md","hash":"0407efc6bb6494b733c524fc924fc77ebe4da77b","modified":1720184915201},{"_id":"source/about/index.md","hash":"88df5da98aee3aa4bc6546a78847973dfe214667","modified":1720184915201},{"_id":"source/categories/index.md","hash":"58a62b9935dea918e2f07d947fc0b2b1aae9d8dc","modified":1720184915201},{"_id":"source/movies/index.md","hash":"13a28ec5b695eaea3704a58981695f269e46b335","modified":1720184915201},{"_id":"source/music/index.md","hash":"7fe0846cd832b444a197a9d2dc07ff33fc72016b","modified":1720184915205},{"_id":"source/messageboard/index.md","hash":"063dde28f8887f7cd0333d32d7d3f82763768f2c","modified":1720184915201},{"_id":"source/link/index.md","hash":"372b55ba44655b7ad14b8e113ce805c4fc0d457d","modified":1720184915201},{"_id":"source/tags/index.md","hash":"aca08eab874467f6f767a48b68ca751db2b50022","modified":1720184915205},{"_id":"themes/butterfly/package.json","hash":"3a9142a8e70c383d70fad36a7d8ecc7464bad079","modified":1720184915205},{"_id":"themes/butterfly/README.md","hash":"d9ac9b7c8eea12d58a5465ef452a94ef44e1a798","modified":1720184915205},{"_id":"themes/butterfly/README_CN.md","hash":"95939ce71e4020784a852e7c6e5543f4e3998bf0","modified":1720184915205},{"_id":"themes/butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1720184915205},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1720184915205},{"_id":"themes/butterfly/languages/default.yml","hash":"9840c4341123f326bb8ae1e871cda916a4e4825a","modified":1720184915205},{"_id":"themes/butterfly/languages/en.yml","hash":"69bdeac93fd3e816eb5ed9748b9be0a570fcef03","modified":1720184915205},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"b434d133125cd6bb597c91e0e591fb1d563377e7","modified":1720184915205},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"fe97468c40dbce850756f9b262389270f7fe9421","modified":1720184915205},{"_id":"themes/butterfly/layout/404.pug","hash":"cb7b4fb164621d1fd7c33184241bd24662c85299","modified":1720184915205},{"_id":"themes/butterfly/layout/category.pug","hash":"d014234c26d2c07caaea6703f7b48cb69c51907d","modified":1720184915205},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1720184915205},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1720184915205},{"_id":"themes/butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1720184915205},{"_id":"themes/butterfly/scripts/events/init.js","hash":"43b245c308797c2d62cb70429a85f1a05d3395ab","modified":1720184915205},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1720184915205},{"_id":"themes/butterfly/layout/page.pug","hash":"d5063ec93d33bd8488c12007709b6aafd8b9cf5f","modified":1720184915205},{"_id":"themes/butterfly/layout/post.pug","hash":"de0c69f0583347f6064e9f2c344aac6b97c2a74d","modified":1720184915205},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1720184915205},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"e9cf275c362d8634f093e63068da7ed1e53c7600","modified":1720184915205},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0f5017be123ae2b2ddf231d9d71a5c4cd1f2f206","modified":1720184915205},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"f30b0c108474b2869b35ee70dbc6ed2f2066979d","modified":1720184915205},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e01e86233820a32690e3e2e14a20f01511407644","modified":1720184915205},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"51fb52f76423e4dbebd198f0a2a4190ed14e3093","modified":1720184915205},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"0d8ba6120dce617a2a1fbc9167572db2ee9f22ef","modified":1720184915205},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1720184915205},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":1720184915205},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1720184915205},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1720184915205},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1720184915205},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1720184915205},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":1720184915205},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1720184915205},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"6961a4f98f9971581e7d41d527fd90f9d2e82163","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"6c517d30c606c22883053998ce0d89e11da2f769","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"acb5657931fa0857f80b37116ec1a16b0c250544","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c543384810f7989a5381b3cdf191e7daac17178b","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"f81b25dfabfa50e76acd100b97774936179ad85f","modified":1720184915205},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1720184915209},{"_id":"themes/butterfly/source/css/var.styl","hash":"e92eaefda462315051872b7894a6f6eb70a29006","modified":1720184915209},{"_id":"themes/butterfly/source/css/background.css","hash":"5495f8778370c0f4efc1d442c2a5d16c66ceae13","modified":1720184915209},{"_id":"themes/butterfly/source/demo/四合一图床.html","hash":"e97fcea3b04d88ef604e013738dcc37a0bc98974","modified":1720184915209},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1720184915209},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1720184915209},{"_id":"themes/butterfly/source/img/favicon.png","hash":"fd2f22604cdeab34dcd3826e6c85c5a813d94a2d","modified":1720184915209},{"_id":"themes/butterfly/source/img/avatar.jpg","hash":"2297644bc5371a2b45ae5bc106a88ee7a4694aa4","modified":1720184915209},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1720184915209},{"_id":"themes/butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1720184915209},{"_id":"themes/butterfly/source/js/main.js","hash":"4e526092321b8c4e93837e716ef4f587ffff9a60","modified":1720184915209},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1720184915209},{"_id":"themes/butterfly/source/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1720184915209},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"abfa1d6a4f57273baedc6d1106d568d9c5c8014f","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"14cd0f9c0c578512896b487263cd48570d74771a","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"0a8b0b3d82bef350fea5b42b1f69dbb6551b8627","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"12f6c0010fd1161ee0f9e2cba1bbe197578481b0","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"7ffcf93bc5ee95ca461aea2735cedc0785c9884d","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"5390f2aea030486bf78678b910bda177b0ba5d05","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"3da1dc28cfb2ae1ca4a7a52c760fdc8e1e983215","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"189ab8ea17a8c342b0aafd68439f32889a096253","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"c9725750346975ea66b058fe71f57c5c69291ee4","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/js.pug","hash":"de4eb7c3536e5cfb82f5d7586afa9a093e85e695","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"68dfd3c6a0f00b3ffc0333c81e165b4626f7425f","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"62cf37e28795d8b68a0e850ec8c94987b9e08db5","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"1ba251eca702b7d34f4f65d58d51a87db1799144","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"bab59f87da66386e5abc84550614752c660a0705","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/baidu_push.pug","hash":"6c8f95d54f337e2c6b3a40beff01d8554605df75","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"cf8f2fff10e7adf1b0404b8d194c49dc35796721","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"491d177a0a9c72321a8d208f3a186f667c170087","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"50f0574a1db1c62d56042b10880ba348d65d8fd9","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"934fbf955aee6219538ca5dc9b0a662472f2901e","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"64bd872377d190966727668a00b156a8b3d95da3","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"c32bb3164b93b806c90d3f7a12d52859cb799458","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"36b368516b5a746be84a6aa08767ee24d220d509","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e356f916ceb28702812d8f66c1fea0ae75eece47","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_self.pug","hash":"a1b2f5575b6804c5c4b9288db143b5164cbbd289","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"c99c7daf6f83a79f13f794c9097e3a1b171a3988","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"1c9652cf71da32414a79b0ea6704421a59bdce2e","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/page/artitalk.pug","hash":"2a435df727ba4a0e6678c06c1b4b83745dfef841","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"da24e13ca15a376373fa3bae65f2bfb02f881b87","modified":1720184915205},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"13321de90ca8d5e092b9124dbe65f36a07c14af7","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1720184915205},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"29a404ffe2f9a7bec9330f48f4c43f21bf67d8b5","modified":1720184915205},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"39e7ccd83aefa3deccf42be8a82b74c5d9928b58","modified":1720184915209},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"ab8b09d752a2a28ac8879d219a533a7b64aed164","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"a510b67364d40794f9f0575c24b6987cab0b802a","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"b740fc80f2018c6d7b4ec3b4ec37b8a686687caf","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"24eea44716748c528725d994ae84cec19c308c5b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"5edca90d42cc25ca60cfeed167a52951ed14865d","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"76d67b9a42e8b0c3d17316a6d75c5b5b4c65fb68","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"7bf7af4754baba07edfc614621bdb965442cdc2f","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bb266c8cb123cdad508527e5a742566bc59d16c3","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7a6e1f21173022a3a1f18a62785cdd657a1af0a1","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"a8673447cf327931ca4e90e03c7188bdaf8c0bca","modified":1720184915209},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"9e63cad808503d787b1485211333bef8e8a37571","modified":1720184915209},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"fa7a4c1685f391d60ed863e869b9604b59746c27","modified":1720184915209},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1720184915209},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"3305ab95795801339bc515affca56c11ddc954e6","modified":1720184915209},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"275091fc84f69f2b75b9dc4b0da1bc3c2c9d7a59","modified":1720184915209},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d486cf1dfcfdbc0acd1a414c78f6a66df7432aa0","modified":1720184915209},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"43f00986410f3dc0eed9e0bf9478801da32be24f","modified":1720184915209},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"a7fc7624a8d893bdf9444f14154484c29c790e99","modified":1720184915209},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":1720184915209},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1720184915209},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":1720184915209},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1720184915209},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"6b05ca4409d2dc09e123af4e0af9f9d0f7142b73","modified":1720184915209},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1720184915209},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1720184915209},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"51f2bd03a2d0787911d0c090fb555a664b3fac8b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1720184915209},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1720184915209},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1720184915209},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f617cacf5d1e8335abba96ee1ce4b79c17411e1e","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b2fb4af74d54f1daa39d4afc321d38a2a72e0ddd","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"b579b947a87da500a4f3abbdf870fb5a6f2a5a79","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"99dbf2b87b372f07315a3b879a77131eaf3da066","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"d7ccd37cceaf4338e3e440b0dd4503765aaf4e1d","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"119c110afd331264cb6283f0078b6477d457d130","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"5b015bb6fc61d136512f78aa4e3bc3165afb9cf2","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"544fb85361c61dffc39a87e808d8bda04cfd863f","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"4afc12ce42d067fa4012039aa444343a36f73599","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"53af4ffa8119c7bbba3f066de74845be91400b5b","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"21b7ec96c606823d3d72e72775495ef77502b4cb","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b94df53a56b66afb33b2c438b946f5c5a37d5f02","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"18dcf05ab58107bbff426376aef2577f59583fc2","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cdad89a0f7e5c404fd277c1469330cb0703c8079","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"dbc4e513eb0f1eed1baebe2fd438518856794c70","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"7e2287dd20a0865f1ec29e6cd86c5027c1b48087","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"9f4cb2f0d924a45aefa10888c50f91d29029cba4","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1720184915205},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1720184915205},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"52c63a50a37fa315753e72b3661676156aeae794","modified":1720184915209},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"c40f7d6973811e53fcfbe881174ab373b4ea03ad","modified":1720184915205},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"3bcd66576d13db8f93fa5b799a973d55e060a708","modified":1720184915209},{"_id":"themes/butterfly/source/img/home-background.jpg","hash":"f3211f8dd120adb4da55ce12d1ba09d715980e84","modified":1720184915209},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"d40f1baec16c4a62e4a3a9a0379d1ca3ac6746b2","modified":1720184915209},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"897a18a82c0cad141b3ed9e2f1b4af60c24c334b","modified":1720184915209},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1720184915209},{"_id":"themes/butterfly/source/img/img1.jpg","hash":"80baaef015b4312f29620fb12a21dd8fd4b05ecc","modified":1720184915209},{"_id":"public/atom.xml","hash":"040a1d2938e233f9995783c31ff15327e79e3cce","modified":1720192038003},{"_id":"public/sitemap.xml","hash":"5a0036d8d3fa2e682dbff9ad6585cca813f914f8","modified":1720192038003},{"_id":"public/Gallery/index.html","hash":"4aca9d0b76784bf429831966a1fe5b2870f1e371","modified":1720192038003},{"_id":"public/about/index.html","hash":"14a75459e7498334580969aba677ce5d0649df1f","modified":1720192038003},{"_id":"public/categories/index.html","hash":"79dd6929f8b3fb55c467a622aa70a846066cc5bc","modified":1720192038003},{"_id":"public/link/index.html","hash":"2c8129b9f3d95eb88d4eaec9318a6f1a180c8f80","modified":1720192038003},{"_id":"public/movies/index.html","hash":"4e71d9b05a1dc8a3772188071ef676996d5fe843","modified":1720192038003},{"_id":"public/music/index.html","hash":"c1f23eb88ed51502576b1f33e9aa79643855c259","modified":1720192038003},{"_id":"public/tags/index.html","hash":"195e215fc1e2a790a737f4c69a0a627f57be21e5","modified":1720192038003},{"_id":"public/messageboard/index.html","hash":"6fd4d7d907749f96e7ee24eea6b8ac596f4176f6","modified":1720192038003},{"_id":"public/2024/07/05/2024-07-05-Docker的卸载/index.html","hash":"4177a84aba6cf806fc80561af2426cf4727aebe4","modified":1720192038003},{"_id":"public/2024/07/05/2024-07-05-记录删除通过yml文件生成的docker容器/index.html","hash":"1a1c98d3fc6cbd0d72437c36bb84564b9a04c296","modified":1720192038003},{"_id":"public/2024/07/05/2024-07-05-记录设置docker容器开机自启动/index.html","hash":"2682d7effa4c5799fb476c897ef6455f2128ea11","modified":1720192038003},{"_id":"public/2024/07/05/2024-07-05-设置服务器开机自动启动frps服务端/index.html","hash":"28881c68d2ea3a7a4e79f84b5a194c8791dd8ee7","modified":1720192038003},{"_id":"public/2024/07/05/2024-07-05-ubuntu20.04安装Docker/index.html","hash":"677fd604312dd386fa354dfb37c5f66f9a65c4a6","modified":1720192038003},{"_id":"public/2024/07/05/2024-07-05-在自己服务器上部署Rustdesk服务/index.html","hash":"0a8474e7ae213aa5c476c653658bf40a46135a96","modified":1720192038003},{"_id":"public/2024/07/03/ubuntu20.04安装git/index.html","hash":"bd98c4cbe2ed1e7d3658ce7ee67866ab87cb9622","modified":1720192038003},{"_id":"public/2024/07/03/换电脑后linux下迁移恢复hexo/index.html","hash":"e64835b31aab93443ebd004a13c7fa1b1865e839","modified":1720192038003},{"_id":"public/2024/07/03/git提交代码完整流程/index.html","hash":"316e2cf8d91d99cbb09e3afefd53f6672360fa82","modified":1720192038003},{"_id":"public/2023/02/15/博客更新与备份备忘录/index.html","hash":"bc3780c5214e86ff61ec00a189080b724f958d2d","modified":1720192038003},{"_id":"public/2023/02/14/我想留在深圳/index.html","hash":"b221e91246a8e2cc07d79a09ed5bd7a0fb8f7a0a","modified":1720192038003},{"_id":"public/2023/01/06/2023年需要做的事情/index.html","hash":"8c01932767b19e03c116c3874547182f78c830d6","modified":1720192038003},{"_id":"public/2022/12/30/CSS简单了解介绍/index.html","hash":"20733c250e0d47c57996f2096c1795bba3deb029","modified":1720192038003},{"_id":"public/2022/12/30/HTML复习笔记/index.html","hash":"c5fb2440e2ae268019d7a515a338677d18962096","modified":1720192038003},{"_id":"public/2022/12/30/Markdown学习笔记/index.html","hash":"fca6380ac22426ce9da93c08f0d34b26d8963ee7","modified":1720192038003},{"_id":"public/2022/12/30/一切的开始/index.html","hash":"aa2c7abc75f657ca7c9469ea8f72e407e4bb6e8c","modified":1720192038003},{"_id":"public/2022/12/30/歌曲《十一种孤独》歌词收藏/index.html","hash":"80495e59d39b8d08e6a52ced4d57c95ad4c6ed01","modified":1720192038003},{"_id":"public/2022/12/30/记录HTML五种布局/index.html","hash":"3b2acf6ae8bc586c6f789bac3a9ab04a4eb8cc1a","modified":1720192038003},{"_id":"public/archives/index.html","hash":"a78da7ac124697db2663e8752a711501418b9ff8","modified":1720192038003},{"_id":"public/archives/page/2/index.html","hash":"1bd661e47d32129ef6e89a2f59c22a29eea49fb2","modified":1720192038003},{"_id":"public/archives/2022/index.html","hash":"4997d03546a78eec104a4c5cfdc1f7f30982d51f","modified":1720192038003},{"_id":"public/archives/2022/12/index.html","hash":"d134b961287534a1ee963f06043f60485ad67a43","modified":1720192038003},{"_id":"public/archives/2023/index.html","hash":"af67d0299d3043c9fdd1601e984978374a20abe6","modified":1720192038003},{"_id":"public/archives/2023/01/index.html","hash":"b5e3935e22509fe7528686ff9fa90b554944bc48","modified":1720192038003},{"_id":"public/archives/2023/02/index.html","hash":"42c9997f84086d1d8697f6655fb8a0903446e09c","modified":1720192038003},{"_id":"public/archives/2024/index.html","hash":"5c82dcb6cffe3614a2ca3612903bc2e434818304","modified":1720192038003},{"_id":"public/archives/2024/07/index.html","hash":"fa1fa9fc81bab6efc26124fc159f0147f22c0322","modified":1720192038003},{"_id":"public/categories/文/index.html","hash":"9e334f30b7fd68d3424de613b8277010dd8a1504","modified":1720192038003},{"_id":"public/categories/文/page/2/index.html","hash":"4209d7130761e501bcc662b910e50e072944e03a","modified":1720192038003},{"_id":"public/categories/文-技/index.html","hash":"705cb156f0fbfd2cb05a45d1217f6b8adca41497","modified":1720192038003},{"_id":"public/categories/技/index.html","hash":"74b530694e8a18a7ad242a62cdb8cb9d1cb474bb","modified":1720192038003},{"_id":"public/index.html","hash":"c08db7bf5f97735ef6143b042b455a2123e70ee0","modified":1720192038003},{"_id":"public/page/2/index.html","hash":"8fda84a290f36be4487d2df010a069ebb4bac5f7","modified":1720192038003},{"_id":"public/tags/日记/index.html","hash":"a140df95464f7d3d3152c022b55dae32f1e47bc5","modified":1720192038003},{"_id":"public/tags/记录/index.html","hash":"662d90bd9d77e26fd074602b2c460bb3963feeb7","modified":1720192038003},{"_id":"public/tags/实践/index.html","hash":"2c9134cee26b1ae688e7d1ca972731e3b4bacfdc","modified":1720192038003},{"_id":"public/tags/学习/index.html","hash":"547201aee471f9b99b6c8cdb57186e3b148aace6","modified":1720192038003},{"_id":"public/tags/git/index.html","hash":"2913ae66e28e8ceeb7b8e58b33de8713058cea10","modified":1720192038003},{"_id":"public/tags/博客部署安装/index.html","hash":"93685398b4c7167b5cbc1d1a8a05bc7192df2527","modified":1720192038003},{"_id":"public/tags/诗歌/index.html","hash":"f877e764334f74f7a79fd79ffaa8ac919316d1b8","modified":1720192038003},{"_id":"public/tags/叙述/index.html","hash":"93d991c2e4535f1c8d70374311f920f426d0916d","modified":1720192038003},{"_id":"public/tags/教程/index.html","hash":"5d68509834481c05ae840759e44e502f25b303ce","modified":1720192038003},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1720192038003},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1720192038003},{"_id":"public/img/avatar.jpg","hash":"2297644bc5371a2b45ae5bc106a88ee7a4694aa4","modified":1720192038003},{"_id":"public/img/favicon.png","hash":"fd2f22604cdeab34dcd3826e6c85c5a813d94a2d","modified":1720192038003},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1720192038003},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1720192038003},{"_id":"public/img/home-background.jpg","hash":"f3211f8dd120adb4da55ce12d1ba09d715980e84","modified":1720192038003},{"_id":"public/css/index.css","hash":"8f02359cdceab348b7224b15008f6c34c992f067","modified":1720192038003},{"_id":"public/css/background.css","hash":"5495f8778370c0f4efc1d442c2a5d16c66ceae13","modified":1720192038003},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1720192038003},{"_id":"public/demo/四合一图床.html","hash":"e97fcea3b04d88ef604e013738dcc37a0bc98974","modified":1720192038003},{"_id":"public/js/main.js","hash":"4e526092321b8c4e93837e716ef4f587ffff9a60","modified":1720192038003},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1720192038003},{"_id":"public/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1720192038003},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1720192038003},{"_id":"public/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1720192038003},{"_id":"public/img/img1.jpg","hash":"80baaef015b4312f29620fb12a21dd8fd4b05ecc","modified":1720192038003}],"Category":[{"name":"文","_id":"cly8txc4o0004vbinhyoq84jk"},{"name":"文|技","_id":"cly8txc5n000svbin61i1819j"},{"name":"技","_id":"cly8txc5z0018vbin595r3gj6"}],"Data":[],"Page":[{"title":"Gallery","date":"2021-01-26T07:21:07.000Z","_content":"","source":"Gallery/index.md","raw":"---\ntitle: Gallery\ndate: 2021-01-26 15:21:07\n---\n","updated":"2024-07-05T13:08:35.201Z","path":"Gallery/index.html","comments":1,"layout":"page","_id":"cly8txc470000vbin7nwc9bfr","content":"","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085628zTl.jpg","excerpt":"","more":""},{"title":"about","date":"2021-01-25T10:23:50.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-01-25 18:23:50\n---\n","updated":"2024-07-05T13:08:35.201Z","path":"about/index.html","comments":1,"layout":"page","_id":"cly8txc4j0002vbind9fl79rh","content":"","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085628zTl.jpg","excerpt":"","more":""},{"title":"分类","date":"2021-01-25T05:50:02.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: '分类'\ndate: 2021-01-25 13:50:02\n---\n","updated":"2024-07-05T13:08:35.201Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cly8txc4s0006vbinbze75201","content":"","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":""},{"title":"链接","date":"2021-01-25T10:23:40.000Z","_content":"- class_name: 友情鏈接\nclass_desc: 那些人，那些事\nlink_list:\n- name: JerryC\n\tlink: https://jerryc.me/\n\tavatar: https://jerryc.me/image/avatar.png\n\tdescr: 今日事，今日毕。\n- name: Hexo\n\tlink: https://hexo.io/zh-tw/\n\tavatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\n\tdescr: 快速、简单且强大的博客框架\n- class_name: 网站\n\tclass_desc: 值得推荐的网站\n\tlink_list:   \n- name: Youtube      \n\tlink: https://www.youtube.com/      \n\tavatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png\n\tdescr: 视频网站\n- name: Weibo\n\tlink: https://www.weibo.com/\n\tavatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png\n\tdescr:中国最大社交分享平台\n- name: Twitter \n\tlink: https://twitter.com/\n\tavatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png\n\tdescr: 社交分享平台\n- name: Bilibili \n\tlink: https://bilibili.com/\n\tavatar: \n\tdescr: 社交分享平台","source":"link/index.md","raw":"---\ntitle: 链接\ndate: 2021-01-25 18:23:40\n---\n- class_name: 友情鏈接\nclass_desc: 那些人，那些事\nlink_list:\n- name: JerryC\n\tlink: https://jerryc.me/\n\tavatar: https://jerryc.me/image/avatar.png\n\tdescr: 今日事，今日毕。\n- name: Hexo\n\tlink: https://hexo.io/zh-tw/\n\tavatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\n\tdescr: 快速、简单且强大的博客框架\n- class_name: 网站\n\tclass_desc: 值得推荐的网站\n\tlink_list:   \n- name: Youtube      \n\tlink: https://www.youtube.com/      \n\tavatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png\n\tdescr: 视频网站\n- name: Weibo\n\tlink: https://www.weibo.com/\n\tavatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png\n\tdescr:中国最大社交分享平台\n- name: Twitter \n\tlink: https://twitter.com/\n\tavatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png\n\tdescr: 社交分享平台\n- name: Bilibili \n\tlink: https://bilibili.com/\n\tavatar: \n\tdescr: 社交分享平台","updated":"2024-07-05T13:08:35.201Z","path":"link/index.html","comments":1,"layout":"page","_id":"cly8txc4v0008vbin4pcb2w4v","content":"<ul>\n<li>class_name: 友情鏈接<br>class_desc: 那些人，那些事<br>link_list:</li>\n<li>name: JerryC<br>  link: <a href=\"https://jerryc.me/\">https://jerryc.me/</a><br>  avatar: <a href=\"https://jerryc.me/image/avatar.png\">https://jerryc.me/image/avatar.png</a><br>  descr: 今日事，今日毕。</li>\n<li>name: Hexo<br>  link: <a href=\"https://hexo.io/zh-tw/\">https://hexo.io/zh-tw/</a><br>  avatar: <a href=\"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</a><br>  descr: 快速、简单且强大的博客框架</li>\n<li>class_name: 网站<br>  class_desc: 值得推荐的网站<br>  link_list:   </li>\n<li>name: Youtube<br>  link: <a href=\"https://www.youtube.com/\">https://www.youtube.com/</a><br>  avatar: <a href=\"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png\">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</a><br>  descr: 视频网站</li>\n<li>name: Weibo<br>  link: <a href=\"https://www.weibo.com/\">https://www.weibo.com/</a><br>  avatar: <a href=\"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png\">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</a><br>  descr:中国最大社交分享平台</li>\n<li>name: Twitter<br>  link: <a href=\"https://twitter.com/\">https://twitter.com/</a><br>  avatar: <a href=\"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png\">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</a><br>  descr: 社交分享平台</li>\n<li>name: Bilibili<br>  link: <a href=\"https://bilibili.com/\">https://bilibili.com/</a><br>  avatar:<br>  descr: 社交分享平台</li>\n</ul>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<ul>\n<li>class_name: 友情鏈接<br>class_desc: 那些人，那些事<br>link_list:</li>\n<li>name: JerryC<br>  link: <a href=\"https://jerryc.me/\">https://jerryc.me/</a><br>  avatar: <a href=\"https://jerryc.me/image/avatar.png\">https://jerryc.me/image/avatar.png</a><br>  descr: 今日事，今日毕。</li>\n<li>name: Hexo<br>  link: <a href=\"https://hexo.io/zh-tw/\">https://hexo.io/zh-tw/</a><br>  avatar: <a href=\"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</a><br>  descr: 快速、简单且强大的博客框架</li>\n<li>class_name: 网站<br>  class_desc: 值得推荐的网站<br>  link_list:   </li>\n<li>name: Youtube<br>  link: <a href=\"https://www.youtube.com/\">https://www.youtube.com/</a><br>  avatar: <a href=\"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png\">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</a><br>  descr: 视频网站</li>\n<li>name: Weibo<br>  link: <a href=\"https://www.weibo.com/\">https://www.weibo.com/</a><br>  avatar: <a href=\"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png\">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</a><br>  descr:中国最大社交分享平台</li>\n<li>name: Twitter<br>  link: <a href=\"https://twitter.com/\">https://twitter.com/</a><br>  avatar: <a href=\"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png\">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</a><br>  descr: 社交分享平台</li>\n<li>name: Bilibili<br>  link: <a href=\"https://bilibili.com/\">https://bilibili.com/</a><br>  avatar:<br>  descr: 社交分享平台</li>\n</ul>\n"},{"title":"电影","date":"2021-01-25T10:24:04.000Z","_content":"","source":"movies/index.md","raw":"---\ntitle: '电影'\ndate: 2021-01-25 18:24:04\n---\n","updated":"2024-07-05T13:08:35.201Z","path":"movies/index.html","comments":1,"layout":"page","_id":"cly8txc4y000avbin6ysb4yku","content":"","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085628zTl.jpg","excerpt":"","more":""},{"title":"音乐","date":"2021-01-25T10:23:30.000Z","_content":"","source":"music/index.md","raw":"---\ntitle: '音乐'\ndate: 2021-01-25 18:23:30\n---\n","updated":"2024-07-05T13:08:35.205Z","path":"music/index.html","comments":1,"layout":"page","_id":"cly8txc56000fvbinbpjmfigz","content":"","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085628zTl.jpg","excerpt":"","more":""},{"title":"标签","date":"2021-01-25T05:49:42.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: '标签'\ndate: 2021-01-25 13:49:42\n---\n","updated":"2024-07-05T13:08:35.205Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cly8txc5b000hvbincyh0a027","content":"","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085628zTl.jpg","excerpt":"","more":""},{"title":"留言板","date":"2021-01-25T05:50:14.000Z","_content":"","source":"messageboard/index.md","raw":"---\ntitle: '留言板'\ndate: 2021-01-25 13:50:14\n---\n","updated":"2024-07-05T13:08:35.201Z","path":"messageboard/index.html","comments":1,"layout":"page","_id":"cly8txc5i000nvbin25wn01bk","content":"","site":{"data":{}},"cover":"http://pic1.win4000.com/wallpaper/f/5860af34d5340.jpg","excerpt":"","more":""}],"Post":[{"title":"2023年人生路该怎么走","author":"戴昌益","date":"2023-01-05T16:00:00.000Z","_content":"\n# 2023年人生路该怎么走\n\n恍惚间就2023年了，又是浑浑噩噩的一年。又开始感叹光阴的流逝了。\n\n回想起过去的2022年所经历的职业人生，更换了一份工作。由原来的（航测相机）售前售后技术支持部门主管岗位更换到地理信息项目做项目经理。这份工作对我来说是一个新的领域。刚入行什么都不懂就是摸着石头过河。当时想着是换一个工作多扩展一下自己的见识。熟悉不同岗位的行为方式，所以欣然入职。现在8个月过去了。自己并没有任何的长进，任然还是刚入行的样子。切身感受到每一行都有其深刻的复杂与繁冗。好在自己所接手的项目是一个分包项目所需要负责的内容相比于一个完整的项目工作内容远远不及。通过领导同事的帮助也算渐渐上路。如果给自己在岗位上的表现打分的话。满分一百我给自己40分。远远达不到及格的标准。入职以来本人项目上基本是每周开一次会并对会议情况进行传达甲方所要求的内容进行处理，除此以外自己的主要工作内容是在疫情防控流调指挥部值班协助流调工作（我司有负责疫情防控流调系统地图服务）。反思了一下这相关一系列工作并没有对自己的职业道路有所帮助。干了8个月对自己岗位所需要做的工作任然没有一个全面清晰的认识。这让自己很是焦虑。不知道自己下一步到底改怎么走。\n\n最近几天工作上没有什么具体的内容基本就是躺平摸鱼，总体说来这段时间都相当于在浑水摸鱼。我这人一闲下来就感觉自己像无头苍蝇找不到北。","source":"_posts/2023年需要做的事情.md","raw":"---\ntitle: 2023年人生路该怎么走\nauthor: 戴昌益\ndate: 2023-01-06 \ntags: [日记]\ncategories: 文\n---\n\n# 2023年人生路该怎么走\n\n恍惚间就2023年了，又是浑浑噩噩的一年。又开始感叹光阴的流逝了。\n\n回想起过去的2022年所经历的职业人生，更换了一份工作。由原来的（航测相机）售前售后技术支持部门主管岗位更换到地理信息项目做项目经理。这份工作对我来说是一个新的领域。刚入行什么都不懂就是摸着石头过河。当时想着是换一个工作多扩展一下自己的见识。熟悉不同岗位的行为方式，所以欣然入职。现在8个月过去了。自己并没有任何的长进，任然还是刚入行的样子。切身感受到每一行都有其深刻的复杂与繁冗。好在自己所接手的项目是一个分包项目所需要负责的内容相比于一个完整的项目工作内容远远不及。通过领导同事的帮助也算渐渐上路。如果给自己在岗位上的表现打分的话。满分一百我给自己40分。远远达不到及格的标准。入职以来本人项目上基本是每周开一次会并对会议情况进行传达甲方所要求的内容进行处理，除此以外自己的主要工作内容是在疫情防控流调指挥部值班协助流调工作（我司有负责疫情防控流调系统地图服务）。反思了一下这相关一系列工作并没有对自己的职业道路有所帮助。干了8个月对自己岗位所需要做的工作任然没有一个全面清晰的认识。这让自己很是焦虑。不知道自己下一步到底改怎么走。\n\n最近几天工作上没有什么具体的内容基本就是躺平摸鱼，总体说来这段时间都相当于在浑水摸鱼。我这人一闲下来就感觉自己像无头苍蝇找不到北。","slug":"2023年需要做的事情","published":1,"updated":"2024-07-05T15:05:41.601Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc4e0001vbinezfbdqjr","content":"<h1 id=\"2023年人生路该怎么走\"><a href=\"#2023年人生路该怎么走\" class=\"headerlink\" title=\"2023年人生路该怎么走\"></a>2023年人生路该怎么走</h1><p>恍惚间就2023年了，又是浑浑噩噩的一年。又开始感叹光阴的流逝了。</p>\n<p>回想起过去的2022年所经历的职业人生，更换了一份工作。由原来的（航测相机）售前售后技术支持部门主管岗位更换到地理信息项目做项目经理。这份工作对我来说是一个新的领域。刚入行什么都不懂就是摸着石头过河。当时想着是换一个工作多扩展一下自己的见识。熟悉不同岗位的行为方式，所以欣然入职。现在8个月过去了。自己并没有任何的长进，任然还是刚入行的样子。切身感受到每一行都有其深刻的复杂与繁冗。好在自己所接手的项目是一个分包项目所需要负责的内容相比于一个完整的项目工作内容远远不及。通过领导同事的帮助也算渐渐上路。如果给自己在岗位上的表现打分的话。满分一百我给自己40分。远远达不到及格的标准。入职以来本人项目上基本是每周开一次会并对会议情况进行传达甲方所要求的内容进行处理，除此以外自己的主要工作内容是在疫情防控流调指挥部值班协助流调工作（我司有负责疫情防控流调系统地图服务）。反思了一下这相关一系列工作并没有对自己的职业道路有所帮助。干了8个月对自己岗位所需要做的工作任然没有一个全面清晰的认识。这让自己很是焦虑。不知道自己下一步到底改怎么走。</p>\n<p>最近几天工作上没有什么具体的内容基本就是躺平摸鱼，总体说来这段时间都相当于在浑水摸鱼。我这人一闲下来就感觉自己像无头苍蝇找不到北。</p>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h1 id=\"2023年人生路该怎么走\"><a href=\"#2023年人生路该怎么走\" class=\"headerlink\" title=\"2023年人生路该怎么走\"></a>2023年人生路该怎么走</h1><p>恍惚间就2023年了，又是浑浑噩噩的一年。又开始感叹光阴的流逝了。</p>\n<p>回想起过去的2022年所经历的职业人生，更换了一份工作。由原来的（航测相机）售前售后技术支持部门主管岗位更换到地理信息项目做项目经理。这份工作对我来说是一个新的领域。刚入行什么都不懂就是摸着石头过河。当时想着是换一个工作多扩展一下自己的见识。熟悉不同岗位的行为方式，所以欣然入职。现在8个月过去了。自己并没有任何的长进，任然还是刚入行的样子。切身感受到每一行都有其深刻的复杂与繁冗。好在自己所接手的项目是一个分包项目所需要负责的内容相比于一个完整的项目工作内容远远不及。通过领导同事的帮助也算渐渐上路。如果给自己在岗位上的表现打分的话。满分一百我给自己40分。远远达不到及格的标准。入职以来本人项目上基本是每周开一次会并对会议情况进行传达甲方所要求的内容进行处理，除此以外自己的主要工作内容是在疫情防控流调指挥部值班协助流调工作（我司有负责疫情防控流调系统地图服务）。反思了一下这相关一系列工作并没有对自己的职业道路有所帮助。干了8个月对自己岗位所需要做的工作任然没有一个全面清晰的认识。这让自己很是焦虑。不知道自己下一步到底改怎么走。</p>\n<p>最近几天工作上没有什么具体的内容基本就是躺平摸鱼，总体说来这段时间都相当于在浑水摸鱼。我这人一闲下来就感觉自己像无头苍蝇找不到北。</p>\n"},{"title":"Docker的卸载","author":"戴昌益","date":"2024-07-05T07:52:07.000Z","_content":"\n# Docker的卸载\n\n##### 1. 停止Docker的服务：\n\n```shell\nsudo systemctl stop docker\n```\n\n报错\n\n```\nStopping docker.service, but it can still be activated by: docker.socket\n```\n\n原因：\n\nDocker默认开启自动唤醒机制，即docker默认在关闭状态下被访问会自动唤醒Docker。\n\n**查看Docker是否开启自动唤醒机制：**\n\n```\nsystemctl status docker\n```\n\n**停用Docker自动唤醒机制：**\n\n```\nsystemctl stop docker.socket\n```\n\n\n\n**查看Docker自动唤醒机制是否关闭：**\n\n```\nsystemctl status docker\n```\n\n发现已经关闭\n\n停用Docker：\n\n```\nsystemctl stop docker\n```\n\n如果回头想要开启自动唤醒机制：***\\*systemctl start docker.socket\\****，即可开启\n\n##### 2. 删除Docker软件包：\n\n```shell\n# 可以使用purge进行删除\n# sudo apt-get purge docker-ce\n# 正常使用yum命令进行删除\nsudo apt remove docker-ce\ntip：“purge”是Linux系统中的命令，用于彻底删除软件包及其配置文件。与\"remove\"命令不同，\"purge\"命令会删除软件包及其配置文件，包括在软件包安装期间创建的任何配置文件和数据文件。\"purge\"命令可以确保软件包及其相关文件完全从系统中删除，以释放磁盘空间并避免潜在的冲突和问题。\n```\n\n##### 3. 删除Docker镜像、容器和数据卷：\n\n```shell\nsudo rm -rf /var/lib/docker\n```\n\n##### 4. 删除Docker配置文件：\n\n```shell\nsudo rm /etc/docker/daemon.json\n```\n\n##### 5. 删除Docker用户组：\n\n```shell\nsudo groupdel docker\n```\n\n##### 6. 删除Docker安装包：\n\n```shell\nsudo rm /usr/bin/docker\n```\n\n##### 7. 删除Docker-compose安装包（没有安装包可以忽略）\n\n```shell\nsudo rm /usr/local/bin/docker-compose\n```","source":"_posts/2024-07-05-Docker的卸载.md","raw":"---\ntitle: Docker的卸载\nauthor: 戴昌益\ndate: 2024-07-05 15:52:07\ntags: [记录]\ncategories: 文\n\n---\n\n# Docker的卸载\n\n##### 1. 停止Docker的服务：\n\n```shell\nsudo systemctl stop docker\n```\n\n报错\n\n```\nStopping docker.service, but it can still be activated by: docker.socket\n```\n\n原因：\n\nDocker默认开启自动唤醒机制，即docker默认在关闭状态下被访问会自动唤醒Docker。\n\n**查看Docker是否开启自动唤醒机制：**\n\n```\nsystemctl status docker\n```\n\n**停用Docker自动唤醒机制：**\n\n```\nsystemctl stop docker.socket\n```\n\n\n\n**查看Docker自动唤醒机制是否关闭：**\n\n```\nsystemctl status docker\n```\n\n发现已经关闭\n\n停用Docker：\n\n```\nsystemctl stop docker\n```\n\n如果回头想要开启自动唤醒机制：***\\*systemctl start docker.socket\\****，即可开启\n\n##### 2. 删除Docker软件包：\n\n```shell\n# 可以使用purge进行删除\n# sudo apt-get purge docker-ce\n# 正常使用yum命令进行删除\nsudo apt remove docker-ce\ntip：“purge”是Linux系统中的命令，用于彻底删除软件包及其配置文件。与\"remove\"命令不同，\"purge\"命令会删除软件包及其配置文件，包括在软件包安装期间创建的任何配置文件和数据文件。\"purge\"命令可以确保软件包及其相关文件完全从系统中删除，以释放磁盘空间并避免潜在的冲突和问题。\n```\n\n##### 3. 删除Docker镜像、容器和数据卷：\n\n```shell\nsudo rm -rf /var/lib/docker\n```\n\n##### 4. 删除Docker配置文件：\n\n```shell\nsudo rm /etc/docker/daemon.json\n```\n\n##### 5. 删除Docker用户组：\n\n```shell\nsudo groupdel docker\n```\n\n##### 6. 删除Docker安装包：\n\n```shell\nsudo rm /usr/bin/docker\n```\n\n##### 7. 删除Docker-compose安装包（没有安装包可以忽略）\n\n```shell\nsudo rm /usr/local/bin/docker-compose\n```","slug":"2024-07-05-Docker的卸载","published":1,"updated":"2024-07-05T15:05:41.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc4k0003vbin40z476ns","content":"<h1 id=\"Docker的卸载\"><a href=\"#Docker的卸载\" class=\"headerlink\" title=\"Docker的卸载\"></a>Docker的卸载</h1><h5 id=\"1-停止Docker的服务：\"><a href=\"#1-停止Docker的服务：\" class=\"headerlink\" title=\"1. 停止Docker的服务：\"></a>1. 停止Docker的服务：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>\n<p>报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Stopping docker.service, but it can still be activated by: docker.socket</span><br></pre></td></tr></table></figure>\n<p>原因：</p>\n<p>Docker默认开启自动唤醒机制，即docker默认在关闭状态下被访问会自动唤醒Docker。</p>\n<p><strong>查看Docker是否开启自动唤醒机制：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n<p><strong>停用Docker自动唤醒机制：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl stop docker.socket</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>查看Docker自动唤醒机制是否关闭：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n<p>发现已经关闭</p>\n<p>停用Docker：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl stop docker</span><br></pre></td></tr></table></figure>\n<p>如果回头想要开启自动唤醒机制：*<strong>*systemctl start docker.socket**</strong>，即可开启</p>\n<h5 id=\"2-删除Docker软件包：\"><a href=\"#2-删除Docker软件包：\" class=\"headerlink\" title=\"2. 删除Docker软件包：\"></a>2. 删除Docker软件包：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 可以使用purge进行删除</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo apt-get purge docker-ce</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 正常使用yum命令进行删除</span></span><br><span class=\"line\">sudo apt remove docker-ce</span><br><span class=\"line\">tip：“purge”是Linux系统中的命令，用于彻底删除软件包及其配置文件。与&quot;remove&quot;命令不同，&quot;purge&quot;命令会删除软件包及其配置文件，包括在软件包安装期间创建的任何配置文件和数据文件。&quot;purge&quot;命令可以确保软件包及其相关文件完全从系统中删除，以释放磁盘空间并避免潜在的冲突和问题。</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-删除Docker镜像、容器和数据卷：\"><a href=\"#3-删除Docker镜像、容器和数据卷：\" class=\"headerlink\" title=\"3. 删除Docker镜像、容器和数据卷：\"></a>3. 删除Docker镜像、容器和数据卷：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-删除Docker配置文件：\"><a href=\"#4-删除Docker配置文件：\" class=\"headerlink\" title=\"4. 删除Docker配置文件：\"></a>4. 删除Docker配置文件：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-删除Docker用户组：\"><a href=\"#5-删除Docker用户组：\" class=\"headerlink\" title=\"5. 删除Docker用户组：\"></a>5. 删除Docker用户组：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo groupdel docker</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-删除Docker安装包：\"><a href=\"#6-删除Docker安装包：\" class=\"headerlink\" title=\"6. 删除Docker安装包：\"></a>6. 删除Docker安装包：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm /usr/bin/docker</span><br></pre></td></tr></table></figure>\n<h5 id=\"7-删除Docker-compose安装包（没有安装包可以忽略）\"><a href=\"#7-删除Docker-compose安装包（没有安装包可以忽略）\" class=\"headerlink\" title=\"7. 删除Docker-compose安装包（没有安装包可以忽略）\"></a>7. 删除Docker-compose安装包（没有安装包可以忽略）</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<h1 id=\"Docker的卸载\"><a href=\"#Docker的卸载\" class=\"headerlink\" title=\"Docker的卸载\"></a>Docker的卸载</h1><h5 id=\"1-停止Docker的服务：\"><a href=\"#1-停止Docker的服务：\" class=\"headerlink\" title=\"1. 停止Docker的服务：\"></a>1. 停止Docker的服务：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>\n<p>报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Stopping docker.service, but it can still be activated by: docker.socket</span><br></pre></td></tr></table></figure>\n<p>原因：</p>\n<p>Docker默认开启自动唤醒机制，即docker默认在关闭状态下被访问会自动唤醒Docker。</p>\n<p><strong>查看Docker是否开启自动唤醒机制：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n<p><strong>停用Docker自动唤醒机制：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl stop docker.socket</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>查看Docker自动唤醒机制是否关闭：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n<p>发现已经关闭</p>\n<p>停用Docker：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl stop docker</span><br></pre></td></tr></table></figure>\n<p>如果回头想要开启自动唤醒机制：*<strong>*systemctl start docker.socket**</strong>，即可开启</p>\n<h5 id=\"2-删除Docker软件包：\"><a href=\"#2-删除Docker软件包：\" class=\"headerlink\" title=\"2. 删除Docker软件包：\"></a>2. 删除Docker软件包：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 可以使用purge进行删除</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sudo apt-get purge docker-ce</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 正常使用yum命令进行删除</span></span><br><span class=\"line\">sudo apt remove docker-ce</span><br><span class=\"line\">tip：“purge”是Linux系统中的命令，用于彻底删除软件包及其配置文件。与&quot;remove&quot;命令不同，&quot;purge&quot;命令会删除软件包及其配置文件，包括在软件包安装期间创建的任何配置文件和数据文件。&quot;purge&quot;命令可以确保软件包及其相关文件完全从系统中删除，以释放磁盘空间并避免潜在的冲突和问题。</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-删除Docker镜像、容器和数据卷：\"><a href=\"#3-删除Docker镜像、容器和数据卷：\" class=\"headerlink\" title=\"3. 删除Docker镜像、容器和数据卷：\"></a>3. 删除Docker镜像、容器和数据卷：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-删除Docker配置文件：\"><a href=\"#4-删除Docker配置文件：\" class=\"headerlink\" title=\"4. 删除Docker配置文件：\"></a>4. 删除Docker配置文件：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-删除Docker用户组：\"><a href=\"#5-删除Docker用户组：\" class=\"headerlink\" title=\"5. 删除Docker用户组：\"></a>5. 删除Docker用户组：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo groupdel docker</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-删除Docker安装包：\"><a href=\"#6-删除Docker安装包：\" class=\"headerlink\" title=\"6. 删除Docker安装包：\"></a>6. 删除Docker安装包：</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm /usr/bin/docker</span><br></pre></td></tr></table></figure>\n<h5 id=\"7-删除Docker-compose安装包（没有安装包可以忽略）\"><a href=\"#7-删除Docker-compose安装包（没有安装包可以忽略）\" class=\"headerlink\" title=\"7. 删除Docker-compose安装包（没有安装包可以忽略）\"></a>7. 删除Docker-compose安装包（没有安装包可以忽略）</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>"},{"title":"ubuntu安装Docker","author":"尘归尘|土归土","date":"2024-07-04T16:00:00.000Z","_content":"\n# ubuntu20.04安装Docker\n\n安装必要支持\n\n```\nsudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release\n```\n\n设置安装源\n\n```\n#添加 Docker 官方 GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n#添加 apt 源:\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n#更新源\nsudo apt update\nsudo apt-get update\n```\n\n\n\n安装Docker\n\n```\n#安装最新版本的Docker\nsudo apt install docker-ce docker-ce-cli containerd.io\n#等待安装完成\n\n#查看Docker版本\nsudo docker version\n\n#查看Docker运行状态\nsudo systemctl status docker\n```\n\n安装Docker命令补全工具\n\n```\nsudo apt-get install bash-completion\n\nsudo curl -L https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker -o /etc/bash_completion.d/docker.sh\n\nsource /etc/bash_completion.d/docker.sh\n```\n\n检查Docker版本\n\n```\ndocker -v\n```\n\n安装完成\n\n","source":"_posts/2024-07-05-ubuntu20.04安装Docker.md","raw":"---\ntitle: ubuntu安装Docker\nauthor: 尘归尘|土归土\ndate: 2024-07-05\ntags: [实践]\ncategories: 文\n---\n\n# ubuntu20.04安装Docker\n\n安装必要支持\n\n```\nsudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release\n```\n\n设置安装源\n\n```\n#添加 Docker 官方 GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n#添加 apt 源:\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n#更新源\nsudo apt update\nsudo apt-get update\n```\n\n\n\n安装Docker\n\n```\n#安装最新版本的Docker\nsudo apt install docker-ce docker-ce-cli containerd.io\n#等待安装完成\n\n#查看Docker版本\nsudo docker version\n\n#查看Docker运行状态\nsudo systemctl status docker\n```\n\n安装Docker命令补全工具\n\n```\nsudo apt-get install bash-completion\n\nsudo curl -L https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker -o /etc/bash_completion.d/docker.sh\n\nsource /etc/bash_completion.d/docker.sh\n```\n\n检查Docker版本\n\n```\ndocker -v\n```\n\n安装完成\n\n","slug":"2024-07-05-ubuntu20.04安装Docker","published":1,"updated":"2024-07-05T15:05:41.797Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc4t0007vbinbo559wuo","content":"<h1 id=\"ubuntu20-04安装Docker\"><a href=\"#ubuntu20-04安装Docker\" class=\"headerlink\" title=\"ubuntu20.04安装Docker\"></a>ubuntu20.04安装Docker</h1><p>安装必要支持</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release</span><br></pre></td></tr></table></figure>\n<p>设置安装源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#添加 Docker 官方 GPG key</span><br><span class=\"line\">curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg</span><br><span class=\"line\"></span><br><span class=\"line\">#添加 apt 源:</span><br><span class=\"line\">echo &quot;deb [arch&#x3D;$(dpkg --print-architecture) signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null</span><br><span class=\"line\"></span><br><span class=\"line\">#更新源</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n\n<p>安装Docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#安装最新版本的Docker</span><br><span class=\"line\">sudo apt install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">#等待安装完成</span><br><span class=\"line\"></span><br><span class=\"line\">#查看Docker版本</span><br><span class=\"line\">sudo docker version</span><br><span class=\"line\"></span><br><span class=\"line\">#查看Docker运行状态</span><br><span class=\"line\">sudo systemctl status docker</span><br></pre></td></tr></table></figure>\n<p>安装Docker命令补全工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install bash-completion</span><br><span class=\"line\"></span><br><span class=\"line\">sudo curl -L https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;docker&#x2F;docker-ce&#x2F;master&#x2F;components&#x2F;cli&#x2F;contrib&#x2F;completion&#x2F;bash&#x2F;docker -o &#x2F;etc&#x2F;bash_completion.d&#x2F;docker.sh</span><br><span class=\"line\"></span><br><span class=\"line\">source &#x2F;etc&#x2F;bash_completion.d&#x2F;docker.sh</span><br></pre></td></tr></table></figure>\n<p>检查Docker版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker -v</span><br></pre></td></tr></table></figure>\n<p>安装完成</p>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h1 id=\"ubuntu20-04安装Docker\"><a href=\"#ubuntu20-04安装Docker\" class=\"headerlink\" title=\"ubuntu20.04安装Docker\"></a>ubuntu20.04安装Docker</h1><p>安装必要支持</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release</span><br></pre></td></tr></table></figure>\n<p>设置安装源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#添加 Docker 官方 GPG key</span><br><span class=\"line\">curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg</span><br><span class=\"line\"></span><br><span class=\"line\">#添加 apt 源:</span><br><span class=\"line\">echo &quot;deb [arch&#x3D;$(dpkg --print-architecture) signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null</span><br><span class=\"line\"></span><br><span class=\"line\">#更新源</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n\n<p>安装Docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#安装最新版本的Docker</span><br><span class=\"line\">sudo apt install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">#等待安装完成</span><br><span class=\"line\"></span><br><span class=\"line\">#查看Docker版本</span><br><span class=\"line\">sudo docker version</span><br><span class=\"line\"></span><br><span class=\"line\">#查看Docker运行状态</span><br><span class=\"line\">sudo systemctl status docker</span><br></pre></td></tr></table></figure>\n<p>安装Docker命令补全工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install bash-completion</span><br><span class=\"line\"></span><br><span class=\"line\">sudo curl -L https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;docker&#x2F;docker-ce&#x2F;master&#x2F;components&#x2F;cli&#x2F;contrib&#x2F;completion&#x2F;bash&#x2F;docker -o &#x2F;etc&#x2F;bash_completion.d&#x2F;docker.sh</span><br><span class=\"line\"></span><br><span class=\"line\">source &#x2F;etc&#x2F;bash_completion.d&#x2F;docker.sh</span><br></pre></td></tr></table></figure>\n<p>检查Docker版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker -v</span><br></pre></td></tr></table></figure>\n<p>安装完成</p>\n"},{"title":"在自己服务器上部署Rustdesk服务","author":"尘归尘|土归土","date":"2024-07-04T16:00:00.000Z","_content":"\n# 在自己服务器上部署Rustdesk服务\n\n---\n\n<u>*下面的官方文档是个坑，总是卡死，把电脑搞死机，都要崩溃了后面另外找了一种docker直接拉去镜像的方式成功了。*</u>\n\n最近想研究一下手机远程手机怎么操作，看了一圈发现有个开源的软件rustdesk使用软件的服务发现在中国区域好像不能链接需要自己搭建服务。于是准备折腾一下。\n\n找到官网教程按步骤进行如下操作\n\n目标路径下创建文件夹\n\n```\nmkdir rustdesk\n```\n\n### 克隆版本库并构建 Docker 容器:\n\n```\ngit clone https://github.com/rustdesk/rustdesk # 克隆Github存储库\ncd rustdesk # 进入文件夹\ndocker build -t \"rustdesk-builder\" . # 构建容器\n```\n\n报如下错误\n\n```\nERROR: \"docker buildx build\" requires exactly 1 argument.\nSee 'docker buildx build --help'.\n\nUsage:  docker buildx build [OPTIONS] PATH | URL | -\n\nStart a build\n```\n\n查到出错原因是命令最后需要***\\*一个空格和一个点\\****复制的时候没注意，即：\n\n```\ndocker build -t \"rustdesk-builder\" .\n```\n\n### 构建 RustDesk 程序\n\n然后, 每次需要构建应用程序时, 运行以下命令:\n\n```\ndocker run --rm -it -v $PWD:/home/user/rustdesk -v rustdesk-git-cache:/home/user/.cargo/git -v rustdesk-registry-cache:/home/user/.cargo/registry -e PUID=\"$(id -u)\" -e PGID=\"$(id -g)\" rustdesk-builder\n```\n\n这里中间在第441文件处卡住了。导致服务器死机了。重启后继续运行正常了。重启好多回反复执行很多次。总是下几个卡一会。执行几个步骤就卡死。\n\n\n\n请注意:\n\n- 因为需要缓存依赖项，首次构建一般很慢（国内网络会经常出现拉取失败，可以多试几次）。\n\n- 如果您需要添加不同的构建参数，可以在指令末尾的`<OPTIONAL-ARGS>` 位置进行修改。例如构建一个\"Release\"版本，在指令后面加上` --release`即可。\n\n- 如果出现以下的提示，则是无权限问题，可以尝试把\n\n  ```\n  -e PUID=\"$(id -u)\" -e PGID=\"$(id -g)\"\n  ```\n\n  参数去掉。\n\n  ```\n  usermod: user user is currently used by process 1\n  groupmod: Permission denied.\n  groupmod: cannot lock /etc/group; try again later.\n  ```\n\n  \n\n  > **原因：** 容器的 entrypoint 脚本会检测 UID 和 GID，在度判和给定的环境变量的不一致时，会强行修改 user 的 UID 和 GID 并重新运行。但在重启后读不到环境中的 UID 和 GID，然后再次进入判错重启环节\n\n### 运行 RustDesk 程序\n\n\n\n生成的可执行程序在 target 目录下，可直接通过指令运行调试 (Debug) 版本的 RustDesk:\n\n```\ntarget/debug/rustdesk\n```\n\n\n\n或者您想运行发行 (Release) 版本:\n\n```\ntarget/release/rustdesk\n```\n\n\n\n请注意：\n\n- 请保证您运行的目录是在 RustDesk 库的根目录内，否则软件会读不到文件。\n- `install`、`run`等 Cargo 的子指令在容器内不可用，宿主机才行。\n\n---\n\n# 上面看不懂，下面是我另外找的方法。\n\n## 拉取镜像\n\n```bash\n# 拉不动的请搜索“docker国内镜像站”修改镜像地址\nsudo docker image pull rustdesk/rustdesk-server\n```\n\n## 开启hbbs\n\n```bash\ndocker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `pwd`:/root -it --net=host --rm rustdesk/rustdesk-server hbbs -r 8.217.217.218\n```\n\n## 开启hbbr\n\n```bash\ndocker run --name hbbr -p 26117:21117 -p 26119:21119 -v [你的自定义地址/hbbr]:/root -td rustdesk/rustdesk-server hbbr\n```\n\n将hhbs,hhbr配置为shell脚本注册成服务进行自启动\n\n### 获取默认key\n\n```bash\n# 1.进入镜像\nsudo docker exec -it hbbs bash \n# 2.获取key\ncat ./id_ed25519.pub \n```\n\n### 最后\n\n在rustdesk中配置好就行\n\n8.8.8.8:21116\n8.8.8.8:21117\n\n在点文件中获取的key./id_ed25519.pub \n","source":"_posts/2024-07-05-在自己服务器上部署Rustdesk服务.md","raw":"---\ntitle: 在自己服务器上部署Rustdesk服务\nauthor: 尘归尘|土归土\ndate: 2024-07-05\ntags: [实践]\ncategories: 文\n---\n\n# 在自己服务器上部署Rustdesk服务\n\n---\n\n<u>*下面的官方文档是个坑，总是卡死，把电脑搞死机，都要崩溃了后面另外找了一种docker直接拉去镜像的方式成功了。*</u>\n\n最近想研究一下手机远程手机怎么操作，看了一圈发现有个开源的软件rustdesk使用软件的服务发现在中国区域好像不能链接需要自己搭建服务。于是准备折腾一下。\n\n找到官网教程按步骤进行如下操作\n\n目标路径下创建文件夹\n\n```\nmkdir rustdesk\n```\n\n### 克隆版本库并构建 Docker 容器:\n\n```\ngit clone https://github.com/rustdesk/rustdesk # 克隆Github存储库\ncd rustdesk # 进入文件夹\ndocker build -t \"rustdesk-builder\" . # 构建容器\n```\n\n报如下错误\n\n```\nERROR: \"docker buildx build\" requires exactly 1 argument.\nSee 'docker buildx build --help'.\n\nUsage:  docker buildx build [OPTIONS] PATH | URL | -\n\nStart a build\n```\n\n查到出错原因是命令最后需要***\\*一个空格和一个点\\****复制的时候没注意，即：\n\n```\ndocker build -t \"rustdesk-builder\" .\n```\n\n### 构建 RustDesk 程序\n\n然后, 每次需要构建应用程序时, 运行以下命令:\n\n```\ndocker run --rm -it -v $PWD:/home/user/rustdesk -v rustdesk-git-cache:/home/user/.cargo/git -v rustdesk-registry-cache:/home/user/.cargo/registry -e PUID=\"$(id -u)\" -e PGID=\"$(id -g)\" rustdesk-builder\n```\n\n这里中间在第441文件处卡住了。导致服务器死机了。重启后继续运行正常了。重启好多回反复执行很多次。总是下几个卡一会。执行几个步骤就卡死。\n\n\n\n请注意:\n\n- 因为需要缓存依赖项，首次构建一般很慢（国内网络会经常出现拉取失败，可以多试几次）。\n\n- 如果您需要添加不同的构建参数，可以在指令末尾的`<OPTIONAL-ARGS>` 位置进行修改。例如构建一个\"Release\"版本，在指令后面加上` --release`即可。\n\n- 如果出现以下的提示，则是无权限问题，可以尝试把\n\n  ```\n  -e PUID=\"$(id -u)\" -e PGID=\"$(id -g)\"\n  ```\n\n  参数去掉。\n\n  ```\n  usermod: user user is currently used by process 1\n  groupmod: Permission denied.\n  groupmod: cannot lock /etc/group; try again later.\n  ```\n\n  \n\n  > **原因：** 容器的 entrypoint 脚本会检测 UID 和 GID，在度判和给定的环境变量的不一致时，会强行修改 user 的 UID 和 GID 并重新运行。但在重启后读不到环境中的 UID 和 GID，然后再次进入判错重启环节\n\n### 运行 RustDesk 程序\n\n\n\n生成的可执行程序在 target 目录下，可直接通过指令运行调试 (Debug) 版本的 RustDesk:\n\n```\ntarget/debug/rustdesk\n```\n\n\n\n或者您想运行发行 (Release) 版本:\n\n```\ntarget/release/rustdesk\n```\n\n\n\n请注意：\n\n- 请保证您运行的目录是在 RustDesk 库的根目录内，否则软件会读不到文件。\n- `install`、`run`等 Cargo 的子指令在容器内不可用，宿主机才行。\n\n---\n\n# 上面看不懂，下面是我另外找的方法。\n\n## 拉取镜像\n\n```bash\n# 拉不动的请搜索“docker国内镜像站”修改镜像地址\nsudo docker image pull rustdesk/rustdesk-server\n```\n\n## 开启hbbs\n\n```bash\ndocker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `pwd`:/root -it --net=host --rm rustdesk/rustdesk-server hbbs -r 8.217.217.218\n```\n\n## 开启hbbr\n\n```bash\ndocker run --name hbbr -p 26117:21117 -p 26119:21119 -v [你的自定义地址/hbbr]:/root -td rustdesk/rustdesk-server hbbr\n```\n\n将hhbs,hhbr配置为shell脚本注册成服务进行自启动\n\n### 获取默认key\n\n```bash\n# 1.进入镜像\nsudo docker exec -it hbbs bash \n# 2.获取key\ncat ./id_ed25519.pub \n```\n\n### 最后\n\n在rustdesk中配置好就行\n\n8.8.8.8:21116\n8.8.8.8:21117\n\n在点文件中获取的key./id_ed25519.pub \n","slug":"2024-07-05-在自己服务器上部署Rustdesk服务","published":1,"updated":"2024-07-05T15:05:42.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc4w0009vbin5elg6o1m","content":"<h1 id=\"在自己服务器上部署Rustdesk服务\"><a href=\"#在自己服务器上部署Rustdesk服务\" class=\"headerlink\" title=\"在自己服务器上部署Rustdesk服务\"></a>在自己服务器上部署Rustdesk服务</h1><hr>\n<p><u><em>下面的官方文档是个坑，总是卡死，把电脑搞死机，都要崩溃了后面另外找了一种docker直接拉去镜像的方式成功了。</em></u></p>\n<p>最近想研究一下手机远程手机怎么操作，看了一圈发现有个开源的软件rustdesk使用软件的服务发现在中国区域好像不能链接需要自己搭建服务。于是准备折腾一下。</p>\n<p>找到官网教程按步骤进行如下操作</p>\n<p>目标路径下创建文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir rustdesk</span><br></pre></td></tr></table></figure>\n<h3 id=\"克隆版本库并构建-Docker-容器\"><a href=\"#克隆版本库并构建-Docker-容器\" class=\"headerlink\" title=\"克隆版本库并构建 Docker 容器:\"></a>克隆版本库并构建 Docker 容器:</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;rustdesk&#x2F;rustdesk # 克隆Github存储库</span><br><span class=\"line\">cd rustdesk # 进入文件夹</span><br><span class=\"line\">docker build -t &quot;rustdesk-builder&quot; . # 构建容器</span><br></pre></td></tr></table></figure>\n<p>报如下错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR: &quot;docker buildx build&quot; requires exactly 1 argument.</span><br><span class=\"line\">See &#39;docker buildx build --help&#39;.</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:  docker buildx build [OPTIONS] PATH | URL | -</span><br><span class=\"line\"></span><br><span class=\"line\">Start a build</span><br></pre></td></tr></table></figure>\n<p>查到出错原因是命令最后需要*<strong>*一个空格和一个点**</strong>复制的时候没注意，即：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker build -t &quot;rustdesk-builder&quot; .</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建-RustDesk-程序\"><a href=\"#构建-RustDesk-程序\" class=\"headerlink\" title=\"构建 RustDesk 程序\"></a>构建 RustDesk 程序</h3><p>然后, 每次需要构建应用程序时, 运行以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --rm -it -v $PWD:&#x2F;home&#x2F;user&#x2F;rustdesk -v rustdesk-git-cache:&#x2F;home&#x2F;user&#x2F;.cargo&#x2F;git -v rustdesk-registry-cache:&#x2F;home&#x2F;user&#x2F;.cargo&#x2F;registry -e PUID&#x3D;&quot;$(id -u)&quot; -e PGID&#x3D;&quot;$(id -g)&quot; rustdesk-builder</span><br></pre></td></tr></table></figure>\n<p>这里中间在第441文件处卡住了。导致服务器死机了。重启后继续运行正常了。重启好多回反复执行很多次。总是下几个卡一会。执行几个步骤就卡死。</p>\n<p>请注意:</p>\n<ul>\n<li><p>因为需要缓存依赖项，首次构建一般很慢（国内网络会经常出现拉取失败，可以多试几次）。</p>\n</li>\n<li><p>如果您需要添加不同的构建参数，可以在指令末尾的<code>&lt;OPTIONAL-ARGS&gt;</code> 位置进行修改。例如构建一个”Release”版本，在指令后面加上<code> --release</code>即可。</p>\n</li>\n<li><p>如果出现以下的提示，则是无权限问题，可以尝试把</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-e PUID&#x3D;&quot;$(id -u)&quot; -e PGID&#x3D;&quot;$(id -g)&quot;</span><br></pre></td></tr></table></figure>\n<p>参数去掉。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">usermod: user user is currently used by process 1</span><br><span class=\"line\">groupmod: Permission denied.</span><br><span class=\"line\">groupmod: cannot lock &#x2F;etc&#x2F;group; try again later.</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<blockquote>\n<p><strong>原因：</strong> 容器的 entrypoint 脚本会检测 UID 和 GID，在度判和给定的环境变量的不一致时，会强行修改 user 的 UID 和 GID 并重新运行。但在重启后读不到环境中的 UID 和 GID，然后再次进入判错重启环节</p>\n</blockquote>\n<h3 id=\"运行-RustDesk-程序\"><a href=\"#运行-RustDesk-程序\" class=\"headerlink\" title=\"运行 RustDesk 程序\"></a>运行 RustDesk 程序</h3><p>生成的可执行程序在 target 目录下，可直接通过指令运行调试 (Debug) 版本的 RustDesk:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">target&#x2F;debug&#x2F;rustdesk</span><br></pre></td></tr></table></figure>\n\n\n<p>或者您想运行发行 (Release) 版本:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">target&#x2F;release&#x2F;rustdesk</span><br></pre></td></tr></table></figure>\n\n\n<p>请注意：</p>\n<ul>\n<li>请保证您运行的目录是在 RustDesk 库的根目录内，否则软件会读不到文件。</li>\n<li><code>install</code>、<code>run</code>等 Cargo 的子指令在容器内不可用，宿主机才行。</li>\n</ul>\n<hr>\n<h1 id=\"上面看不懂，下面是我另外找的方法。\"><a href=\"#上面看不懂，下面是我另外找的方法。\" class=\"headerlink\" title=\"上面看不懂，下面是我另外找的方法。\"></a>上面看不懂，下面是我另外找的方法。</h1><h2 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉不动的请搜索“docker国内镜像站”修改镜像地址</span></span><br><span class=\"line\">sudo docker image pull rustdesk/rustdesk-server</span><br></pre></td></tr></table></figure>\n<h2 id=\"开启hbbs\"><a href=\"#开启hbbs\" class=\"headerlink\" title=\"开启hbbs\"></a>开启hbbs</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `<span class=\"built_in\">pwd</span>`:/root -it --net=host --rm rustdesk/rustdesk-server hbbs -r 8.217.217.218</span><br></pre></td></tr></table></figure>\n<h2 id=\"开启hbbr\"><a href=\"#开启hbbr\" class=\"headerlink\" title=\"开启hbbr\"></a>开启hbbr</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name hbbr -p 26117:21117 -p 26119:21119 -v [你的自定义地址/hbbr]:/root -td rustdesk/rustdesk-server hbbr</span><br></pre></td></tr></table></figure>\n<p>将hhbs,hhbr配置为shell脚本注册成服务进行自启动</p>\n<h3 id=\"获取默认key\"><a href=\"#获取默认key\" class=\"headerlink\" title=\"获取默认key\"></a>获取默认key</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.进入镜像</span></span><br><span class=\"line\">sudo docker <span class=\"built_in\">exec</span> -it hbbs bash </span><br><span class=\"line\"><span class=\"comment\"># 2.获取key</span></span><br><span class=\"line\">cat ./id_ed25519.pub </span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>在rustdesk中配置好就行</p>\n<p>8.8.8.8:21116<br>8.8.8.8:21117</p>\n<p>在点文件中获取的key./id_ed25519.pub </p>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h1 id=\"在自己服务器上部署Rustdesk服务\"><a href=\"#在自己服务器上部署Rustdesk服务\" class=\"headerlink\" title=\"在自己服务器上部署Rustdesk服务\"></a>在自己服务器上部署Rustdesk服务</h1><hr>\n<p><u><em>下面的官方文档是个坑，总是卡死，把电脑搞死机，都要崩溃了后面另外找了一种docker直接拉去镜像的方式成功了。</em></u></p>\n<p>最近想研究一下手机远程手机怎么操作，看了一圈发现有个开源的软件rustdesk使用软件的服务发现在中国区域好像不能链接需要自己搭建服务。于是准备折腾一下。</p>\n<p>找到官网教程按步骤进行如下操作</p>\n<p>目标路径下创建文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir rustdesk</span><br></pre></td></tr></table></figure>\n<h3 id=\"克隆版本库并构建-Docker-容器\"><a href=\"#克隆版本库并构建-Docker-容器\" class=\"headerlink\" title=\"克隆版本库并构建 Docker 容器:\"></a>克隆版本库并构建 Docker 容器:</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;rustdesk&#x2F;rustdesk # 克隆Github存储库</span><br><span class=\"line\">cd rustdesk # 进入文件夹</span><br><span class=\"line\">docker build -t &quot;rustdesk-builder&quot; . # 构建容器</span><br></pre></td></tr></table></figure>\n<p>报如下错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR: &quot;docker buildx build&quot; requires exactly 1 argument.</span><br><span class=\"line\">See &#39;docker buildx build --help&#39;.</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:  docker buildx build [OPTIONS] PATH | URL | -</span><br><span class=\"line\"></span><br><span class=\"line\">Start a build</span><br></pre></td></tr></table></figure>\n<p>查到出错原因是命令最后需要*<strong>*一个空格和一个点**</strong>复制的时候没注意，即：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker build -t &quot;rustdesk-builder&quot; .</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建-RustDesk-程序\"><a href=\"#构建-RustDesk-程序\" class=\"headerlink\" title=\"构建 RustDesk 程序\"></a>构建 RustDesk 程序</h3><p>然后, 每次需要构建应用程序时, 运行以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --rm -it -v $PWD:&#x2F;home&#x2F;user&#x2F;rustdesk -v rustdesk-git-cache:&#x2F;home&#x2F;user&#x2F;.cargo&#x2F;git -v rustdesk-registry-cache:&#x2F;home&#x2F;user&#x2F;.cargo&#x2F;registry -e PUID&#x3D;&quot;$(id -u)&quot; -e PGID&#x3D;&quot;$(id -g)&quot; rustdesk-builder</span><br></pre></td></tr></table></figure>\n<p>这里中间在第441文件处卡住了。导致服务器死机了。重启后继续运行正常了。重启好多回反复执行很多次。总是下几个卡一会。执行几个步骤就卡死。</p>\n<p>请注意:</p>\n<ul>\n<li><p>因为需要缓存依赖项，首次构建一般很慢（国内网络会经常出现拉取失败，可以多试几次）。</p>\n</li>\n<li><p>如果您需要添加不同的构建参数，可以在指令末尾的<code>&lt;OPTIONAL-ARGS&gt;</code> 位置进行修改。例如构建一个”Release”版本，在指令后面加上<code> --release</code>即可。</p>\n</li>\n<li><p>如果出现以下的提示，则是无权限问题，可以尝试把</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-e PUID&#x3D;&quot;$(id -u)&quot; -e PGID&#x3D;&quot;$(id -g)&quot;</span><br></pre></td></tr></table></figure>\n<p>参数去掉。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">usermod: user user is currently used by process 1</span><br><span class=\"line\">groupmod: Permission denied.</span><br><span class=\"line\">groupmod: cannot lock &#x2F;etc&#x2F;group; try again later.</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<blockquote>\n<p><strong>原因：</strong> 容器的 entrypoint 脚本会检测 UID 和 GID，在度判和给定的环境变量的不一致时，会强行修改 user 的 UID 和 GID 并重新运行。但在重启后读不到环境中的 UID 和 GID，然后再次进入判错重启环节</p>\n</blockquote>\n<h3 id=\"运行-RustDesk-程序\"><a href=\"#运行-RustDesk-程序\" class=\"headerlink\" title=\"运行 RustDesk 程序\"></a>运行 RustDesk 程序</h3><p>生成的可执行程序在 target 目录下，可直接通过指令运行调试 (Debug) 版本的 RustDesk:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">target&#x2F;debug&#x2F;rustdesk</span><br></pre></td></tr></table></figure>\n\n\n<p>或者您想运行发行 (Release) 版本:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">target&#x2F;release&#x2F;rustdesk</span><br></pre></td></tr></table></figure>\n\n\n<p>请注意：</p>\n<ul>\n<li>请保证您运行的目录是在 RustDesk 库的根目录内，否则软件会读不到文件。</li>\n<li><code>install</code>、<code>run</code>等 Cargo 的子指令在容器内不可用，宿主机才行。</li>\n</ul>\n<hr>\n<h1 id=\"上面看不懂，下面是我另外找的方法。\"><a href=\"#上面看不懂，下面是我另外找的方法。\" class=\"headerlink\" title=\"上面看不懂，下面是我另外找的方法。\"></a>上面看不懂，下面是我另外找的方法。</h1><h2 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉不动的请搜索“docker国内镜像站”修改镜像地址</span></span><br><span class=\"line\">sudo docker image pull rustdesk/rustdesk-server</span><br></pre></td></tr></table></figure>\n<h2 id=\"开启hbbs\"><a href=\"#开启hbbs\" class=\"headerlink\" title=\"开启hbbs\"></a>开启hbbs</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `<span class=\"built_in\">pwd</span>`:/root -it --net=host --rm rustdesk/rustdesk-server hbbs -r 8.217.217.218</span><br></pre></td></tr></table></figure>\n<h2 id=\"开启hbbr\"><a href=\"#开启hbbr\" class=\"headerlink\" title=\"开启hbbr\"></a>开启hbbr</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name hbbr -p 26117:21117 -p 26119:21119 -v [你的自定义地址/hbbr]:/root -td rustdesk/rustdesk-server hbbr</span><br></pre></td></tr></table></figure>\n<p>将hhbs,hhbr配置为shell脚本注册成服务进行自启动</p>\n<h3 id=\"获取默认key\"><a href=\"#获取默认key\" class=\"headerlink\" title=\"获取默认key\"></a>获取默认key</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.进入镜像</span></span><br><span class=\"line\">sudo docker <span class=\"built_in\">exec</span> -it hbbs bash </span><br><span class=\"line\"><span class=\"comment\"># 2.获取key</span></span><br><span class=\"line\">cat ./id_ed25519.pub </span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>在rustdesk中配置好就行</p>\n<p>8.8.8.8:21116<br>8.8.8.8:21117</p>\n<p>在点文件中获取的key./id_ed25519.pub </p>\n"},{"title":"记录删除通过yml文件生成的docker容器","author":"尘归尘|土归土","date":"2024-07-05T07:52:07.000Z","_content":"\n# 记录删除通过yml文件生成的docker容器\n\n移除通过`docker compose -f /root/rustdesk-server.yml up -d`命令部署的容器\n\n在`rustdesk-server.yml`配置了信息，后来发现胡乱抄了别人的信息发现不能用。要修改后重新弄。所以想删除刚刚上面生成的容器。\n\n先使用\n\n```\ndocker stop id\n```\n\n来停止对应的容器发现不行报错\n\n```\n+] Running 1/1\n ✘ Container hbbs  Error while Stopping 14.0s \nError response from daemon: cannot stop container: 854372fa8df7a09bf8b348e54f98fc130d2c1e457c7a27d52a0f0a395b767fc3: permission denied\n```\n\n**试了一些方式发现解决不了不行**，\n\n使用\n\n```\naa-remove-unknown\n```\n\n然后来停止容易发现`docker`命令都没有了。\n\n于是重启服务器\n\n再来停止容器，奇迹般的成功了。\n\n然后使用\n\n```\ndocker compose down\n```\n\n删除容器发现不行，这个命令是用来删除 `docker-compose.yml`文件配置运行的容器。于是依葫芦画瓢\n\n```\ndocker compose -f /root/rustdesk-server.yml down -d\n```\n\n就成功了。\n\n下面命令可以删除所有已停止的容器。\n\n```bash\ndocker compose rm -f\n```","source":"_posts/2024-07-05-记录删除通过yml文件生成的docker容器.md","raw":"---\ntitle: 记录删除通过yml文件生成的docker容器\nauthor: 尘归尘|土归土\ndate: 2024-07-05 15:52:07\ntags: [学习]\ncategories: 文|技\n\n---\n\n# 记录删除通过yml文件生成的docker容器\n\n移除通过`docker compose -f /root/rustdesk-server.yml up -d`命令部署的容器\n\n在`rustdesk-server.yml`配置了信息，后来发现胡乱抄了别人的信息发现不能用。要修改后重新弄。所以想删除刚刚上面生成的容器。\n\n先使用\n\n```\ndocker stop id\n```\n\n来停止对应的容器发现不行报错\n\n```\n+] Running 1/1\n ✘ Container hbbs  Error while Stopping 14.0s \nError response from daemon: cannot stop container: 854372fa8df7a09bf8b348e54f98fc130d2c1e457c7a27d52a0f0a395b767fc3: permission denied\n```\n\n**试了一些方式发现解决不了不行**，\n\n使用\n\n```\naa-remove-unknown\n```\n\n然后来停止容易发现`docker`命令都没有了。\n\n于是重启服务器\n\n再来停止容器，奇迹般的成功了。\n\n然后使用\n\n```\ndocker compose down\n```\n\n删除容器发现不行，这个命令是用来删除 `docker-compose.yml`文件配置运行的容器。于是依葫芦画瓢\n\n```\ndocker compose -f /root/rustdesk-server.yml down -d\n```\n\n就成功了。\n\n下面命令可以删除所有已停止的容器。\n\n```bash\ndocker compose rm -f\n```","slug":"2024-07-05-记录删除通过yml文件生成的docker容器","published":1,"updated":"2024-07-05T15:05:41.893Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc4y000bvbin51vp6ahn","content":"<h1 id=\"记录删除通过yml文件生成的docker容器\"><a href=\"#记录删除通过yml文件生成的docker容器\" class=\"headerlink\" title=\"记录删除通过yml文件生成的docker容器\"></a>记录删除通过yml文件生成的docker容器</h1><p>移除通过<code>docker compose -f /root/rustdesk-server.yml up -d</code>命令部署的容器</p>\n<p>在<code>rustdesk-server.yml</code>配置了信息，后来发现胡乱抄了别人的信息发现不能用。要修改后重新弄。所以想删除刚刚上面生成的容器。</p>\n<p>先使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker stop id</span><br></pre></td></tr></table></figure>\n<p>来停止对应的容器发现不行报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">+] Running 1&#x2F;1</span><br><span class=\"line\"> ✘ Container hbbs  Error while Stopping 14.0s </span><br><span class=\"line\">Error response from daemon: cannot stop container: 854372fa8df7a09bf8b348e54f98fc130d2c1e457c7a27d52a0f0a395b767fc3: permission denied</span><br></pre></td></tr></table></figure>\n<p><strong>试了一些方式发现解决不了不行</strong>，</p>\n<p>使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">aa-remove-unknown</span><br></pre></td></tr></table></figure>\n<p>然后来停止容易发现<code>docker</code>命令都没有了。</p>\n<p>于是重启服务器</p>\n<p>再来停止容器，奇迹般的成功了。</p>\n<p>然后使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker compose down</span><br></pre></td></tr></table></figure>\n<p>删除容器发现不行，这个命令是用来删除 <code>docker-compose.yml</code>文件配置运行的容器。于是依葫芦画瓢</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker compose -f &#x2F;root&#x2F;rustdesk-server.yml down -d</span><br></pre></td></tr></table></figure>\n<p>就成功了。</p>\n<p>下面命令可以删除所有已停止的容器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker compose rm -f</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<h1 id=\"记录删除通过yml文件生成的docker容器\"><a href=\"#记录删除通过yml文件生成的docker容器\" class=\"headerlink\" title=\"记录删除通过yml文件生成的docker容器\"></a>记录删除通过yml文件生成的docker容器</h1><p>移除通过<code>docker compose -f /root/rustdesk-server.yml up -d</code>命令部署的容器</p>\n<p>在<code>rustdesk-server.yml</code>配置了信息，后来发现胡乱抄了别人的信息发现不能用。要修改后重新弄。所以想删除刚刚上面生成的容器。</p>\n<p>先使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker stop id</span><br></pre></td></tr></table></figure>\n<p>来停止对应的容器发现不行报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">+] Running 1&#x2F;1</span><br><span class=\"line\"> ✘ Container hbbs  Error while Stopping 14.0s </span><br><span class=\"line\">Error response from daemon: cannot stop container: 854372fa8df7a09bf8b348e54f98fc130d2c1e457c7a27d52a0f0a395b767fc3: permission denied</span><br></pre></td></tr></table></figure>\n<p><strong>试了一些方式发现解决不了不行</strong>，</p>\n<p>使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">aa-remove-unknown</span><br></pre></td></tr></table></figure>\n<p>然后来停止容易发现<code>docker</code>命令都没有了。</p>\n<p>于是重启服务器</p>\n<p>再来停止容器，奇迹般的成功了。</p>\n<p>然后使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker compose down</span><br></pre></td></tr></table></figure>\n<p>删除容器发现不行，这个命令是用来删除 <code>docker-compose.yml</code>文件配置运行的容器。于是依葫芦画瓢</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker compose -f &#x2F;root&#x2F;rustdesk-server.yml down -d</span><br></pre></td></tr></table></figure>\n<p>就成功了。</p>\n<p>下面命令可以删除所有已停止的容器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker compose rm -f</span><br></pre></td></tr></table></figure>"},{"title":"记录设置docker容器开机自启动","author":"尘归尘|土归土","date":"2024-07-05T07:52:07.000Z","_content":"\n# 记录设置docker容器开机自启动\n\n## 一、docker服务设置自动\n\n查看是否设置开机启动 systemctl list-unit-files | grep enable\n\n设置开机启动 systemctl enable docker.service\n\n关闭开机启动 systemctl disable docker.service\n\n##  二、docker容器设置自动启动\n\n启动时加\n\n```\nrestart-always docker run -tid -name 容器id -p 端口号 -restart-always -v\n```\n\n 挂载\n\nFlag Description\n\n## 三、容器启动模式说明\n\n- **`no`** – 此策略永远不会自动启动容器。这是使用 `docker run` 创建的所有容器的默认策略。\n\n- **`always`** – Docker 将确保容器始终运行。如果容器停止，它将立即重新启动。您仍然可以使用 `docker stop` 手动停止容器，但 Docker 会在下次守护进程重新启动时将其恢复。\n\n- **`on-failure`** – 如果容器因错误而停止，它将重新启动。守护进程重启后，Docker 不会启动容器。\n\n- **`unless-stopped`** – 其功能类似于`always`。不同之处在于，如果容器已被手动停止，Docker 将永远不会重新启动容器。\n\n  # 四、已经运行的容器更新启动模式\n\n 如果已经过运行的项目 如果已经启动的项目.则使用update更新：\n\n```\n docker update --restart = always 容器id\n```\n\n","source":"_posts/2024-07-05-记录设置docker容器开机自启动.md","raw":"---\ntitle: 记录设置docker容器开机自启动\nauthor: 尘归尘|土归土\ndate: 2024-07-05 15:52:07\ntags: [记录]\ncategories: 文|技\n\n---\n\n# 记录设置docker容器开机自启动\n\n## 一、docker服务设置自动\n\n查看是否设置开机启动 systemctl list-unit-files | grep enable\n\n设置开机启动 systemctl enable docker.service\n\n关闭开机启动 systemctl disable docker.service\n\n##  二、docker容器设置自动启动\n\n启动时加\n\n```\nrestart-always docker run -tid -name 容器id -p 端口号 -restart-always -v\n```\n\n 挂载\n\nFlag Description\n\n## 三、容器启动模式说明\n\n- **`no`** – 此策略永远不会自动启动容器。这是使用 `docker run` 创建的所有容器的默认策略。\n\n- **`always`** – Docker 将确保容器始终运行。如果容器停止，它将立即重新启动。您仍然可以使用 `docker stop` 手动停止容器，但 Docker 会在下次守护进程重新启动时将其恢复。\n\n- **`on-failure`** – 如果容器因错误而停止，它将重新启动。守护进程重启后，Docker 不会启动容器。\n\n- **`unless-stopped`** – 其功能类似于`always`。不同之处在于，如果容器已被手动停止，Docker 将永远不会重新启动容器。\n\n  # 四、已经运行的容器更新启动模式\n\n 如果已经过运行的项目 如果已经启动的项目.则使用update更新：\n\n```\n docker update --restart = always 容器id\n```\n\n","slug":"2024-07-05-记录设置docker容器开机自启动","published":1,"updated":"2024-07-05T15:05:41.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc58000gvbing239bw2s","content":"<h1 id=\"记录设置docker容器开机自启动\"><a href=\"#记录设置docker容器开机自启动\" class=\"headerlink\" title=\"记录设置docker容器开机自启动\"></a>记录设置docker容器开机自启动</h1><h2 id=\"一、docker服务设置自动\"><a href=\"#一、docker服务设置自动\" class=\"headerlink\" title=\"一、docker服务设置自动\"></a>一、docker服务设置自动</h2><p>查看是否设置开机启动 systemctl list-unit-files | grep enable</p>\n<p>设置开机启动 systemctl enable docker.service</p>\n<p>关闭开机启动 systemctl disable docker.service</p>\n<h2 id=\"二、docker容器设置自动启动\"><a href=\"#二、docker容器设置自动启动\" class=\"headerlink\" title=\"二、docker容器设置自动启动\"></a>二、docker容器设置自动启动</h2><p>启动时加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">restart-always docker run -tid -name 容器id -p 端口号 -restart-always -v</span><br></pre></td></tr></table></figure>\n<p> 挂载</p>\n<p>Flag Description</p>\n<h2 id=\"三、容器启动模式说明\"><a href=\"#三、容器启动模式说明\" class=\"headerlink\" title=\"三、容器启动模式说明\"></a>三、容器启动模式说明</h2><ul>\n<li><p><strong><code>no</code></strong> – 此策略永远不会自动启动容器。这是使用 <code>docker run</code> 创建的所有容器的默认策略。</p>\n</li>\n<li><p><strong><code>always</code></strong> – Docker 将确保容器始终运行。如果容器停止，它将立即重新启动。您仍然可以使用 <code>docker stop</code> 手动停止容器，但 Docker 会在下次守护进程重新启动时将其恢复。</p>\n</li>\n<li><p><strong><code>on-failure</code></strong> – 如果容器因错误而停止，它将重新启动。守护进程重启后，Docker 不会启动容器。</p>\n</li>\n<li><p><strong><code>unless-stopped</code></strong> – 其功能类似于<code>always</code>。不同之处在于，如果容器已被手动停止，Docker 将永远不会重新启动容器。</p>\n<h1 id=\"四、已经运行的容器更新启动模式\"><a href=\"#四、已经运行的容器更新启动模式\" class=\"headerlink\" title=\"四、已经运行的容器更新启动模式\"></a>四、已经运行的容器更新启动模式</h1><p>如果已经过运行的项目 如果已经启动的项目.则使用update更新：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker update --restart &#x3D; always 容器id</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"http://pic1.win4000.com/wallpaper/f/5860af34d5340.jpg","excerpt":"","more":"<h1 id=\"记录设置docker容器开机自启动\"><a href=\"#记录设置docker容器开机自启动\" class=\"headerlink\" title=\"记录设置docker容器开机自启动\"></a>记录设置docker容器开机自启动</h1><h2 id=\"一、docker服务设置自动\"><a href=\"#一、docker服务设置自动\" class=\"headerlink\" title=\"一、docker服务设置自动\"></a>一、docker服务设置自动</h2><p>查看是否设置开机启动 systemctl list-unit-files | grep enable</p>\n<p>设置开机启动 systemctl enable docker.service</p>\n<p>关闭开机启动 systemctl disable docker.service</p>\n<h2 id=\"二、docker容器设置自动启动\"><a href=\"#二、docker容器设置自动启动\" class=\"headerlink\" title=\"二、docker容器设置自动启动\"></a>二、docker容器设置自动启动</h2><p>启动时加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">restart-always docker run -tid -name 容器id -p 端口号 -restart-always -v</span><br></pre></td></tr></table></figure>\n<p> 挂载</p>\n<p>Flag Description</p>\n<h2 id=\"三、容器启动模式说明\"><a href=\"#三、容器启动模式说明\" class=\"headerlink\" title=\"三、容器启动模式说明\"></a>三、容器启动模式说明</h2><ul>\n<li><p><strong><code>no</code></strong> – 此策略永远不会自动启动容器。这是使用 <code>docker run</code> 创建的所有容器的默认策略。</p>\n</li>\n<li><p><strong><code>always</code></strong> – Docker 将确保容器始终运行。如果容器停止，它将立即重新启动。您仍然可以使用 <code>docker stop</code> 手动停止容器，但 Docker 会在下次守护进程重新启动时将其恢复。</p>\n</li>\n<li><p><strong><code>on-failure</code></strong> – 如果容器因错误而停止，它将重新启动。守护进程重启后，Docker 不会启动容器。</p>\n</li>\n<li><p><strong><code>unless-stopped</code></strong> – 其功能类似于<code>always</code>。不同之处在于，如果容器已被手动停止，Docker 将永远不会重新启动容器。</p>\n<h1 id=\"四、已经运行的容器更新启动模式\"><a href=\"#四、已经运行的容器更新启动模式\" class=\"headerlink\" title=\"四、已经运行的容器更新启动模式\"></a>四、已经运行的容器更新启动模式</h1><p>如果已经过运行的项目 如果已经启动的项目.则使用update更新：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker update --restart &#x3D; always 容器id</span><br></pre></td></tr></table></figure>\n"},{"title":"设置服务器开机自动启动frps服务端","author":"戴昌益","date":"2024-07-05T07:52:07.000Z","_content":"\n# 设置服务器开机自动启动frps服务端\n\n使用文本编辑器，如 `vim` 创建并编辑 `frps.service` 文件。此处的文件名称决定了服务的名称。\n\n```\n$ vim /etc/systemd/system/frps.service\n```\n\n写入内容\n\n```\n[Unit]\n# 服务名称，可自定义\nDescription = frp server\nAfter = network.target syslog.target\nWants = network.target\n          \n[Service]\nType = simple\n# 启动frps的命令，需修改为您的frps的安装路径\nExecStart = /opt/frp/frps -c /opt/frp/frps.toml\n\n[Install]    \nWantedBy = multi-user.target\n\n```\n\n使用 `systemd` 命令，管理 frps。\n\n```\n# 启动frp\nsystemctl start frps\n# 停止frp\nsystemctl stop frps\n# 重启frp\nsystemctl restart frps\n# 查看frp状态\nsystemctl status frps\n```\n\n配置开机自启\n\n```\nsystemctl enable frps\n```\n\n","source":"_posts/2024-07-05-设置服务器开机自动启动frps服务端.md","raw":"---\ntitle: 设置服务器开机自动启动frps服务端\nauthor: 戴昌益\ndate: 2024-07-05 15:52:07\ntags: [记录]\ncategories: 文\n\n---\n\n# 设置服务器开机自动启动frps服务端\n\n使用文本编辑器，如 `vim` 创建并编辑 `frps.service` 文件。此处的文件名称决定了服务的名称。\n\n```\n$ vim /etc/systemd/system/frps.service\n```\n\n写入内容\n\n```\n[Unit]\n# 服务名称，可自定义\nDescription = frp server\nAfter = network.target syslog.target\nWants = network.target\n          \n[Service]\nType = simple\n# 启动frps的命令，需修改为您的frps的安装路径\nExecStart = /opt/frp/frps -c /opt/frp/frps.toml\n\n[Install]    \nWantedBy = multi-user.target\n\n```\n\n使用 `systemd` 命令，管理 frps。\n\n```\n# 启动frp\nsystemctl start frps\n# 停止frp\nsystemctl stop frps\n# 重启frp\nsystemctl restart frps\n# 查看frp状态\nsystemctl status frps\n```\n\n配置开机自启\n\n```\nsystemctl enable frps\n```\n\n","slug":"2024-07-05-设置服务器开机自动启动frps服务端","published":1,"updated":"2024-07-05T15:07:02.084Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5c000ivbinh8voaapd","content":"<h1 id=\"设置服务器开机自动启动frps服务端\"><a href=\"#设置服务器开机自动启动frps服务端\" class=\"headerlink\" title=\"设置服务器开机自动启动frps服务端\"></a>设置服务器开机自动启动frps服务端</h1><p>使用文本编辑器，如 <code>vim</code> 创建并编辑 <code>frps.service</code> 文件。此处的文件名称决定了服务的名称。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frps.service</span><br></pre></td></tr></table></figure>\n<p>写入内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\"># 服务名称，可自定义</span><br><span class=\"line\">Description &#x3D; frp server</span><br><span class=\"line\">After &#x3D; network.target syslog.target</span><br><span class=\"line\">Wants &#x3D; network.target</span><br><span class=\"line\">          </span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type &#x3D; simple</span><br><span class=\"line\"># 启动frps的命令，需修改为您的frps的安装路径</span><br><span class=\"line\">ExecStart &#x3D; &#x2F;opt&#x2F;frp&#x2F;frps -c &#x2F;opt&#x2F;frp&#x2F;frps.toml</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]    </span><br><span class=\"line\">WantedBy &#x3D; multi-user.target</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>使用 <code>systemd</code> 命令，管理 frps。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 启动frp</span><br><span class=\"line\">systemctl start frps</span><br><span class=\"line\"># 停止frp</span><br><span class=\"line\">systemctl stop frps</span><br><span class=\"line\"># 重启frp</span><br><span class=\"line\">systemctl restart frps</span><br><span class=\"line\"># 查看frp状态</span><br><span class=\"line\">systemctl status frps</span><br></pre></td></tr></table></figure>\n<p>配置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl enable frps</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h1 id=\"设置服务器开机自动启动frps服务端\"><a href=\"#设置服务器开机自动启动frps服务端\" class=\"headerlink\" title=\"设置服务器开机自动启动frps服务端\"></a>设置服务器开机自动启动frps服务端</h1><p>使用文本编辑器，如 <code>vim</code> 创建并编辑 <code>frps.service</code> 文件。此处的文件名称决定了服务的名称。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frps.service</span><br></pre></td></tr></table></figure>\n<p>写入内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\"># 服务名称，可自定义</span><br><span class=\"line\">Description &#x3D; frp server</span><br><span class=\"line\">After &#x3D; network.target syslog.target</span><br><span class=\"line\">Wants &#x3D; network.target</span><br><span class=\"line\">          </span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type &#x3D; simple</span><br><span class=\"line\"># 启动frps的命令，需修改为您的frps的安装路径</span><br><span class=\"line\">ExecStart &#x3D; &#x2F;opt&#x2F;frp&#x2F;frps -c &#x2F;opt&#x2F;frp&#x2F;frps.toml</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]    </span><br><span class=\"line\">WantedBy &#x3D; multi-user.target</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>使用 <code>systemd</code> 命令，管理 frps。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 启动frp</span><br><span class=\"line\">systemctl start frps</span><br><span class=\"line\"># 停止frp</span><br><span class=\"line\">systemctl stop frps</span><br><span class=\"line\"># 重启frp</span><br><span class=\"line\">systemctl restart frps</span><br><span class=\"line\"># 查看frp状态</span><br><span class=\"line\">systemctl status frps</span><br></pre></td></tr></table></figure>\n<p>配置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl enable frps</span><br></pre></td></tr></table></figure>\n"},{"title":"CSS简单了解介绍","author":"戴昌益","date":"2022-12-29T16:00:00.000Z","_content":"\n# CSS简单了解介绍\n\n## 什么是CSS\n\n- CSS 指层叠样式表 (**C**ascading **S**tyle **S**heets)\n- 样式定义**如何显示** HTML 元素\n- 样式通常存储在**样式表**中\n- 把样式添加到 HTML 4.0 中，是为了**解决内容与表现分离的问题**\n- **外部样式表**可以极大提高工作效率\n- 外部样式表通常存储在 **CSS 文件**中\n- 多个样式定义可**层叠**为一个\n\n## 样式解决了一个很大的问题\n\n\n\nHTML 标签原本被设计为用于定义文档内容，如下实例：\n\n\n\n```\n<h1>这是一个标题</h1>\n<p>这是一个段落。</p>\n```\n\n\n\n样式表定义如何显示 HTML 元素，就像 HTML 中的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。我们只需要编辑一个简单的 CSS 文档就可以改变所有页面的布局和外观。\n\n\n\n## CSS 概述\n\n- CSS 指层叠样式表 (*C*ascading *S*tyle *S*heets)\n- 样式定义*如何显示* HTML 元素\n- 样式通常存储在*样式表*中\n- 把样式添加到 HTML 4.0 中，是为了*解决内容与表现分离的问题*\n- *外部样式表*可以极大提高工作效率\n- 外部样式表通常存储在 *CSS 文件*中\n- 多个样式定义可*层叠*为一\n\n\n\n## 样式解决了一个普遍的问题\n\nHTML 标签原本被设计为用于定义文档内容。通过使用<h1、<p、<table这样的标签，HTML 的初衷是表达“这是标题”、“这是段落”、“这是表格”之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。\n\n由于两种主要的浏览器（Netscape 和 Internet Explorer）不断地将新的 HTML 标签和属性（比如字体标签和颜色属性）添加到 HTML 规范中，创建文档内容清晰地独立于文档表现层的站点变得越来越困难。\n\n为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。\n\n所有的主流浏览器均支持层叠样式表。\n\n\n\n## 样式表极大地提高了工作效率\n\n样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。\n\n由于允许同时控制多重页面的样式和布局，CSS 可以称得上 WEB 设计领域的一个突破。作为网站开发者，你能够为每个 HTML 元素定义样式，并将之应用于你希望的任意多的页面中。如需进行全局的更新，只需简单地改变样式，然后网站中的所有元素均会自动地更新。\n\n\n\n## 多重样式将层叠为一个\n\n样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。\n\n### 层叠次序\n\n**当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？**\n\n一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。\n\n1. 浏览器缺省设置\n2. 外部样式表\n3. 内部样式表（位于head 标签内部）\n4. 内联样式（在 HTML 元素内部）\n\n因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明：<head~标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。\n\n## 具体参考手册\n\n[CSS参考手册](https://www.w3school.com.cn/cssref/index.asp)","source":"_posts/CSS简单了解介绍.md","raw":"---\n\ntitle: CSS简单了解介绍\nauthor: 戴昌益\ndate: 2022-12-30\ntags: [学习]\ncategories: 文\n---\n\n# CSS简单了解介绍\n\n## 什么是CSS\n\n- CSS 指层叠样式表 (**C**ascading **S**tyle **S**heets)\n- 样式定义**如何显示** HTML 元素\n- 样式通常存储在**样式表**中\n- 把样式添加到 HTML 4.0 中，是为了**解决内容与表现分离的问题**\n- **外部样式表**可以极大提高工作效率\n- 外部样式表通常存储在 **CSS 文件**中\n- 多个样式定义可**层叠**为一个\n\n## 样式解决了一个很大的问题\n\n\n\nHTML 标签原本被设计为用于定义文档内容，如下实例：\n\n\n\n```\n<h1>这是一个标题</h1>\n<p>这是一个段落。</p>\n```\n\n\n\n样式表定义如何显示 HTML 元素，就像 HTML 中的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。我们只需要编辑一个简单的 CSS 文档就可以改变所有页面的布局和外观。\n\n\n\n## CSS 概述\n\n- CSS 指层叠样式表 (*C*ascading *S*tyle *S*heets)\n- 样式定义*如何显示* HTML 元素\n- 样式通常存储在*样式表*中\n- 把样式添加到 HTML 4.0 中，是为了*解决内容与表现分离的问题*\n- *外部样式表*可以极大提高工作效率\n- 外部样式表通常存储在 *CSS 文件*中\n- 多个样式定义可*层叠*为一\n\n\n\n## 样式解决了一个普遍的问题\n\nHTML 标签原本被设计为用于定义文档内容。通过使用<h1、<p、<table这样的标签，HTML 的初衷是表达“这是标题”、“这是段落”、“这是表格”之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。\n\n由于两种主要的浏览器（Netscape 和 Internet Explorer）不断地将新的 HTML 标签和属性（比如字体标签和颜色属性）添加到 HTML 规范中，创建文档内容清晰地独立于文档表现层的站点变得越来越困难。\n\n为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。\n\n所有的主流浏览器均支持层叠样式表。\n\n\n\n## 样式表极大地提高了工作效率\n\n样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。\n\n由于允许同时控制多重页面的样式和布局，CSS 可以称得上 WEB 设计领域的一个突破。作为网站开发者，你能够为每个 HTML 元素定义样式，并将之应用于你希望的任意多的页面中。如需进行全局的更新，只需简单地改变样式，然后网站中的所有元素均会自动地更新。\n\n\n\n## 多重样式将层叠为一个\n\n样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。\n\n### 层叠次序\n\n**当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？**\n\n一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。\n\n1. 浏览器缺省设置\n2. 外部样式表\n3. 内部样式表（位于head 标签内部）\n4. 内联样式（在 HTML 元素内部）\n\n因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明：<head~标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。\n\n## 具体参考手册\n\n[CSS参考手册](https://www.w3school.com.cn/cssref/index.asp)","slug":"CSS简单了解介绍","published":1,"updated":"2024-07-05T15:05:42.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5i000ovbin13pc4yn0","content":"<h1 id=\"CSS简单了解介绍\"><a href=\"#CSS简单了解介绍\" class=\"headerlink\" title=\"CSS简单了解介绍\"></a>CSS简单了解介绍</h1><h2 id=\"什么是CSS\"><a href=\"#什么是CSS\" class=\"headerlink\" title=\"什么是CSS\"></a>什么是CSS</h2><ul>\n<li>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</li>\n<li>样式定义<strong>如何显示</strong> HTML 元素</li>\n<li>样式通常存储在<strong>样式表</strong>中</li>\n<li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li>\n<li><strong>外部样式表</strong>可以极大提高工作效率</li>\n<li>外部样式表通常存储在 <strong>CSS 文件</strong>中</li>\n<li>多个样式定义可<strong>层叠</strong>为一个</li>\n</ul>\n<h2 id=\"样式解决了一个很大的问题\"><a href=\"#样式解决了一个很大的问题\" class=\"headerlink\" title=\"样式解决了一个很大的问题\"></a>样式解决了一个很大的问题</h2><p>HTML 标签原本被设计为用于定义文档内容，如下实例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;这是一个标题&lt;&#x2F;h1&gt;</span><br><span class=\"line\">&lt;p&gt;这是一个段落。&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p>样式表定义如何显示 HTML 元素，就像 HTML 中的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。我们只需要编辑一个简单的 CSS 文档就可以改变所有页面的布局和外观。</p>\n<h2 id=\"CSS-概述\"><a href=\"#CSS-概述\" class=\"headerlink\" title=\"CSS 概述\"></a>CSS 概述</h2><ul>\n<li>CSS 指层叠样式表 (<em>C</em>ascading <em>S</em>tyle <em>S</em>heets)</li>\n<li>样式定义<em>如何显示</em> HTML 元素</li>\n<li>样式通常存储在<em>样式表</em>中</li>\n<li>把样式添加到 HTML 4.0 中，是为了<em>解决内容与表现分离的问题</em></li>\n<li><em>外部样式表</em>可以极大提高工作效率</li>\n<li>外部样式表通常存储在 <em>CSS 文件</em>中</li>\n<li>多个样式定义可<em>层叠</em>为一</li>\n</ul>\n<h2 id=\"样式解决了一个普遍的问题\"><a href=\"#样式解决了一个普遍的问题\" class=\"headerlink\" title=\"样式解决了一个普遍的问题\"></a>样式解决了一个普遍的问题</h2><p>HTML 标签原本被设计为用于定义文档内容。通过使用&lt;h1、&lt;p、&lt;table这样的标签，HTML 的初衷是表达“这是标题”、“这是段落”、“这是表格”之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。</p>\n<p>由于两种主要的浏览器（Netscape 和 Internet Explorer）不断地将新的 HTML 标签和属性（比如字体标签和颜色属性）添加到 HTML 规范中，创建文档内容清晰地独立于文档表现层的站点变得越来越困难。</p>\n<p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p>\n<p>所有的主流浏览器均支持层叠样式表。</p>\n<h2 id=\"样式表极大地提高了工作效率\"><a href=\"#样式表极大地提高了工作效率\" class=\"headerlink\" title=\"样式表极大地提高了工作效率\"></a>样式表极大地提高了工作效率</h2><p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>\n<p>由于允许同时控制多重页面的样式和布局，CSS 可以称得上 WEB 设计领域的一个突破。作为网站开发者，你能够为每个 HTML 元素定义样式，并将之应用于你希望的任意多的页面中。如需进行全局的更新，只需简单地改变样式，然后网站中的所有元素均会自动地更新。</p>\n<h2 id=\"多重样式将层叠为一个\"><a href=\"#多重样式将层叠为一个\" class=\"headerlink\" title=\"多重样式将层叠为一个\"></a>多重样式将层叠为一个</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p>\n<h3 id=\"层叠次序\"><a href=\"#层叠次序\" class=\"headerlink\" title=\"层叠次序\"></a>层叠次序</h3><p><strong>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</strong></p>\n<p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p>\n<ol>\n<li>浏览器缺省设置</li>\n<li>外部样式表</li>\n<li>内部样式表（位于head 标签内部）</li>\n<li>内联样式（在 HTML 元素内部）</li>\n</ol>\n<p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明：&lt;head~标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p>\n<h2 id=\"具体参考手册\"><a href=\"#具体参考手册\" class=\"headerlink\" title=\"具体参考手册\"></a>具体参考手册</h2><p><a href=\"https://www.w3school.com.cn/cssref/index.asp\">CSS参考手册</a></p>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<h1 id=\"CSS简单了解介绍\"><a href=\"#CSS简单了解介绍\" class=\"headerlink\" title=\"CSS简单了解介绍\"></a>CSS简单了解介绍</h1><h2 id=\"什么是CSS\"><a href=\"#什么是CSS\" class=\"headerlink\" title=\"什么是CSS\"></a>什么是CSS</h2><ul>\n<li>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</li>\n<li>样式定义<strong>如何显示</strong> HTML 元素</li>\n<li>样式通常存储在<strong>样式表</strong>中</li>\n<li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li>\n<li><strong>外部样式表</strong>可以极大提高工作效率</li>\n<li>外部样式表通常存储在 <strong>CSS 文件</strong>中</li>\n<li>多个样式定义可<strong>层叠</strong>为一个</li>\n</ul>\n<h2 id=\"样式解决了一个很大的问题\"><a href=\"#样式解决了一个很大的问题\" class=\"headerlink\" title=\"样式解决了一个很大的问题\"></a>样式解决了一个很大的问题</h2><p>HTML 标签原本被设计为用于定义文档内容，如下实例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;这是一个标题&lt;&#x2F;h1&gt;</span><br><span class=\"line\">&lt;p&gt;这是一个段落。&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p>样式表定义如何显示 HTML 元素，就像 HTML 中的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。我们只需要编辑一个简单的 CSS 文档就可以改变所有页面的布局和外观。</p>\n<h2 id=\"CSS-概述\"><a href=\"#CSS-概述\" class=\"headerlink\" title=\"CSS 概述\"></a>CSS 概述</h2><ul>\n<li>CSS 指层叠样式表 (<em>C</em>ascading <em>S</em>tyle <em>S</em>heets)</li>\n<li>样式定义<em>如何显示</em> HTML 元素</li>\n<li>样式通常存储在<em>样式表</em>中</li>\n<li>把样式添加到 HTML 4.0 中，是为了<em>解决内容与表现分离的问题</em></li>\n<li><em>外部样式表</em>可以极大提高工作效率</li>\n<li>外部样式表通常存储在 <em>CSS 文件</em>中</li>\n<li>多个样式定义可<em>层叠</em>为一</li>\n</ul>\n<h2 id=\"样式解决了一个普遍的问题\"><a href=\"#样式解决了一个普遍的问题\" class=\"headerlink\" title=\"样式解决了一个普遍的问题\"></a>样式解决了一个普遍的问题</h2><p>HTML 标签原本被设计为用于定义文档内容。通过使用&lt;h1、&lt;p、&lt;table这样的标签，HTML 的初衷是表达“这是标题”、“这是段落”、“这是表格”之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。</p>\n<p>由于两种主要的浏览器（Netscape 和 Internet Explorer）不断地将新的 HTML 标签和属性（比如字体标签和颜色属性）添加到 HTML 规范中，创建文档内容清晰地独立于文档表现层的站点变得越来越困难。</p>\n<p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p>\n<p>所有的主流浏览器均支持层叠样式表。</p>\n<h2 id=\"样式表极大地提高了工作效率\"><a href=\"#样式表极大地提高了工作效率\" class=\"headerlink\" title=\"样式表极大地提高了工作效率\"></a>样式表极大地提高了工作效率</h2><p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>\n<p>由于允许同时控制多重页面的样式和布局，CSS 可以称得上 WEB 设计领域的一个突破。作为网站开发者，你能够为每个 HTML 元素定义样式，并将之应用于你希望的任意多的页面中。如需进行全局的更新，只需简单地改变样式，然后网站中的所有元素均会自动地更新。</p>\n<h2 id=\"多重样式将层叠为一个\"><a href=\"#多重样式将层叠为一个\" class=\"headerlink\" title=\"多重样式将层叠为一个\"></a>多重样式将层叠为一个</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p>\n<h3 id=\"层叠次序\"><a href=\"#层叠次序\" class=\"headerlink\" title=\"层叠次序\"></a>层叠次序</h3><p><strong>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</strong></p>\n<p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p>\n<ol>\n<li>浏览器缺省设置</li>\n<li>外部样式表</li>\n<li>内部样式表（位于head 标签内部）</li>\n<li>内联样式（在 HTML 元素内部）</li>\n</ol>\n<p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明：&lt;head~标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p>\n<h2 id=\"具体参考手册\"><a href=\"#具体参考手册\" class=\"headerlink\" title=\"具体参考手册\"></a>具体参考手册</h2><p><a href=\"https://www.w3school.com.cn/cssref/index.asp\">CSS参考手册</a></p>\n"},{"title":"HTML复习笔记","author":"戴昌益","date":"2022-12-29T16:00:00.000Z","_content":"\n# HTML复习笔记\n\n\n\n时间过的真快，记忆也丢的真快。我已经忘记了前面学习的东西，知识越来越模糊，操作越来越生疏。放假前学的HTML的基础知识都忘记了，如果学习了一些知识如果不使用这些知识就会慢慢从脑海中消失。这段时间有空，赶紧起来复习一下。HTML基础知识。\n\n---\n\n## HTML基础教程\n\n### HTML基础结构\n\n\n\n```HTML\n<!DOCTYPE HTML>\n<html>\n<body>\n    \n<h1>我的第一个标题</h1>\n\n<p>我的第一个段落。</p>\n\n</body>\n</html>\n\n代码解释:\n\n- <!DOCTYPE> 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。\n\n- <html> 与 </html> 之间的文本描述网页\n\n- <body> 与 </body> 之间的文本是可见的页面内容\n\n- <h1> 与 </h1> 之间的文本被显示为标题\n\n- <p> 与 </p> 之间的文本被显示为段落\n\n```\n\n---\n\n### HTML常用标签/元素\n\n|        标签         | 描述           | 样例  |\n| :-----------------: | :------------- | -------------- |\n| \\<title>……\\</title> | 整个网页的标题 |                                                           |\n|    \\<h1>……\\</h1>    | 文本标题       ||\n|     \\<p>……\\</p>     | 段落标签       ||\n|    \\<a>……\\</a>    | HTML链接 |\\<a href=\"http://www.w3school.com\">This is a link\\</a>|\n|    \\<img>    | HTML 图像 |\\<img src=\"w3school.jpg\" width=\"104\" height=\"142\" />|\n|    \\<br />    | 空标签（换行） ||\n|    \\<html>……\\</html>    | 定义HTML文档 ||\n|    \\<body>……\\</body>    | 定义文档主体 ||\n|    \\<hr />    | 定义水平线 ||\n|    \\<!---->    | HTML注释 ||\n|    \\<u>……\\</u>    | 下划线文本     ||\n|    \\<table>……\\</table>    | 表格 ||\n|    \\<tr>……\\</tr>    | 表格行   ||\n|    \\<td>……\\</td>    | 表格列      ||\n|    \\<th>……\\</th>    | 表格表头   ||\n|    \\<thead>……\\</thead>    | 定义表格的页眉 ||\n|    \\<tbody>……\\</tbody>    | 定义表格的主体 ||\n|    \\<tfoot>……\\</tfoot>    | 定义表格的页脚 ||\n|    \\<ul>……\\</ul>    | 定义无序列表 ||\n|    \\<li>……\\</li>    | 定义列表项 ||\n|    \\<ol>……\\</ol>    | 定义有序列表 ||\n|    \\<dl>……\\</dl>    | 定义自定义列表                      ||\n|    \\<dt>……\\</dt>    | 定义自定义列表项                    ||\n|    \\<dd>……\\</dd>    | 定义定义的描述 ||\n|    \\<div>……\\</div>    | 定义文档中的分区或节 ||\n|    \\<span>……\\</span>    | 定义 span，用来组合文档中的行内元素 ||\n\n更多样式可见：[HTML教程](https://www.w3school.com.cn/html/index.asp)\n\n","source":"_posts/HTML复习笔记.md","raw":"---\n\ntitle: HTML复习笔记\nauthor: 戴昌益\ndate: 2022-12-30\ntags: [学习]\ncategories: 文\n---\n\n# HTML复习笔记\n\n\n\n时间过的真快，记忆也丢的真快。我已经忘记了前面学习的东西，知识越来越模糊，操作越来越生疏。放假前学的HTML的基础知识都忘记了，如果学习了一些知识如果不使用这些知识就会慢慢从脑海中消失。这段时间有空，赶紧起来复习一下。HTML基础知识。\n\n---\n\n## HTML基础教程\n\n### HTML基础结构\n\n\n\n```HTML\n<!DOCTYPE HTML>\n<html>\n<body>\n    \n<h1>我的第一个标题</h1>\n\n<p>我的第一个段落。</p>\n\n</body>\n</html>\n\n代码解释:\n\n- <!DOCTYPE> 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。\n\n- <html> 与 </html> 之间的文本描述网页\n\n- <body> 与 </body> 之间的文本是可见的页面内容\n\n- <h1> 与 </h1> 之间的文本被显示为标题\n\n- <p> 与 </p> 之间的文本被显示为段落\n\n```\n\n---\n\n### HTML常用标签/元素\n\n|        标签         | 描述           | 样例  |\n| :-----------------: | :------------- | -------------- |\n| \\<title>……\\</title> | 整个网页的标题 |                                                           |\n|    \\<h1>……\\</h1>    | 文本标题       ||\n|     \\<p>……\\</p>     | 段落标签       ||\n|    \\<a>……\\</a>    | HTML链接 |\\<a href=\"http://www.w3school.com\">This is a link\\</a>|\n|    \\<img>    | HTML 图像 |\\<img src=\"w3school.jpg\" width=\"104\" height=\"142\" />|\n|    \\<br />    | 空标签（换行） ||\n|    \\<html>……\\</html>    | 定义HTML文档 ||\n|    \\<body>……\\</body>    | 定义文档主体 ||\n|    \\<hr />    | 定义水平线 ||\n|    \\<!---->    | HTML注释 ||\n|    \\<u>……\\</u>    | 下划线文本     ||\n|    \\<table>……\\</table>    | 表格 ||\n|    \\<tr>……\\</tr>    | 表格行   ||\n|    \\<td>……\\</td>    | 表格列      ||\n|    \\<th>……\\</th>    | 表格表头   ||\n|    \\<thead>……\\</thead>    | 定义表格的页眉 ||\n|    \\<tbody>……\\</tbody>    | 定义表格的主体 ||\n|    \\<tfoot>……\\</tfoot>    | 定义表格的页脚 ||\n|    \\<ul>……\\</ul>    | 定义无序列表 ||\n|    \\<li>……\\</li>    | 定义列表项 ||\n|    \\<ol>……\\</ol>    | 定义有序列表 ||\n|    \\<dl>……\\</dl>    | 定义自定义列表                      ||\n|    \\<dt>……\\</dt>    | 定义自定义列表项                    ||\n|    \\<dd>……\\</dd>    | 定义定义的描述 ||\n|    \\<div>……\\</div>    | 定义文档中的分区或节 ||\n|    \\<span>……\\</span>    | 定义 span，用来组合文档中的行内元素 ||\n\n更多样式可见：[HTML教程](https://www.w3school.com.cn/html/index.asp)\n\n","slug":"HTML复习笔记","published":1,"updated":"2024-07-05T15:05:42.477Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5m000rvbin3xhd11sf","content":"<h1 id=\"HTML复习笔记\"><a href=\"#HTML复习笔记\" class=\"headerlink\" title=\"HTML复习笔记\"></a>HTML复习笔记</h1><p>时间过的真快，记忆也丢的真快。我已经忘记了前面学习的东西，知识越来越模糊，操作越来越生疏。放假前学的HTML的基础知识都忘记了，如果学习了一些知识如果不使用这些知识就会慢慢从脑海中消失。这段时间有空，赶紧起来复习一下。HTML基础知识。</p>\n<hr>\n<h2 id=\"HTML基础教程\"><a href=\"#HTML基础教程\" class=\"headerlink\" title=\"HTML基础教程\"></a>HTML基础教程</h2><h3 id=\"HTML基础结构\"><a href=\"#HTML基础结构\" class=\"headerlink\" title=\"HTML基础结构\"></a>HTML基础结构</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">HTML</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>我的第一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我的第一个段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">代码解释:</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"meta\">&lt;!DOCTYPE&gt;</span> 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span> 之间的文本描述网页</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span> 之间的文本是可见的页面内容</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span> 之间的文本被显示为标题</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> 之间的文本被显示为段落</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"HTML常用标签-元素\"><a href=\"#HTML常用标签-元素\" class=\"headerlink\" title=\"HTML常用标签/元素\"></a>HTML常用标签/元素</h3><table>\n<thead>\n<tr>\n<th align=\"center\">标签</th>\n<th align=\"left\">描述</th>\n<th>样例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&lt;title&gt;……&lt;/title&gt;</td>\n<td align=\"left\">整个网页的标题</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;h1&gt;……&lt;/h1&gt;</td>\n<td align=\"left\">文本标题</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;p&gt;……&lt;/p&gt;</td>\n<td align=\"left\">段落标签</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;a&gt;……&lt;/a&gt;</td>\n<td align=\"left\">HTML链接</td>\n<td>&lt;a href=”<a href=\"http://www.w3school.com&quot;&gt;this/\">http://www.w3school.com&quot;&gt;This</a> is a link&lt;/a&gt;</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;img&gt;</td>\n<td align=\"left\">HTML 图像</td>\n<td>&lt;img src=”w3school.jpg” width=”104” height=”142” /&gt;</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;br /&gt;</td>\n<td align=\"left\">空标签（换行）</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;html&gt;……&lt;/html&gt;</td>\n<td align=\"left\">定义HTML文档</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;body&gt;……&lt;/body&gt;</td>\n<td align=\"left\">定义文档主体</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;hr /&gt;</td>\n<td align=\"left\">定义水平线</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;!—-&gt;</td>\n<td align=\"left\">HTML注释</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;u&gt;……&lt;/u&gt;</td>\n<td align=\"left\">下划线文本</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;table&gt;……&lt;/table&gt;</td>\n<td align=\"left\">表格</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;tr&gt;……&lt;/tr&gt;</td>\n<td align=\"left\">表格行</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;td&gt;……&lt;/td&gt;</td>\n<td align=\"left\">表格列</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;th&gt;……&lt;/th&gt;</td>\n<td align=\"left\">表格表头</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;thead&gt;……&lt;/thead&gt;</td>\n<td align=\"left\">定义表格的页眉</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;tbody&gt;……&lt;/tbody&gt;</td>\n<td align=\"left\">定义表格的主体</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;tfoot&gt;……&lt;/tfoot&gt;</td>\n<td align=\"left\">定义表格的页脚</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;ul&gt;……&lt;/ul&gt;</td>\n<td align=\"left\">定义无序列表</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;li&gt;……&lt;/li&gt;</td>\n<td align=\"left\">定义列表项</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;ol&gt;……&lt;/ol&gt;</td>\n<td align=\"left\">定义有序列表</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;dl&gt;……&lt;/dl&gt;</td>\n<td align=\"left\">定义自定义列表</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;dt&gt;……&lt;/dt&gt;</td>\n<td align=\"left\">定义自定义列表项</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;dd&gt;……&lt;/dd&gt;</td>\n<td align=\"left\">定义定义的描述</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;div&gt;……&lt;/div&gt;</td>\n<td align=\"left\">定义文档中的分区或节</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;span&gt;……&lt;/span&gt;</td>\n<td align=\"left\">定义 span，用来组合文档中的行内元素</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>更多样式可见：<a href=\"https://www.w3school.com.cn/html/index.asp\">HTML教程</a></p>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h1 id=\"HTML复习笔记\"><a href=\"#HTML复习笔记\" class=\"headerlink\" title=\"HTML复习笔记\"></a>HTML复习笔记</h1><p>时间过的真快，记忆也丢的真快。我已经忘记了前面学习的东西，知识越来越模糊，操作越来越生疏。放假前学的HTML的基础知识都忘记了，如果学习了一些知识如果不使用这些知识就会慢慢从脑海中消失。这段时间有空，赶紧起来复习一下。HTML基础知识。</p>\n<hr>\n<h2 id=\"HTML基础教程\"><a href=\"#HTML基础教程\" class=\"headerlink\" title=\"HTML基础教程\"></a>HTML基础教程</h2><h3 id=\"HTML基础结构\"><a href=\"#HTML基础结构\" class=\"headerlink\" title=\"HTML基础结构\"></a>HTML基础结构</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">HTML</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>我的第一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我的第一个段落。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">代码解释:</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"meta\">&lt;!DOCTYPE&gt;</span> 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span> 之间的文本描述网页</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span> 之间的文本是可见的页面内容</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span> 之间的文本被显示为标题</span><br><span class=\"line\"></span><br><span class=\"line\">- <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> 与 <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> 之间的文本被显示为段落</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"HTML常用标签-元素\"><a href=\"#HTML常用标签-元素\" class=\"headerlink\" title=\"HTML常用标签/元素\"></a>HTML常用标签/元素</h3><table>\n<thead>\n<tr>\n<th align=\"center\">标签</th>\n<th align=\"left\">描述</th>\n<th>样例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&lt;title&gt;……&lt;/title&gt;</td>\n<td align=\"left\">整个网页的标题</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;h1&gt;……&lt;/h1&gt;</td>\n<td align=\"left\">文本标题</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;p&gt;……&lt;/p&gt;</td>\n<td align=\"left\">段落标签</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;a&gt;……&lt;/a&gt;</td>\n<td align=\"left\">HTML链接</td>\n<td>&lt;a href=”<a href=\"http://www.w3school.com&quot;&gt;this/\">http://www.w3school.com&quot;&gt;This</a> is a link&lt;/a&gt;</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;img&gt;</td>\n<td align=\"left\">HTML 图像</td>\n<td>&lt;img src=”w3school.jpg” width=”104” height=”142” /&gt;</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;br /&gt;</td>\n<td align=\"left\">空标签（换行）</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;html&gt;……&lt;/html&gt;</td>\n<td align=\"left\">定义HTML文档</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;body&gt;……&lt;/body&gt;</td>\n<td align=\"left\">定义文档主体</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;hr /&gt;</td>\n<td align=\"left\">定义水平线</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;!—-&gt;</td>\n<td align=\"left\">HTML注释</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;u&gt;……&lt;/u&gt;</td>\n<td align=\"left\">下划线文本</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;table&gt;……&lt;/table&gt;</td>\n<td align=\"left\">表格</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;tr&gt;……&lt;/tr&gt;</td>\n<td align=\"left\">表格行</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;td&gt;……&lt;/td&gt;</td>\n<td align=\"left\">表格列</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;th&gt;……&lt;/th&gt;</td>\n<td align=\"left\">表格表头</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;thead&gt;……&lt;/thead&gt;</td>\n<td align=\"left\">定义表格的页眉</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;tbody&gt;……&lt;/tbody&gt;</td>\n<td align=\"left\">定义表格的主体</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;tfoot&gt;……&lt;/tfoot&gt;</td>\n<td align=\"left\">定义表格的页脚</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;ul&gt;……&lt;/ul&gt;</td>\n<td align=\"left\">定义无序列表</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;li&gt;……&lt;/li&gt;</td>\n<td align=\"left\">定义列表项</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;ol&gt;……&lt;/ol&gt;</td>\n<td align=\"left\">定义有序列表</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;dl&gt;……&lt;/dl&gt;</td>\n<td align=\"left\">定义自定义列表</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;dt&gt;……&lt;/dt&gt;</td>\n<td align=\"left\">定义自定义列表项</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;dd&gt;……&lt;/dd&gt;</td>\n<td align=\"left\">定义定义的描述</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;div&gt;……&lt;/div&gt;</td>\n<td align=\"left\">定义文档中的分区或节</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">&lt;span&gt;……&lt;/span&gt;</td>\n<td align=\"left\">定义 span，用来组合文档中的行内元素</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>更多样式可见：<a href=\"https://www.w3school.com.cn/html/index.asp\">HTML教程</a></p>\n"},{"title":"Markdown学习笔记","author":"戴昌益","date":"2022-12-29T16:00:00.000Z","_content":"\n\n\n\n\n## Markdown是什么？\n\nMarkdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。\n\n\n## 为什么要用Markdown\n\n由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。我这边使用Markdown主要使用来发表在网站上发表博文。\n\n---\n\n## 怎么使用Markdown\n\nMarkdown是一门标记语言，有他自有的一些标记方式。主要有标题、段落、列表、区块、代码、链接、图片、表格以及其他一些技巧。\n\n---\n\n### 标题\n\n标题使用“#”号加空格来标记。“#”的数量来表示1~6级的标题。\n\n例如：\n\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n\n显示效果：\n\n># 一级标题\n>## 二级标题\n>### 三级标题\n>#### 四级标题\n>##### 五级标题\n>###### 六级标题\n\n如果只用一级标题以及耳机标题也可使用一个或多个“=”来标记一级标题。“-”来标记二级标题。但是需要标记符号需要在文本的紧接的下一行。\n例如：\n\t一级标题\n\t=======\n\t二级标题\n\t-------\n标记效果：\n>一级标题\n>=======\n>二级标题\n>-------\n---\n\n### 字体以及段落\n\n#### 段落\n\n直接使用回车进行换行，求换段落可在末尾加两个空格再进行回车。也可使用空行来换段落。\n\n---\n\n#### 字体\n\nMarkdown有粗体、斜体、粗斜体等几种字体样式。\n斜体使用两个`*`号或者`_`将文本包起来。\n粗体使用三个`*`号或者`_`将文本包起来。\n粗斜体使用三个`*`号或者`_`将文本包起来。\n\n例如\n\n```\n*斜体字体*\n**粗体字体**\n***粗斜体字体***\n_斜体字体_\n__粗体字体__\n___粗斜体字体___\n```\n\n效果:\n\n> *斜体字体*\n> **粗体字体**\n> ***粗斜体字体***\n> _斜体字体_\n> __粗体字体__\n> ___粗斜体字体___\n\n---\n\n#### 分隔线\n\n在空行使用连续的三个`*`或者连续三个`-`建立分割线。该行不能用其他东西。\n\n例如：\n\n```\n***\n---\n```\n\n效果：\n\n> `***`\n> ***\n> `---`\n> ---\n>\n> ---\n>\n> \n\n---\n\n#### 删除线\n\n在需要加上删除线的文字两端加上两个`~`即可添加删除线。\n\n例如：\n\n`~~删除线~~`\n\n效果：\n\n> ~~删除线~~\n\n\n\n---\n\n#### 下划线\n\n可使用html下划线标签`<u>`来获得下划线效果。\n\n例如：\n\n`<u>下划线</u>`\n\n效果：\n\n> <u>下划线</u>\n\n---\n\n#### 脚注\n\n脚注的目的是对文本进行补充说明。\n\n使用`[^要注明的文本]:注明的内容`这种格式进行标注。当然鼠标滑过文本是会显示注记的内容。\n\n效果如下：\n\n> [^要注明的文本]:嘿嘿嘿 --注明的内容\n\n---\n\n### 列表\n\n列表显示\n列表有两种一种是无序列表一种是有序列表。\n\n无序列表在文本前面加上星号`*`加号`+`减号`-`标记无序列表\n\n例如：\n\n```\n*第一项\n*第二项\n*第三项\n*·······\n\n+第一项\n+第二项\n+第三项\n+·······\n\n-第一项\n-第二项\n-第三项\n-·······\n```\n\n\n\n效果：\n\n>* 第一项\n>* 第二项\n>* 第三项\n>* ······\n\n> + 第一项\n> + 第二项\n> + 第三项\n> + ······\n\n> - 第一项\n> - 第二项\n> - 第三项\n> - ······\n\n无序列表使用数字加上`.`来标记有序列表项\n\n例如：\n\n```\n1.第一项\n2.第二项\n3.第三项\n```\n\n效果：\n\n> 1.第一项\n>\n> 2.第二项\n>\n> 3.第三项\n\n### 区块\n\nMarkdown 区块引用是在段落开头使用 **>** 符号 ，然后后面紧跟一个空格符号：、\n\n### 代码\n\n如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**）\n\n### 链接\n\n写完文章时我常常会使用都链接\n\n链接常用`[链接名称](链接地址)`或者`<链接地址>`\n\n例如：\n\n```\n[链接名称](链接地址)\n\n或者\n\n<http.xxx.com>\n```\n\n效果：\n\n>[链接名称](链接地址)\n>\n>或者\n>\n><http.xxx.com>\n\n##### 高级链接\n\n可以使用[变量]来链接地址.然后在文档末尾给变量赋值。就像下面这样。\n\n```\n设置变量\n[链接名称][变量名]\n赋值变量\n[变量名]：www.xxxxxx.com\n```\n\n### 图片\n\n图片格式跟链接基本相似。在链接`[链接名称](链接地址)`前加上一个感叹号`！`即为`![图片名称](图片地址)`\n\n图片也可跟链接一样使用变量赋值的方式来插入图片。\n\n### 表格\n\n制作表格使用 **|** 来分隔不同的单元格，使用 **-** 来分隔表头和其他行。\n\n例如：\n\n```\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n```\n\n效果：\n\n>| 表头 | 表头 |\n>| ---- | ---- |\n>| 单元格 | 单元格 |\n>| 单元格  | 单元格 |\n\n**我们可以设置表格的对齐方式：**\n\n\n\n- **-:** 设置内容和标题栏居右对齐。\n- **:-** 设置内容和标题栏居左对齐。\n- **:-:** 设置内容和标题栏居中对齐。\n\n例如：\n\n```\n| 左对齐   | 居中   |右对齐|\n| ：------ | ：------ ：|------： |\n| 单元格 | 单元格 |单元格 |\n| 单元格 | 单元格 |单元格 |\n```\n效果：\n>| 左对齐   | 居中   |右对齐|\n| :------ | :-------: | ------: |\n| 单元格 | 单元格 |单元格 |\n| 单元格 | 单元格 |单元格 |\n\n### 其他技巧\n\n#### 支持的 HTML 元素\n不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等\n#### 转义\nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n例如：\\**sdf**\n\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n```\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n```\n\n#### 公式\n\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染\n\n例如：\n\n```\n$$\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix} \n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\n\\end{vmatrix}\n${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n$$\n```\n\n\n\n效果：\n\n>$$\n>\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix} \n>\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n>\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\n>\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\n>\\end{vmatrix}\n>${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n>$$\n\n### Typora 画流程图、时序图(顺序图)、甘特图应用案例效果图\n\n1、横向流程图源码格式：\n\n```mermaid\ngraph LR \nA[方形] -->B(圆角)\nB --> C{条件a}\nC -->|a=1| D[结果1]\nC -->|a=2| E[结果2]\nF[横向流程图] \n```\n2、竖向流程图源码格式：\n\n```mermaid\ngraph TD\nA[方形] --> B(圆角)\n    B --> C{条件a}\n    C --> |a=1| D[结果1]\n    C --> |a=2| E[结果2]\n    F[竖向流程图]\n```\n3、标准流程图源码格式：\n```flow\nst=>start: 开始框\nop=>operation: 处理框\ncond=>condition: 判断框(是或否?)\nsub1=>subroutine: 子流程\nio=>inputoutput: 输入输出框\ne=>end: 结束框\nst->op->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op\n```\n4、标准流程图源码格式（横向）：\n```flow\nst=>start: 开始框\nop=>operation: 处理框\ncond=>condition: 判断框(是或否?)\nsub1=>subroutine: 子流程\nio=>inputoutput: 输入输出框\ne=>end: 结束框\nst(right)->op(right)->cond\ncond(yes)->io(bottom)->e\ncond(no)->sub1(right)->op\n```\n5、UML时序图源码样例：\n```sequence\n对象A->对象B: 对象B你好吗?（请求）\nNote right of 对象B: 对象B的描述\nNote left of 对象A: 对象A的描述(提示)\n对象B-->对象A: 我很好(响应)\n对象A->对象B: 你真的好吗？\n```\n6、UML时序图源码复杂样例：\n```sequence\nTitle: 标题：复杂使用\n对象A->对象B: 对象B你好吗?（请求）\nNote right of 对象B: 对象B的描述\nNote left of 对象A: 对象A的描述(提示)\n对象B-->对象A: 我很好(响应)\n对象B->小三: 你好吗\n小三-->>对象A: 对象B找我了\n对象A->对象B: 你真的好吗？\nNote over 小三,对象B: 我们是朋友\nparticipant C\nNote right of C: 没人陪我玩\n```\n7、UML标准时序图样例：\n```mermaid\n%% 时序图例子,-> 直线，-->虚线，->>实线箭头\n  sequenceDiagram\n    participant 张三\n    participant 李四\n    张三->王五: 王五你好吗？\n    loop 健康检查\n        王五->王五: 与疾病战斗\n    end\n    Note right of 王五: 合理 食物 <br/>看医生...\n    李四-->>张三: 很好!\n    王五->李四: 你怎么样?\n    李四-->王五: 很好!\n```\n8、甘特图样例：\n```mermaid\n%% 语法示例\n        gantt\n        dateFormat  YYYY-MM-DD\n        title 软件开发甘特图\n        section 设计\n        需求                      :done,    des1, 2014-01-06,2014-01-08\n        原型                      :active,  des2, 2014-01-09, 3d\n        UI设计                     :         des3, after des2, 5d\n    未来任务                     :         des4, after des3, 5d\n        section 开发\n        学习准备理解需求                      :crit, done, 2014-01-06,24h\n        设计框架                             :crit, done, after des2, 2d\n        开发                                 :crit, active, 3d\n        未来任务                              :crit, 5d\n        耍                                   :2d\n        section 测试\n        功能测试                              :active, a1, after des3, 3d\n        压力测试                               :after a1  , 20h\n        测试报告                               : 48h\n```","source":"_posts/Markdown学习笔记.md","raw":"---\ntitle: Markdown学习笔记\nauthor: 戴昌益\ndate: 2022-12-30\ntags: [学习]\ncategories: 文\n---\n\n\n\n\n\n## Markdown是什么？\n\nMarkdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。\n\n\n## 为什么要用Markdown\n\n由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。我这边使用Markdown主要使用来发表在网站上发表博文。\n\n---\n\n## 怎么使用Markdown\n\nMarkdown是一门标记语言，有他自有的一些标记方式。主要有标题、段落、列表、区块、代码、链接、图片、表格以及其他一些技巧。\n\n---\n\n### 标题\n\n标题使用“#”号加空格来标记。“#”的数量来表示1~6级的标题。\n\n例如：\n\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n\n显示效果：\n\n># 一级标题\n>## 二级标题\n>### 三级标题\n>#### 四级标题\n>##### 五级标题\n>###### 六级标题\n\n如果只用一级标题以及耳机标题也可使用一个或多个“=”来标记一级标题。“-”来标记二级标题。但是需要标记符号需要在文本的紧接的下一行。\n例如：\n\t一级标题\n\t=======\n\t二级标题\n\t-------\n标记效果：\n>一级标题\n>=======\n>二级标题\n>-------\n---\n\n### 字体以及段落\n\n#### 段落\n\n直接使用回车进行换行，求换段落可在末尾加两个空格再进行回车。也可使用空行来换段落。\n\n---\n\n#### 字体\n\nMarkdown有粗体、斜体、粗斜体等几种字体样式。\n斜体使用两个`*`号或者`_`将文本包起来。\n粗体使用三个`*`号或者`_`将文本包起来。\n粗斜体使用三个`*`号或者`_`将文本包起来。\n\n例如\n\n```\n*斜体字体*\n**粗体字体**\n***粗斜体字体***\n_斜体字体_\n__粗体字体__\n___粗斜体字体___\n```\n\n效果:\n\n> *斜体字体*\n> **粗体字体**\n> ***粗斜体字体***\n> _斜体字体_\n> __粗体字体__\n> ___粗斜体字体___\n\n---\n\n#### 分隔线\n\n在空行使用连续的三个`*`或者连续三个`-`建立分割线。该行不能用其他东西。\n\n例如：\n\n```\n***\n---\n```\n\n效果：\n\n> `***`\n> ***\n> `---`\n> ---\n>\n> ---\n>\n> \n\n---\n\n#### 删除线\n\n在需要加上删除线的文字两端加上两个`~`即可添加删除线。\n\n例如：\n\n`~~删除线~~`\n\n效果：\n\n> ~~删除线~~\n\n\n\n---\n\n#### 下划线\n\n可使用html下划线标签`<u>`来获得下划线效果。\n\n例如：\n\n`<u>下划线</u>`\n\n效果：\n\n> <u>下划线</u>\n\n---\n\n#### 脚注\n\n脚注的目的是对文本进行补充说明。\n\n使用`[^要注明的文本]:注明的内容`这种格式进行标注。当然鼠标滑过文本是会显示注记的内容。\n\n效果如下：\n\n> [^要注明的文本]:嘿嘿嘿 --注明的内容\n\n---\n\n### 列表\n\n列表显示\n列表有两种一种是无序列表一种是有序列表。\n\n无序列表在文本前面加上星号`*`加号`+`减号`-`标记无序列表\n\n例如：\n\n```\n*第一项\n*第二项\n*第三项\n*·······\n\n+第一项\n+第二项\n+第三项\n+·······\n\n-第一项\n-第二项\n-第三项\n-·······\n```\n\n\n\n效果：\n\n>* 第一项\n>* 第二项\n>* 第三项\n>* ······\n\n> + 第一项\n> + 第二项\n> + 第三项\n> + ······\n\n> - 第一项\n> - 第二项\n> - 第三项\n> - ······\n\n无序列表使用数字加上`.`来标记有序列表项\n\n例如：\n\n```\n1.第一项\n2.第二项\n3.第三项\n```\n\n效果：\n\n> 1.第一项\n>\n> 2.第二项\n>\n> 3.第三项\n\n### 区块\n\nMarkdown 区块引用是在段落开头使用 **>** 符号 ，然后后面紧跟一个空格符号：、\n\n### 代码\n\n如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**）\n\n### 链接\n\n写完文章时我常常会使用都链接\n\n链接常用`[链接名称](链接地址)`或者`<链接地址>`\n\n例如：\n\n```\n[链接名称](链接地址)\n\n或者\n\n<http.xxx.com>\n```\n\n效果：\n\n>[链接名称](链接地址)\n>\n>或者\n>\n><http.xxx.com>\n\n##### 高级链接\n\n可以使用[变量]来链接地址.然后在文档末尾给变量赋值。就像下面这样。\n\n```\n设置变量\n[链接名称][变量名]\n赋值变量\n[变量名]：www.xxxxxx.com\n```\n\n### 图片\n\n图片格式跟链接基本相似。在链接`[链接名称](链接地址)`前加上一个感叹号`！`即为`![图片名称](图片地址)`\n\n图片也可跟链接一样使用变量赋值的方式来插入图片。\n\n### 表格\n\n制作表格使用 **|** 来分隔不同的单元格，使用 **-** 来分隔表头和其他行。\n\n例如：\n\n```\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n```\n\n效果：\n\n>| 表头 | 表头 |\n>| ---- | ---- |\n>| 单元格 | 单元格 |\n>| 单元格  | 单元格 |\n\n**我们可以设置表格的对齐方式：**\n\n\n\n- **-:** 设置内容和标题栏居右对齐。\n- **:-** 设置内容和标题栏居左对齐。\n- **:-:** 设置内容和标题栏居中对齐。\n\n例如：\n\n```\n| 左对齐   | 居中   |右对齐|\n| ：------ | ：------ ：|------： |\n| 单元格 | 单元格 |单元格 |\n| 单元格 | 单元格 |单元格 |\n```\n效果：\n>| 左对齐   | 居中   |右对齐|\n| :------ | :-------: | ------: |\n| 单元格 | 单元格 |单元格 |\n| 单元格 | 单元格 |单元格 |\n\n### 其他技巧\n\n#### 支持的 HTML 元素\n不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等\n#### 转义\nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n例如：\\**sdf**\n\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n```\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n```\n\n#### 公式\n\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染\n\n例如：\n\n```\n$$\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix} \n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\n\\end{vmatrix}\n${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n$$\n```\n\n\n\n效果：\n\n>$$\n>\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix} \n>\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n>\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\n>\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\n>\\end{vmatrix}\n>${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n>$$\n\n### Typora 画流程图、时序图(顺序图)、甘特图应用案例效果图\n\n1、横向流程图源码格式：\n\n```mermaid\ngraph LR \nA[方形] -->B(圆角)\nB --> C{条件a}\nC -->|a=1| D[结果1]\nC -->|a=2| E[结果2]\nF[横向流程图] \n```\n2、竖向流程图源码格式：\n\n```mermaid\ngraph TD\nA[方形] --> B(圆角)\n    B --> C{条件a}\n    C --> |a=1| D[结果1]\n    C --> |a=2| E[结果2]\n    F[竖向流程图]\n```\n3、标准流程图源码格式：\n```flow\nst=>start: 开始框\nop=>operation: 处理框\ncond=>condition: 判断框(是或否?)\nsub1=>subroutine: 子流程\nio=>inputoutput: 输入输出框\ne=>end: 结束框\nst->op->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op\n```\n4、标准流程图源码格式（横向）：\n```flow\nst=>start: 开始框\nop=>operation: 处理框\ncond=>condition: 判断框(是或否?)\nsub1=>subroutine: 子流程\nio=>inputoutput: 输入输出框\ne=>end: 结束框\nst(right)->op(right)->cond\ncond(yes)->io(bottom)->e\ncond(no)->sub1(right)->op\n```\n5、UML时序图源码样例：\n```sequence\n对象A->对象B: 对象B你好吗?（请求）\nNote right of 对象B: 对象B的描述\nNote left of 对象A: 对象A的描述(提示)\n对象B-->对象A: 我很好(响应)\n对象A->对象B: 你真的好吗？\n```\n6、UML时序图源码复杂样例：\n```sequence\nTitle: 标题：复杂使用\n对象A->对象B: 对象B你好吗?（请求）\nNote right of 对象B: 对象B的描述\nNote left of 对象A: 对象A的描述(提示)\n对象B-->对象A: 我很好(响应)\n对象B->小三: 你好吗\n小三-->>对象A: 对象B找我了\n对象A->对象B: 你真的好吗？\nNote over 小三,对象B: 我们是朋友\nparticipant C\nNote right of C: 没人陪我玩\n```\n7、UML标准时序图样例：\n```mermaid\n%% 时序图例子,-> 直线，-->虚线，->>实线箭头\n  sequenceDiagram\n    participant 张三\n    participant 李四\n    张三->王五: 王五你好吗？\n    loop 健康检查\n        王五->王五: 与疾病战斗\n    end\n    Note right of 王五: 合理 食物 <br/>看医生...\n    李四-->>张三: 很好!\n    王五->李四: 你怎么样?\n    李四-->王五: 很好!\n```\n8、甘特图样例：\n```mermaid\n%% 语法示例\n        gantt\n        dateFormat  YYYY-MM-DD\n        title 软件开发甘特图\n        section 设计\n        需求                      :done,    des1, 2014-01-06,2014-01-08\n        原型                      :active,  des2, 2014-01-09, 3d\n        UI设计                     :         des3, after des2, 5d\n    未来任务                     :         des4, after des3, 5d\n        section 开发\n        学习准备理解需求                      :crit, done, 2014-01-06,24h\n        设计框架                             :crit, done, after des2, 2d\n        开发                                 :crit, active, 3d\n        未来任务                              :crit, 5d\n        耍                                   :2d\n        section 测试\n        功能测试                              :active, a1, after des3, 3d\n        压力测试                               :after a1  , 20h\n        测试报告                               : 48h\n```","slug":"Markdown学习笔记","published":1,"updated":"2024-07-05T15:05:42.589Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5q000wvbin11xk5k6j","content":"<h2 id=\"Markdown是什么？\"><a href=\"#Markdown是什么？\" class=\"headerlink\" title=\"Markdown是什么？\"></a>Markdown是什么？</h2><p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p>\n<h2 id=\"为什么要用Markdown\"><a href=\"#为什么要用Markdown\" class=\"headerlink\" title=\"为什么要用Markdown\"></a>为什么要用Markdown</h2><p>由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。我这边使用Markdown主要使用来发表在网站上发表博文。</p>\n<hr>\n<h2 id=\"怎么使用Markdown\"><a href=\"#怎么使用Markdown\" class=\"headerlink\" title=\"怎么使用Markdown\"></a>怎么使用Markdown</h2><p>Markdown是一门标记语言，有他自有的一些标记方式。主要有标题、段落、列表、区块、代码、链接、图片、表格以及其他一些技巧。</p>\n<hr>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><p>标题使用“#”号加空格来标记。“#”的数量来表示1~6级的标题。</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">#### 四级标题</span><br><span class=\"line\">##### 五级标题</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<p>显示效果：</p>\n<blockquote>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6></blockquote>\n<p>如果只用一级标题以及耳机标题也可使用一个或多个“=”来标记一级标题。“-”来标记二级标题。但是需要标记符号需要在文本的紧接的下一行。<br>例如：<br>    一级标题<br>    =======<br>    二级标题<br>    ——-<br>标记效果：</p>\n<blockquote>\n<h1 id=\"一级标题-1\"><a href=\"#一级标题-1\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题-1\"><a href=\"#二级标题-1\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2></blockquote>\n<hr>\n<h3 id=\"字体以及段落\"><a href=\"#字体以及段落\" class=\"headerlink\" title=\"字体以及段落\"></a>字体以及段落</h3><h4 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h4><p>直接使用回车进行换行，求换段落可在末尾加两个空格再进行回车。也可使用空行来换段落。</p>\n<hr>\n<h4 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h4><p>Markdown有粗体、斜体、粗斜体等几种字体样式。<br>斜体使用两个<code>*</code>号或者<code>_</code>将文本包起来。<br>粗体使用三个<code>*</code>号或者<code>_</code>将文本包起来。<br>粗斜体使用三个<code>*</code>号或者<code>_</code>将文本包起来。</p>\n<p>例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*斜体字体*</span><br><span class=\"line\">**粗体字体**</span><br><span class=\"line\">***粗斜体字体***</span><br><span class=\"line\">_斜体字体_</span><br><span class=\"line\">__粗体字体__</span><br><span class=\"line\">___粗斜体字体___</span><br></pre></td></tr></table></figure>\n<p>效果:</p>\n<blockquote>\n<p><em>斜体字体</em><br><strong>粗体字体</strong><br><strong><em>粗斜体字体</em></strong><br><em>斜体字体</em><br><strong>粗体字体</strong><br><strong><em>粗斜体字体</em></strong></p>\n</blockquote>\n<hr>\n<h4 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h4><p>在空行使用连续的三个<code>*</code>或者连续三个<code>-</code>建立分割线。该行不能用其他东西。</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<p><code>***</code></p>\n<hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"---\"></a><code>---</code></h2><hr>\n</blockquote>\n<hr>\n<h4 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h4><p>在需要加上删除线的文字两端加上两个<code>~</code>即可添加删除线。</p>\n<p>例如：</p>\n<p><code>~~删除线~~</code></p>\n<p>效果：</p>\n<blockquote>\n<p><del>删除线</del></p>\n</blockquote>\n<hr>\n<h4 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h4><p>可使用html下划线标签<code>&lt;u&gt;</code>来获得下划线效果。</p>\n<p>例如：</p>\n<p><code>&lt;u&gt;下划线&lt;/u&gt;</code></p>\n<p>效果：</p>\n<blockquote>\n<p><u>下划线</u></p>\n</blockquote>\n<hr>\n<h4 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h4><p>脚注的目的是对文本进行补充说明。</p>\n<p>使用<code>[^要注明的文本]:注明的内容</code>这种格式进行标注。当然鼠标滑过文本是会显示注记的内容。</p>\n<p>效果如下：</p>\n<blockquote>\n<p>[^要注明的文本]:嘿嘿嘿 –注明的内容</p>\n</blockquote>\n<hr>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>列表显示<br>列表有两种一种是无序列表一种是有序列表。</p>\n<p>无序列表在文本前面加上星号<code>*</code>加号<code>+</code>减号<code>-</code>标记无序列表</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*第一项</span><br><span class=\"line\">*第二项</span><br><span class=\"line\">*第三项</span><br><span class=\"line\">*·······</span><br><span class=\"line\"></span><br><span class=\"line\">+第一项</span><br><span class=\"line\">+第二项</span><br><span class=\"line\">+第三项</span><br><span class=\"line\">+·······</span><br><span class=\"line\"></span><br><span class=\"line\">-第一项</span><br><span class=\"line\">-第二项</span><br><span class=\"line\">-第三项</span><br><span class=\"line\">-·······</span><br></pre></td></tr></table></figure>\n\n\n<p>效果：</p>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>······</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>······</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>······</li>\n</ul>\n</blockquote>\n<p>无序列表使用数字加上<code>.</code>来标记有序列表项</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.第一项</span><br><span class=\"line\">2.第二项</span><br><span class=\"line\">3.第三项</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<p>1.第一项</p>\n<p>2.第二项</p>\n<p>3.第三项</p>\n</blockquote>\n<h3 id=\"区块\"><a href=\"#区块\" class=\"headerlink\" title=\"区块\"></a>区块</h3><p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个空格符号：、</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**）</p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>写完文章时我常常会使用都链接</p>\n<p>链接常用<code>[链接名称](链接地址)</code>或者<code>&lt;链接地址&gt;</code></p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[链接名称](链接地址)</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;http.xxx.com&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80\">链接名称</a></p>\n<p>或者</p>\n<p>&lt;http.xxx.com&gt;</p>\n</blockquote>\n<h5 id=\"高级链接\"><a href=\"#高级链接\" class=\"headerlink\" title=\"高级链接\"></a>高级链接</h5><p>可以使用[变量]来链接地址.然后在文档末尾给变量赋值。就像下面这样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">设置变量</span><br><span class=\"line\">[链接名称][变量名]</span><br><span class=\"line\">赋值变量</span><br><span class=\"line\">[变量名]：www.xxxxxx.com</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p>图片格式跟链接基本相似。在链接<code>[链接名称](链接地址)</code>前加上一个感叹号<code>！</code>即为<code>![图片名称](图片地址)</code></p>\n<p>图片也可跟链接一样使用变量赋值的方式来插入图片。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">|  表头   | 表头  |</span><br><span class=\"line\">|  ----  | ----  |</span><br><span class=\"line\">| 单元格  | 单元格 |</span><br><span class=\"line\">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n</blockquote>\n<p><strong>我们可以设置表格的对齐方式：</strong></p>\n<ul>\n<li><strong>-:</strong> 设置内容和标题栏居右对齐。</li>\n<li><strong>:-</strong> 设置内容和标题栏居左对齐。</li>\n<li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li>\n</ul>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">| 左对齐   | 居中   |右对齐|</span><br><span class=\"line\">| ：------ | ：------ ：|------： |</span><br><span class=\"line\">| 单元格 | 单元格 |单元格 |</span><br><span class=\"line\">| 单元格 | 单元格 |单元格 |</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th align=\"center\">居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格</td>\n<td align=\"center\">单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n<tr>\n<td align=\"left\">单元格</td>\n<td align=\"center\">单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n</tbody></table>\n</blockquote>\n<h3 id=\"其他技巧\"><a href=\"#其他技巧\" class=\"headerlink\" title=\"其他技巧\"></a>其他技巧</h3><h4 id=\"支持的-HTML-元素\"><a href=\"#支持的-HTML-元素\" class=\"headerlink\" title=\"支持的 HTML 元素\"></a>支持的 HTML 元素</h4><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等</p>\n<h4 id=\"转义\"><a href=\"#转义\" class=\"headerlink\" title=\"转义\"></a>转义</h4><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：<br>例如：**sdf**</p>\n<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\   反斜线</span><br><span class=\"line\">&#96;   反引号</span><br><span class=\"line\">*   星号</span><br><span class=\"line\">_   下划线</span><br><span class=\"line\">&#123;&#125;  花括号</span><br><span class=\"line\">[]  方括号</span><br><span class=\"line\">()  小括号</span><br><span class=\"line\">#   井字号</span><br><span class=\"line\">+   加号</span><br><span class=\"line\">-   减号</span><br><span class=\"line\">.   英文句点</span><br><span class=\"line\">!   感叹号</span><br></pre></td></tr></table></figure>\n<h4 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h4><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\mathbf&#123;V&#125;_1 \\times \\mathbf&#123;V&#125;_2 &#x3D;  \\begin&#123;vmatrix&#125; </span><br><span class=\"line\">\\mathbf&#123;i&#125; &amp; \\mathbf&#123;j&#125; &amp; \\mathbf&#123;k&#125; \\\\</span><br><span class=\"line\">\\frac&#123;\\partial X&#125;&#123;\\partial u&#125; &amp;  \\frac&#123;\\partial Y&#125;&#123;\\partial u&#125; &amp; 0 \\\\</span><br><span class=\"line\">\\frac&#123;\\partial X&#125;&#123;\\partial v&#125; &amp;  \\frac&#123;\\partial Y&#125;&#123;\\partial v&#125; &amp; 0 \\\\</span><br><span class=\"line\">\\end&#123;vmatrix&#125;</span><br><span class=\"line\">$&#123;$tep1&#125;&#123;\\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n\n\n<p>效果：</p>\n<blockquote>\n<p>$$<br>\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}<br>\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\<br>\\frac{\\partial X}{\\partial u} &amp;  \\frac{\\partial Y}{\\partial u} &amp; 0 \\<br>\\frac{\\partial X}{\\partial v} &amp;  \\frac{\\partial Y}{\\partial v} &amp; 0 \\<br>\\end{vmatrix}<br>${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p>\n</blockquote>\n<h3 id=\"Typora-画流程图、时序图-顺序图-、甘特图应用案例效果图\"><a href=\"#Typora-画流程图、时序图-顺序图-、甘特图应用案例效果图\" class=\"headerlink\" title=\"Typora 画流程图、时序图(顺序图)、甘特图应用案例效果图\"></a>Typora 画流程图、时序图(顺序图)、甘特图应用案例效果图</h3><p>1、横向流程图源码格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">graph LR </span><br><span class=\"line\">A[方形] --&gt;B(圆角)</span><br><span class=\"line\">B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">C --&gt;|a&#x3D;1| D[结果1]</span><br><span class=\"line\">C --&gt;|a&#x3D;2| E[结果2]</span><br><span class=\"line\">F[横向流程图] </span><br></pre></td></tr></table></figure>\n<p>2、竖向流程图源码格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">A[方形] --&gt; B(圆角)</span><br><span class=\"line\">    B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class=\"line\">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class=\"line\">    F[竖向流程图]</span><br></pre></td></tr></table></figure>\n<p>3、标准流程图源码格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始框</span><br><span class=\"line\">op&#x3D;&gt;operation: 处理框</span><br><span class=\"line\">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class=\"line\">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class=\"line\">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class=\"line\">e&#x3D;&gt;end: 结束框</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>\n<p>4、标准流程图源码格式（横向）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始框</span><br><span class=\"line\">op&#x3D;&gt;operation: 处理框</span><br><span class=\"line\">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class=\"line\">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class=\"line\">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class=\"line\">e&#x3D;&gt;end: 结束框</span><br><span class=\"line\">st(right)-&gt;op(right)-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>\n<p>5、UML时序图源码样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class=\"line\">Note right of 对象B: 对象B的描述</span><br><span class=\"line\">Note left of 对象A: 对象A的描述(提示)</span><br><span class=\"line\">对象B--&gt;对象A: 我很好(响应)</span><br><span class=\"line\">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure>\n<p>6、UML时序图源码复杂样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Title: 标题：复杂使用</span><br><span class=\"line\">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class=\"line\">Note right of 对象B: 对象B的描述</span><br><span class=\"line\">Note left of 对象A: 对象A的描述(提示)</span><br><span class=\"line\">对象B--&gt;对象A: 我很好(响应)</span><br><span class=\"line\">对象B-&gt;小三: 你好吗</span><br><span class=\"line\">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class=\"line\">对象A-&gt;对象B: 你真的好吗？</span><br><span class=\"line\">Note over 小三,对象B: 我们是朋友</span><br><span class=\"line\">participant C</span><br><span class=\"line\">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure>\n<p>7、UML标准时序图样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class=\"line\">  sequenceDiagram</span><br><span class=\"line\">    participant 张三</span><br><span class=\"line\">    participant 李四</span><br><span class=\"line\">    张三-&gt;王五: 王五你好吗？</span><br><span class=\"line\">    loop 健康检查</span><br><span class=\"line\">        王五-&gt;王五: 与疾病战斗</span><br><span class=\"line\">    end</span><br><span class=\"line\">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class=\"line\">    李四--&gt;&gt;张三: 很好!</span><br><span class=\"line\">    王五-&gt;李四: 你怎么样?</span><br><span class=\"line\">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure>\n<p>8、甘特图样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">%% 语法示例</span><br><span class=\"line\">        gantt</span><br><span class=\"line\">        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">        title 软件开发甘特图</span><br><span class=\"line\">        section 设计</span><br><span class=\"line\">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class=\"line\">        UI设计                     :         des3, after des2, 5d</span><br><span class=\"line\">    未来任务                     :         des4, after des3, 5d</span><br><span class=\"line\">        section 开发</span><br><span class=\"line\">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class=\"line\">        设计框架                             :crit, done, after des2, 2d</span><br><span class=\"line\">        开发                                 :crit, active, 3d</span><br><span class=\"line\">        未来任务                              :crit, 5d</span><br><span class=\"line\">        耍                                   :2d</span><br><span class=\"line\">        section 测试</span><br><span class=\"line\">        功能测试                              :active, a1, after des3, 3d</span><br><span class=\"line\">        压力测试                               :after a1  , 20h</span><br><span class=\"line\">        测试报告                               : 48h</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"http://pic1.win4000.com/wallpaper/f/5860af34d5340.jpg","excerpt":"","more":"<h2 id=\"Markdown是什么？\"><a href=\"#Markdown是什么？\" class=\"headerlink\" title=\"Markdown是什么？\"></a>Markdown是什么？</h2><p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p>\n<h2 id=\"为什么要用Markdown\"><a href=\"#为什么要用Markdown\" class=\"headerlink\" title=\"为什么要用Markdown\"></a>为什么要用Markdown</h2><p>由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。我这边使用Markdown主要使用来发表在网站上发表博文。</p>\n<hr>\n<h2 id=\"怎么使用Markdown\"><a href=\"#怎么使用Markdown\" class=\"headerlink\" title=\"怎么使用Markdown\"></a>怎么使用Markdown</h2><p>Markdown是一门标记语言，有他自有的一些标记方式。主要有标题、段落、列表、区块、代码、链接、图片、表格以及其他一些技巧。</p>\n<hr>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><p>标题使用“#”号加空格来标记。“#”的数量来表示1~6级的标题。</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">#### 四级标题</span><br><span class=\"line\">##### 五级标题</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<p>显示效果：</p>\n<blockquote>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6></blockquote>\n<p>如果只用一级标题以及耳机标题也可使用一个或多个“=”来标记一级标题。“-”来标记二级标题。但是需要标记符号需要在文本的紧接的下一行。<br>例如：<br>    一级标题<br>    =======<br>    二级标题<br>    ——-<br>标记效果：</p>\n<blockquote>\n<h1 id=\"一级标题-1\"><a href=\"#一级标题-1\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题-1\"><a href=\"#二级标题-1\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2></blockquote>\n<hr>\n<h3 id=\"字体以及段落\"><a href=\"#字体以及段落\" class=\"headerlink\" title=\"字体以及段落\"></a>字体以及段落</h3><h4 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h4><p>直接使用回车进行换行，求换段落可在末尾加两个空格再进行回车。也可使用空行来换段落。</p>\n<hr>\n<h4 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h4><p>Markdown有粗体、斜体、粗斜体等几种字体样式。<br>斜体使用两个<code>*</code>号或者<code>_</code>将文本包起来。<br>粗体使用三个<code>*</code>号或者<code>_</code>将文本包起来。<br>粗斜体使用三个<code>*</code>号或者<code>_</code>将文本包起来。</p>\n<p>例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*斜体字体*</span><br><span class=\"line\">**粗体字体**</span><br><span class=\"line\">***粗斜体字体***</span><br><span class=\"line\">_斜体字体_</span><br><span class=\"line\">__粗体字体__</span><br><span class=\"line\">___粗斜体字体___</span><br></pre></td></tr></table></figure>\n<p>效果:</p>\n<blockquote>\n<p><em>斜体字体</em><br><strong>粗体字体</strong><br><strong><em>粗斜体字体</em></strong><br><em>斜体字体</em><br><strong>粗体字体</strong><br><strong><em>粗斜体字体</em></strong></p>\n</blockquote>\n<hr>\n<h4 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h4><p>在空行使用连续的三个<code>*</code>或者连续三个<code>-</code>建立分割线。该行不能用其他东西。</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<p><code>***</code></p>\n<hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"---\"></a><code>---</code></h2><hr>\n</blockquote>\n<hr>\n<h4 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h4><p>在需要加上删除线的文字两端加上两个<code>~</code>即可添加删除线。</p>\n<p>例如：</p>\n<p><code>~~删除线~~</code></p>\n<p>效果：</p>\n<blockquote>\n<p><del>删除线</del></p>\n</blockquote>\n<hr>\n<h4 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h4><p>可使用html下划线标签<code>&lt;u&gt;</code>来获得下划线效果。</p>\n<p>例如：</p>\n<p><code>&lt;u&gt;下划线&lt;/u&gt;</code></p>\n<p>效果：</p>\n<blockquote>\n<p><u>下划线</u></p>\n</blockquote>\n<hr>\n<h4 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h4><p>脚注的目的是对文本进行补充说明。</p>\n<p>使用<code>[^要注明的文本]:注明的内容</code>这种格式进行标注。当然鼠标滑过文本是会显示注记的内容。</p>\n<p>效果如下：</p>\n<blockquote>\n<p>[^要注明的文本]:嘿嘿嘿 –注明的内容</p>\n</blockquote>\n<hr>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>列表显示<br>列表有两种一种是无序列表一种是有序列表。</p>\n<p>无序列表在文本前面加上星号<code>*</code>加号<code>+</code>减号<code>-</code>标记无序列表</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*第一项</span><br><span class=\"line\">*第二项</span><br><span class=\"line\">*第三项</span><br><span class=\"line\">*·······</span><br><span class=\"line\"></span><br><span class=\"line\">+第一项</span><br><span class=\"line\">+第二项</span><br><span class=\"line\">+第三项</span><br><span class=\"line\">+·······</span><br><span class=\"line\"></span><br><span class=\"line\">-第一项</span><br><span class=\"line\">-第二项</span><br><span class=\"line\">-第三项</span><br><span class=\"line\">-·······</span><br></pre></td></tr></table></figure>\n\n\n<p>效果：</p>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>······</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>······</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n<li>······</li>\n</ul>\n</blockquote>\n<p>无序列表使用数字加上<code>.</code>来标记有序列表项</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.第一项</span><br><span class=\"line\">2.第二项</span><br><span class=\"line\">3.第三项</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<p>1.第一项</p>\n<p>2.第二项</p>\n<p>3.第三项</p>\n</blockquote>\n<h3 id=\"区块\"><a href=\"#区块\" class=\"headerlink\" title=\"区块\"></a>区块</h3><p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个空格符号：、</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**）</p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><p>写完文章时我常常会使用都链接</p>\n<p>链接常用<code>[链接名称](链接地址)</code>或者<code>&lt;链接地址&gt;</code></p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[链接名称](链接地址)</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;http.xxx.com&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80\">链接名称</a></p>\n<p>或者</p>\n<p>&lt;http.xxx.com&gt;</p>\n</blockquote>\n<h5 id=\"高级链接\"><a href=\"#高级链接\" class=\"headerlink\" title=\"高级链接\"></a>高级链接</h5><p>可以使用[变量]来链接地址.然后在文档末尾给变量赋值。就像下面这样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">设置变量</span><br><span class=\"line\">[链接名称][变量名]</span><br><span class=\"line\">赋值变量</span><br><span class=\"line\">[变量名]：www.xxxxxx.com</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p>图片格式跟链接基本相似。在链接<code>[链接名称](链接地址)</code>前加上一个感叹号<code>！</code>即为<code>![图片名称](图片地址)</code></p>\n<p>图片也可跟链接一样使用变量赋值的方式来插入图片。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">|  表头   | 表头  |</span><br><span class=\"line\">|  ----  | ----  |</span><br><span class=\"line\">| 单元格  | 单元格 |</span><br><span class=\"line\">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n</blockquote>\n<p><strong>我们可以设置表格的对齐方式：</strong></p>\n<ul>\n<li><strong>-:</strong> 设置内容和标题栏居右对齐。</li>\n<li><strong>:-</strong> 设置内容和标题栏居左对齐。</li>\n<li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li>\n</ul>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">| 左对齐   | 居中   |右对齐|</span><br><span class=\"line\">| ：------ | ：------ ：|------： |</span><br><span class=\"line\">| 单元格 | 单元格 |单元格 |</span><br><span class=\"line\">| 单元格 | 单元格 |单元格 |</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th align=\"center\">居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格</td>\n<td align=\"center\">单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n<tr>\n<td align=\"left\">单元格</td>\n<td align=\"center\">单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n</tbody></table>\n</blockquote>\n<h3 id=\"其他技巧\"><a href=\"#其他技巧\" class=\"headerlink\" title=\"其他技巧\"></a>其他技巧</h3><h4 id=\"支持的-HTML-元素\"><a href=\"#支持的-HTML-元素\" class=\"headerlink\" title=\"支持的 HTML 元素\"></a>支持的 HTML 元素</h4><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等</p>\n<h4 id=\"转义\"><a href=\"#转义\" class=\"headerlink\" title=\"转义\"></a>转义</h4><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：<br>例如：**sdf**</p>\n<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\   反斜线</span><br><span class=\"line\">&#96;   反引号</span><br><span class=\"line\">*   星号</span><br><span class=\"line\">_   下划线</span><br><span class=\"line\">&#123;&#125;  花括号</span><br><span class=\"line\">[]  方括号</span><br><span class=\"line\">()  小括号</span><br><span class=\"line\">#   井字号</span><br><span class=\"line\">+   加号</span><br><span class=\"line\">-   减号</span><br><span class=\"line\">.   英文句点</span><br><span class=\"line\">!   感叹号</span><br></pre></td></tr></table></figure>\n<h4 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h4><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\mathbf&#123;V&#125;_1 \\times \\mathbf&#123;V&#125;_2 &#x3D;  \\begin&#123;vmatrix&#125; </span><br><span class=\"line\">\\mathbf&#123;i&#125; &amp; \\mathbf&#123;j&#125; &amp; \\mathbf&#123;k&#125; \\\\</span><br><span class=\"line\">\\frac&#123;\\partial X&#125;&#123;\\partial u&#125; &amp;  \\frac&#123;\\partial Y&#125;&#123;\\partial u&#125; &amp; 0 \\\\</span><br><span class=\"line\">\\frac&#123;\\partial X&#125;&#123;\\partial v&#125; &amp;  \\frac&#123;\\partial Y&#125;&#123;\\partial v&#125; &amp; 0 \\\\</span><br><span class=\"line\">\\end&#123;vmatrix&#125;</span><br><span class=\"line\">$&#123;$tep1&#125;&#123;\\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n\n\n<p>效果：</p>\n<blockquote>\n<p>$$<br>\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}<br>\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\<br>\\frac{\\partial X}{\\partial u} &amp;  \\frac{\\partial Y}{\\partial u} &amp; 0 \\<br>\\frac{\\partial X}{\\partial v} &amp;  \\frac{\\partial Y}{\\partial v} &amp; 0 \\<br>\\end{vmatrix}<br>${$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p>\n</blockquote>\n<h3 id=\"Typora-画流程图、时序图-顺序图-、甘特图应用案例效果图\"><a href=\"#Typora-画流程图、时序图-顺序图-、甘特图应用案例效果图\" class=\"headerlink\" title=\"Typora 画流程图、时序图(顺序图)、甘特图应用案例效果图\"></a>Typora 画流程图、时序图(顺序图)、甘特图应用案例效果图</h3><p>1、横向流程图源码格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">graph LR </span><br><span class=\"line\">A[方形] --&gt;B(圆角)</span><br><span class=\"line\">B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">C --&gt;|a&#x3D;1| D[结果1]</span><br><span class=\"line\">C --&gt;|a&#x3D;2| E[结果2]</span><br><span class=\"line\">F[横向流程图] </span><br></pre></td></tr></table></figure>\n<p>2、竖向流程图源码格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">A[方形] --&gt; B(圆角)</span><br><span class=\"line\">    B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class=\"line\">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class=\"line\">    F[竖向流程图]</span><br></pre></td></tr></table></figure>\n<p>3、标准流程图源码格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始框</span><br><span class=\"line\">op&#x3D;&gt;operation: 处理框</span><br><span class=\"line\">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class=\"line\">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class=\"line\">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class=\"line\">e&#x3D;&gt;end: 结束框</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>\n<p>4、标准流程图源码格式（横向）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始框</span><br><span class=\"line\">op&#x3D;&gt;operation: 处理框</span><br><span class=\"line\">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class=\"line\">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class=\"line\">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class=\"line\">e&#x3D;&gt;end: 结束框</span><br><span class=\"line\">st(right)-&gt;op(right)-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>\n<p>5、UML时序图源码样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class=\"line\">Note right of 对象B: 对象B的描述</span><br><span class=\"line\">Note left of 对象A: 对象A的描述(提示)</span><br><span class=\"line\">对象B--&gt;对象A: 我很好(响应)</span><br><span class=\"line\">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure>\n<p>6、UML时序图源码复杂样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Title: 标题：复杂使用</span><br><span class=\"line\">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class=\"line\">Note right of 对象B: 对象B的描述</span><br><span class=\"line\">Note left of 对象A: 对象A的描述(提示)</span><br><span class=\"line\">对象B--&gt;对象A: 我很好(响应)</span><br><span class=\"line\">对象B-&gt;小三: 你好吗</span><br><span class=\"line\">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class=\"line\">对象A-&gt;对象B: 你真的好吗？</span><br><span class=\"line\">Note over 小三,对象B: 我们是朋友</span><br><span class=\"line\">participant C</span><br><span class=\"line\">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure>\n<p>7、UML标准时序图样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class=\"line\">  sequenceDiagram</span><br><span class=\"line\">    participant 张三</span><br><span class=\"line\">    participant 李四</span><br><span class=\"line\">    张三-&gt;王五: 王五你好吗？</span><br><span class=\"line\">    loop 健康检查</span><br><span class=\"line\">        王五-&gt;王五: 与疾病战斗</span><br><span class=\"line\">    end</span><br><span class=\"line\">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class=\"line\">    李四--&gt;&gt;张三: 很好!</span><br><span class=\"line\">    王五-&gt;李四: 你怎么样?</span><br><span class=\"line\">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure>\n<p>8、甘特图样例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">%% 语法示例</span><br><span class=\"line\">        gantt</span><br><span class=\"line\">        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">        title 软件开发甘特图</span><br><span class=\"line\">        section 设计</span><br><span class=\"line\">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class=\"line\">        UI设计                     :         des3, after des2, 5d</span><br><span class=\"line\">    未来任务                     :         des4, after des3, 5d</span><br><span class=\"line\">        section 开发</span><br><span class=\"line\">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class=\"line\">        设计框架                             :crit, done, after des2, 2d</span><br><span class=\"line\">        开发                                 :crit, active, 3d</span><br><span class=\"line\">        未来任务                              :crit, 5d</span><br><span class=\"line\">        耍                                   :2d</span><br><span class=\"line\">        section 测试</span><br><span class=\"line\">        功能测试                              :active, a1, after des3, 3d</span><br><span class=\"line\">        压力测试                               :after a1  , 20h</span><br><span class=\"line\">        测试报告                               : 48h</span><br></pre></td></tr></table></figure>"},{"title":"git提交代码完整流程","author":"戴昌益","date":"2024-07-02T16:00:00.000Z","_content":"\n1、先拉代码\n\n```\ngit pull\n```\n\n2、修改代码文件\n\n随时枪git status查看情况\n\n3、把更改的代码暂存起来\n\n```\n# 暂存所有更改\ngit add .\n# 暂存指定文件\ngit add temp.text\n# 取消暂存 可结合git status\ngit reset HEAD <file>\n```\n\n4、提交暂存文件到本地\n\n```\ngit commit -m '说明'\n```\n\n5、上传到远程合并代码\n\n```\ngit push <远程主机名> <本地分支名>:<远程分支名>\n例如：git push origin master：master\n```\n\n6、配置不行需要使用token上传\n\n1）生成token，已经生成了就不用管。\n\n在github页面的个人主页setting-Develper settings中查看或生成token\n\n我这里用的经典token\n\n2）输入密码时候输入token即可。或者修改项目url为https://token@github.com/username/repo.git\n\n使用\n\n```\ngit remote set-url origin https：………………修改\n```\n\n","source":"_posts/git提交代码完整流程.md","raw":"---\ntitle: git提交代码完整流程\nauthor: 戴昌益\ndate: 2024-07-03\ntags: [git]\ncategories: 技\n---\n\n1、先拉代码\n\n```\ngit pull\n```\n\n2、修改代码文件\n\n随时枪git status查看情况\n\n3、把更改的代码暂存起来\n\n```\n# 暂存所有更改\ngit add .\n# 暂存指定文件\ngit add temp.text\n# 取消暂存 可结合git status\ngit reset HEAD <file>\n```\n\n4、提交暂存文件到本地\n\n```\ngit commit -m '说明'\n```\n\n5、上传到远程合并代码\n\n```\ngit push <远程主机名> <本地分支名>:<远程分支名>\n例如：git push origin master：master\n```\n\n6、配置不行需要使用token上传\n\n1）生成token，已经生成了就不用管。\n\n在github页面的个人主页setting-Develper settings中查看或生成token\n\n我这里用的经典token\n\n2）输入密码时候输入token即可。或者修改项目url为https://token@github.com/username/repo.git\n\n使用\n\n```\ngit remote set-url origin https：………………修改\n```\n\n","slug":"git提交代码完整流程","published":1,"updated":"2024-07-05T15:05:42.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5s000zvbin32aa1aff","content":"<p>1、先拉代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>2、修改代码文件</p>\n<p>随时枪git status查看情况</p>\n<p>3、把更改的代码暂存起来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 暂存所有更改</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 暂存指定文件</span><br><span class=\"line\">git add temp.text</span><br><span class=\"line\"># 取消暂存 可结合git status</span><br><span class=\"line\">git reset HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure>\n<p>4、提交暂存文件到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit -m &#39;说明&#39;</span><br></pre></td></tr></table></figure>\n<p>5、上传到远程合并代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class=\"line\">例如：git push origin master：master</span><br></pre></td></tr></table></figure>\n<p>6、配置不行需要使用token上传</p>\n<p>1）生成token，已经生成了就不用管。</p>\n<p>在github页面的个人主页setting-Develper settings中查看或生成token</p>\n<p>我这里用的经典token</p>\n<p>2）输入密码时候输入token即可。或者修改项目url为<a href=\"https://token@github.com/username/repo.git\">https://token@github.com/username/repo.git</a></p>\n<p>使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote set-url origin https：………………修改</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<p>1、先拉代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>2、修改代码文件</p>\n<p>随时枪git status查看情况</p>\n<p>3、把更改的代码暂存起来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 暂存所有更改</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 暂存指定文件</span><br><span class=\"line\">git add temp.text</span><br><span class=\"line\"># 取消暂存 可结合git status</span><br><span class=\"line\">git reset HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure>\n<p>4、提交暂存文件到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit -m &#39;说明&#39;</span><br></pre></td></tr></table></figure>\n<p>5、上传到远程合并代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class=\"line\">例如：git push origin master：master</span><br></pre></td></tr></table></figure>\n<p>6、配置不行需要使用token上传</p>\n<p>1）生成token，已经生成了就不用管。</p>\n<p>在github页面的个人主页setting-Develper settings中查看或生成token</p>\n<p>我这里用的经典token</p>\n<p>2）输入密码时候输入token即可。或者修改项目url为<a href=\"https://token@github.com/username/repo.git\">https://token@github.com/username/repo.git</a></p>\n<p>使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote set-url origin https：………………修改</span><br></pre></td></tr></table></figure>\n"},{"title":"ubuntu20.04安装git","author":"戴昌益","date":"2024-07-03T07:52:07.000Z","_content":"\n# ubuntu20.04安装git\n\n### 步骤01：更新软件包\n\n执行下面提到的命令来更新 APT：\n\n```undefined\nsudo apt update\n```\n\n执行下面提到的命令来升级 apt：\n\n```undefined\nsudo apt upgrade\n```\n\n升级开始前，系统会询问您是否要继续，然后按“y”表示是。\n\n## 第2步：安装GIT\n\nGit实用程序包在ubuntu的软件源中提供，可以通过APT安装。只需输入以下命令即可安装Git。\n\n```undefined\nsudo apt install git\n```\n\nGit 需要安装 sudo 权限，因此输入密码然后按“y”继续安装。\n\n## 步骤3：检查已安装的GIT版本\n\n\n\n安装 Git 后，您可以使用屏幕截图中的以下命令检查其验证。\n\n```sql\ngit --version\n```\n\n# 拉取项目文件\n\n```\ngit clone https://github.com/dailaoda45/dailaoda45.github.io.git\n```\n\n## 配置 Git\n\n可以使用终端或命令行窗口来配置 Git。它需要一个用户名，充当绑定名称和电子邮件地址。\n\n进入git目录\n\n### 第1步：配置GIT\n\n使用以下命令设置用户名，将“dailaoda45”中的内容替换为您的名字。\n\n```\ngit config --global user.name “dailaoda45”\n```\n\n**第 2 步：**\n\n运行此命令设置电子邮件地址，将“[email ”中的内容替换为您的用户电子邮件。\n\n```\ngit config --global user.email daichangyi940713@foxmail.com \n```\n\n### 第 3 步：检查 GIT 设置\n\n下面的命令列出了对 Git 配置文件所做的更改，如屏幕截图所示。\n\n```sql\ngit config --list\n```\n\n### 第 4 步（可选）：GIT 配置\n\n\n\n如果您想编辑设置，可以随时使用以下命令更改它们：\n\ngit 配置\n\n查看常用git命令可运行下面命令查看 \n\n```\ngit config\n```\n\n","source":"_posts/ubuntu20.04安装git.md","raw":"---\ntitle: ubuntu20.04安装git\nauthor: 戴昌益\ndate: 2024-7-3 15:52:07\ntags: [博客部署安装]\ncategories: 技\n---\n\n# ubuntu20.04安装git\n\n### 步骤01：更新软件包\n\n执行下面提到的命令来更新 APT：\n\n```undefined\nsudo apt update\n```\n\n执行下面提到的命令来升级 apt：\n\n```undefined\nsudo apt upgrade\n```\n\n升级开始前，系统会询问您是否要继续，然后按“y”表示是。\n\n## 第2步：安装GIT\n\nGit实用程序包在ubuntu的软件源中提供，可以通过APT安装。只需输入以下命令即可安装Git。\n\n```undefined\nsudo apt install git\n```\n\nGit 需要安装 sudo 权限，因此输入密码然后按“y”继续安装。\n\n## 步骤3：检查已安装的GIT版本\n\n\n\n安装 Git 后，您可以使用屏幕截图中的以下命令检查其验证。\n\n```sql\ngit --version\n```\n\n# 拉取项目文件\n\n```\ngit clone https://github.com/dailaoda45/dailaoda45.github.io.git\n```\n\n## 配置 Git\n\n可以使用终端或命令行窗口来配置 Git。它需要一个用户名，充当绑定名称和电子邮件地址。\n\n进入git目录\n\n### 第1步：配置GIT\n\n使用以下命令设置用户名，将“dailaoda45”中的内容替换为您的名字。\n\n```\ngit config --global user.name “dailaoda45”\n```\n\n**第 2 步：**\n\n运行此命令设置电子邮件地址，将“[email ”中的内容替换为您的用户电子邮件。\n\n```\ngit config --global user.email daichangyi940713@foxmail.com \n```\n\n### 第 3 步：检查 GIT 设置\n\n下面的命令列出了对 Git 配置文件所做的更改，如屏幕截图所示。\n\n```sql\ngit config --list\n```\n\n### 第 4 步（可选）：GIT 配置\n\n\n\n如果您想编辑设置，可以随时使用以下命令更改它们：\n\ngit 配置\n\n查看常用git命令可运行下面命令查看 \n\n```\ngit config\n```\n\n","slug":"ubuntu20.04安装git","published":1,"updated":"2024-07-05T15:05:42.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5w0013vbinespve70a","content":"<h1 id=\"ubuntu20-04安装git\"><a href=\"#ubuntu20-04安装git\" class=\"headerlink\" title=\"ubuntu20.04安装git\"></a>ubuntu20.04安装git</h1><h3 id=\"步骤01：更新软件包\"><a href=\"#步骤01：更新软件包\" class=\"headerlink\" title=\"步骤01：更新软件包\"></a>步骤01：更新软件包</h3><p>执行下面提到的命令来更新 APT：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<p>执行下面提到的命令来升级 apt：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure>\n<p>升级开始前，系统会询问您是否要继续，然后按“y”表示是。</p>\n<h2 id=\"第2步：安装GIT\"><a href=\"#第2步：安装GIT\" class=\"headerlink\" title=\"第2步：安装GIT\"></a>第2步：安装GIT</h2><p>Git实用程序包在ubuntu的软件源中提供，可以通过APT安装。只需输入以下命令即可安装Git。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install git</span><br></pre></td></tr></table></figure>\n<p>Git 需要安装 sudo 权限，因此输入密码然后按“y”继续安装。</p>\n<h2 id=\"步骤3：检查已安装的GIT版本\"><a href=\"#步骤3：检查已安装的GIT版本\" class=\"headerlink\" title=\"步骤3：检查已安装的GIT版本\"></a>步骤3：检查已安装的GIT版本</h2><p>安装 Git 后，您可以使用屏幕截图中的以下命令检查其验证。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"comment\">--version</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"拉取项目文件\"><a href=\"#拉取项目文件\" class=\"headerlink\" title=\"拉取项目文件\"></a>拉取项目文件</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;dailaoda45&#x2F;dailaoda45.github.io.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置-Git\"><a href=\"#配置-Git\" class=\"headerlink\" title=\"配置 Git\"></a>配置 Git</h2><p>可以使用终端或命令行窗口来配置 Git。它需要一个用户名，充当绑定名称和电子邮件地址。</p>\n<p>进入git目录</p>\n<h3 id=\"第1步：配置GIT\"><a href=\"#第1步：配置GIT\" class=\"headerlink\" title=\"第1步：配置GIT\"></a>第1步：配置GIT</h3><p>使用以下命令设置用户名，将“dailaoda45”中的内容替换为您的名字。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name “dailaoda45”</span><br></pre></td></tr></table></figure>\n<p><strong>第 2 步：</strong></p>\n<p>运行此命令设置电子邮件地址，将“[email ”中的内容替换为您的用户电子邮件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.email daichangyi940713@foxmail.com </span><br></pre></td></tr></table></figure>\n<h3 id=\"第-3-步：检查-GIT-设置\"><a href=\"#第-3-步：检查-GIT-设置\" class=\"headerlink\" title=\"第 3 步：检查 GIT 设置\"></a>第 3 步：检查 GIT 设置</h3><p>下面的命令列出了对 Git 配置文件所做的更改，如屏幕截图所示。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config <span class=\"comment\">--list</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"第-4-步（可选）：GIT-配置\"><a href=\"#第-4-步（可选）：GIT-配置\" class=\"headerlink\" title=\"第 4 步（可选）：GIT 配置\"></a>第 4 步（可选）：GIT 配置</h3><p>如果您想编辑设置，可以随时使用以下命令更改它们：</p>\n<p>git 配置</p>\n<p>查看常用git命令可运行下面命令查看 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<h1 id=\"ubuntu20-04安装git\"><a href=\"#ubuntu20-04安装git\" class=\"headerlink\" title=\"ubuntu20.04安装git\"></a>ubuntu20.04安装git</h1><h3 id=\"步骤01：更新软件包\"><a href=\"#步骤01：更新软件包\" class=\"headerlink\" title=\"步骤01：更新软件包\"></a>步骤01：更新软件包</h3><p>执行下面提到的命令来更新 APT：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<p>执行下面提到的命令来升级 apt：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure>\n<p>升级开始前，系统会询问您是否要继续，然后按“y”表示是。</p>\n<h2 id=\"第2步：安装GIT\"><a href=\"#第2步：安装GIT\" class=\"headerlink\" title=\"第2步：安装GIT\"></a>第2步：安装GIT</h2><p>Git实用程序包在ubuntu的软件源中提供，可以通过APT安装。只需输入以下命令即可安装Git。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install git</span><br></pre></td></tr></table></figure>\n<p>Git 需要安装 sudo 权限，因此输入密码然后按“y”继续安装。</p>\n<h2 id=\"步骤3：检查已安装的GIT版本\"><a href=\"#步骤3：检查已安装的GIT版本\" class=\"headerlink\" title=\"步骤3：检查已安装的GIT版本\"></a>步骤3：检查已安装的GIT版本</h2><p>安装 Git 后，您可以使用屏幕截图中的以下命令检查其验证。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"comment\">--version</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"拉取项目文件\"><a href=\"#拉取项目文件\" class=\"headerlink\" title=\"拉取项目文件\"></a>拉取项目文件</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;dailaoda45&#x2F;dailaoda45.github.io.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置-Git\"><a href=\"#配置-Git\" class=\"headerlink\" title=\"配置 Git\"></a>配置 Git</h2><p>可以使用终端或命令行窗口来配置 Git。它需要一个用户名，充当绑定名称和电子邮件地址。</p>\n<p>进入git目录</p>\n<h3 id=\"第1步：配置GIT\"><a href=\"#第1步：配置GIT\" class=\"headerlink\" title=\"第1步：配置GIT\"></a>第1步：配置GIT</h3><p>使用以下命令设置用户名，将“dailaoda45”中的内容替换为您的名字。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name “dailaoda45”</span><br></pre></td></tr></table></figure>\n<p><strong>第 2 步：</strong></p>\n<p>运行此命令设置电子邮件地址，将“[email ”中的内容替换为您的用户电子邮件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.email daichangyi940713@foxmail.com </span><br></pre></td></tr></table></figure>\n<h3 id=\"第-3-步：检查-GIT-设置\"><a href=\"#第-3-步：检查-GIT-设置\" class=\"headerlink\" title=\"第 3 步：检查 GIT 设置\"></a>第 3 步：检查 GIT 设置</h3><p>下面的命令列出了对 Git 配置文件所做的更改，如屏幕截图所示。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config <span class=\"comment\">--list</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"第-4-步（可选）：GIT-配置\"><a href=\"#第-4-步（可选）：GIT-配置\" class=\"headerlink\" title=\"第 4 步（可选）：GIT 配置\"></a>第 4 步（可选）：GIT 配置</h3><p>如果您想编辑设置，可以随时使用以下命令更改它们：</p>\n<p>git 配置</p>\n<p>查看常用git命令可运行下面命令查看 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config</span><br></pre></td></tr></table></figure>\n"},{"title":"一切的开始","author":"戴昌益","date":"2022-12-29T16:00:00.000Z","_content":"\n## 终于成功了。\n\n首先我要感叹一下，终于成功了。按照着网上的视频文档，按部就班的进行操作。期间遇到过很多问题，网络问题、node.js安装问题、Git安装问题。由于我原来没有接触过相关的东西，我还需要学习github的基础使用方法。最后，我总算把网站部署到了github上去了。但是仍然没有成功，于是我就重新来过。并且我到处进行搜索问题所在我猜会不会是浏览器的问题呢？我就换了一个浏览器。我猜会不会是github设置的问题呢？我就又去把github了设置进行了调整。仍然没有解决到我的问题。最后我终于发现我在那个地址中的应该是github，我打成了guthub就是因为这一个字母之差让我多花了半天时间。这让我很生气,我生气自己怎么不仔细看一下。怎么不去仔细进行拼音写？总的说来，现在也已经成功了。给我带来的是满满的喜悦之情。这也不枉费我反复操作了好几遍。 \n\n---\n\n## 历程\n\n说起来我为什么要做这个事情呢？要部署自己的博客呢？这缘由。我在工作中所需要做到的一件事情。我当时需要制作一个我们专业领域软件的“功能模块树形图”(我专业是做测量软件技术支持人员专门教人家软件使用的想着做个树形图教学的时候会方便一点)。我就问我的读研的大学同学。有没有一些好的工具可以制作树形图？他最开始推荐我使用的是MindMaster等工具来进行操作,但是当我添加到100个树结点的时软件提示我，需要我付款购买，由于比较穷，我就另外去尝试了换一个免费的树形制作软件来进行操作。最后任然不是很理想。这个时候，这位大学同学给我推荐了一个百度开源的工具Apache ECharts里面有下载好的开源的案例，以树形图为例，我仅仅需要配置好配置文件。就可以制作出非常精美的树形图并且可以在浏览器里面进行播放。我花费了一天的时间去下载下来的案例里面的代码相关配置文件的格式。并且在同学的帮助下终于成功了，这给我带来很大的获得感。在这个过程中，我了解到一些基础的HTML的属性设置项。随后，我就去专门查看了HTML的教程。并且随之制作了一个简单html文件（用来直接在浏览器中打开HTML文件。在其中，我制作了一个表格。在表格后面有一个超链接可以直接跳转到相对应的教程视频网址进行视频观看。表格我们提前有统计好的Excel表。随后，后面还根据一些教程制作添加了筛选搜索）。在这里我了解到，有一个叫HTML的是一种标记语言，随后我就对HTML展开了深入学习。在我学习完HTML基础教程之后，我准备在进一步学习CSS的时候，我感觉到我的学习缺少了一点动机，因为已经没有具体的事物，需要我取运用CSS。这个时候我想，实现一下自己的梦想。建立一个属于自己的个人网站。并且利用我最近所学到的CSS，HTML等。去进行优化，以具体的项目实践带动我学习，同时也实现了自己的梦想。这就是我想做这件事情的原因。我的想法是从零开始写一个网站。然后去根据现有的一些源码去进行修改。然后慢慢通过自己积累的知识去优化自己的一个个人网站。刚开始我就问了一下我做开发的朋友，他让我去学一下网站的部署。我在网上搜了很多帖子，看了蛮多视频。最后我发现使用现在我所用到的这种方式是最节省时间，比较适合现阶段的我。这是我实现写个人网站中的一小步。就像B站UP主“程序羊”他所说的：“不管怎么样，你先玩起来”\n理所当然的。我就从搭建个人博客网站开始。先玩起来。慢慢去了解这些东西。这就有了现在这个博客。\n\n---\n\n## 总结\n\n虽然中间经历了很多波折。在这解决问题的过程中，我也学会了很多东西。因为不是专业人士。我对这里面很多东西都一知半解，甚至概念都还不清楚。在实际操作过程中，我慢慢的了解到一些一些新概念。HTML，CSS，JavaScript，他们具体是干什么的？例如在写下这篇文章的时候。我还不知道markdown是什么东西。但是在这之前在菜鸟教程上面对HTML进行了学习。通过类比，这两个东西应该还是相通之处。\n\n---\n\n## 下一步计划\n\n这里面的东西非常的庞大。例如“HTML”目前基础知识学习。“CSS”只是了解了具体的参数和实现方式，“JavaScript”还没有开始学。我后面要学的东西还很多很多。包括我现在所写的这个文本格式“markdown”。标记进行简单的了解。需要花个近日。后面要学的东西，还很多。做这种事情就是要有耐心持之以恒，慢慢来。太过急躁反而学不好，学不扎实。以后的计划就是将前面所提到的语言框架把他慢慢学扎实学透。然后对博客进行一个界面优化功能加入等等\n\n---","source":"_posts/一切的开始.md","raw":"---\ntitle: 一切的开始\nauthor: 戴昌益\ndate: 2022-12-30\ntags: [诗歌]\ncategories: 文\n---\n\n## 终于成功了。\n\n首先我要感叹一下，终于成功了。按照着网上的视频文档，按部就班的进行操作。期间遇到过很多问题，网络问题、node.js安装问题、Git安装问题。由于我原来没有接触过相关的东西，我还需要学习github的基础使用方法。最后，我总算把网站部署到了github上去了。但是仍然没有成功，于是我就重新来过。并且我到处进行搜索问题所在我猜会不会是浏览器的问题呢？我就换了一个浏览器。我猜会不会是github设置的问题呢？我就又去把github了设置进行了调整。仍然没有解决到我的问题。最后我终于发现我在那个地址中的应该是github，我打成了guthub就是因为这一个字母之差让我多花了半天时间。这让我很生气,我生气自己怎么不仔细看一下。怎么不去仔细进行拼音写？总的说来，现在也已经成功了。给我带来的是满满的喜悦之情。这也不枉费我反复操作了好几遍。 \n\n---\n\n## 历程\n\n说起来我为什么要做这个事情呢？要部署自己的博客呢？这缘由。我在工作中所需要做到的一件事情。我当时需要制作一个我们专业领域软件的“功能模块树形图”(我专业是做测量软件技术支持人员专门教人家软件使用的想着做个树形图教学的时候会方便一点)。我就问我的读研的大学同学。有没有一些好的工具可以制作树形图？他最开始推荐我使用的是MindMaster等工具来进行操作,但是当我添加到100个树结点的时软件提示我，需要我付款购买，由于比较穷，我就另外去尝试了换一个免费的树形制作软件来进行操作。最后任然不是很理想。这个时候，这位大学同学给我推荐了一个百度开源的工具Apache ECharts里面有下载好的开源的案例，以树形图为例，我仅仅需要配置好配置文件。就可以制作出非常精美的树形图并且可以在浏览器里面进行播放。我花费了一天的时间去下载下来的案例里面的代码相关配置文件的格式。并且在同学的帮助下终于成功了，这给我带来很大的获得感。在这个过程中，我了解到一些基础的HTML的属性设置项。随后，我就去专门查看了HTML的教程。并且随之制作了一个简单html文件（用来直接在浏览器中打开HTML文件。在其中，我制作了一个表格。在表格后面有一个超链接可以直接跳转到相对应的教程视频网址进行视频观看。表格我们提前有统计好的Excel表。随后，后面还根据一些教程制作添加了筛选搜索）。在这里我了解到，有一个叫HTML的是一种标记语言，随后我就对HTML展开了深入学习。在我学习完HTML基础教程之后，我准备在进一步学习CSS的时候，我感觉到我的学习缺少了一点动机，因为已经没有具体的事物，需要我取运用CSS。这个时候我想，实现一下自己的梦想。建立一个属于自己的个人网站。并且利用我最近所学到的CSS，HTML等。去进行优化，以具体的项目实践带动我学习，同时也实现了自己的梦想。这就是我想做这件事情的原因。我的想法是从零开始写一个网站。然后去根据现有的一些源码去进行修改。然后慢慢通过自己积累的知识去优化自己的一个个人网站。刚开始我就问了一下我做开发的朋友，他让我去学一下网站的部署。我在网上搜了很多帖子，看了蛮多视频。最后我发现使用现在我所用到的这种方式是最节省时间，比较适合现阶段的我。这是我实现写个人网站中的一小步。就像B站UP主“程序羊”他所说的：“不管怎么样，你先玩起来”\n理所当然的。我就从搭建个人博客网站开始。先玩起来。慢慢去了解这些东西。这就有了现在这个博客。\n\n---\n\n## 总结\n\n虽然中间经历了很多波折。在这解决问题的过程中，我也学会了很多东西。因为不是专业人士。我对这里面很多东西都一知半解，甚至概念都还不清楚。在实际操作过程中，我慢慢的了解到一些一些新概念。HTML，CSS，JavaScript，他们具体是干什么的？例如在写下这篇文章的时候。我还不知道markdown是什么东西。但是在这之前在菜鸟教程上面对HTML进行了学习。通过类比，这两个东西应该还是相通之处。\n\n---\n\n## 下一步计划\n\n这里面的东西非常的庞大。例如“HTML”目前基础知识学习。“CSS”只是了解了具体的参数和实现方式，“JavaScript”还没有开始学。我后面要学的东西还很多很多。包括我现在所写的这个文本格式“markdown”。标记进行简单的了解。需要花个近日。后面要学的东西，还很多。做这种事情就是要有耐心持之以恒，慢慢来。太过急躁反而学不好，学不扎实。以后的计划就是将前面所提到的语言框架把他慢慢学扎实学透。然后对博客进行一个界面优化功能加入等等\n\n---","slug":"一切的开始","published":1,"updated":"2024-07-05T15:05:43.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc5y0016vbin1nhqf1c9","content":"<h2 id=\"终于成功了。\"><a href=\"#终于成功了。\" class=\"headerlink\" title=\"终于成功了。\"></a>终于成功了。</h2><p>首先我要感叹一下，终于成功了。按照着网上的视频文档，按部就班的进行操作。期间遇到过很多问题，网络问题、node.js安装问题、Git安装问题。由于我原来没有接触过相关的东西，我还需要学习github的基础使用方法。最后，我总算把网站部署到了github上去了。但是仍然没有成功，于是我就重新来过。并且我到处进行搜索问题所在我猜会不会是浏览器的问题呢？我就换了一个浏览器。我猜会不会是github设置的问题呢？我就又去把github了设置进行了调整。仍然没有解决到我的问题。最后我终于发现我在那个地址中的应该是github，我打成了guthub就是因为这一个字母之差让我多花了半天时间。这让我很生气,我生气自己怎么不仔细看一下。怎么不去仔细进行拼音写？总的说来，现在也已经成功了。给我带来的是满满的喜悦之情。这也不枉费我反复操作了好几遍。 </p>\n<hr>\n<h2 id=\"历程\"><a href=\"#历程\" class=\"headerlink\" title=\"历程\"></a>历程</h2><p>说起来我为什么要做这个事情呢？要部署自己的博客呢？这缘由。我在工作中所需要做到的一件事情。我当时需要制作一个我们专业领域软件的“功能模块树形图”(我专业是做测量软件技术支持人员专门教人家软件使用的想着做个树形图教学的时候会方便一点)。我就问我的读研的大学同学。有没有一些好的工具可以制作树形图？他最开始推荐我使用的是MindMaster等工具来进行操作,但是当我添加到100个树结点的时软件提示我，需要我付款购买，由于比较穷，我就另外去尝试了换一个免费的树形制作软件来进行操作。最后任然不是很理想。这个时候，这位大学同学给我推荐了一个百度开源的工具Apache ECharts里面有下载好的开源的案例，以树形图为例，我仅仅需要配置好配置文件。就可以制作出非常精美的树形图并且可以在浏览器里面进行播放。我花费了一天的时间去下载下来的案例里面的代码相关配置文件的格式。并且在同学的帮助下终于成功了，这给我带来很大的获得感。在这个过程中，我了解到一些基础的HTML的属性设置项。随后，我就去专门查看了HTML的教程。并且随之制作了一个简单html文件（用来直接在浏览器中打开HTML文件。在其中，我制作了一个表格。在表格后面有一个超链接可以直接跳转到相对应的教程视频网址进行视频观看。表格我们提前有统计好的Excel表。随后，后面还根据一些教程制作添加了筛选搜索）。在这里我了解到，有一个叫HTML的是一种标记语言，随后我就对HTML展开了深入学习。在我学习完HTML基础教程之后，我准备在进一步学习CSS的时候，我感觉到我的学习缺少了一点动机，因为已经没有具体的事物，需要我取运用CSS。这个时候我想，实现一下自己的梦想。建立一个属于自己的个人网站。并且利用我最近所学到的CSS，HTML等。去进行优化，以具体的项目实践带动我学习，同时也实现了自己的梦想。这就是我想做这件事情的原因。我的想法是从零开始写一个网站。然后去根据现有的一些源码去进行修改。然后慢慢通过自己积累的知识去优化自己的一个个人网站。刚开始我就问了一下我做开发的朋友，他让我去学一下网站的部署。我在网上搜了很多帖子，看了蛮多视频。最后我发现使用现在我所用到的这种方式是最节省时间，比较适合现阶段的我。这是我实现写个人网站中的一小步。就像B站UP主“程序羊”他所说的：“不管怎么样，你先玩起来”<br>理所当然的。我就从搭建个人博客网站开始。先玩起来。慢慢去了解这些东西。这就有了现在这个博客。</p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>虽然中间经历了很多波折。在这解决问题的过程中，我也学会了很多东西。因为不是专业人士。我对这里面很多东西都一知半解，甚至概念都还不清楚。在实际操作过程中，我慢慢的了解到一些一些新概念。HTML，CSS，JavaScript，他们具体是干什么的？例如在写下这篇文章的时候。我还不知道markdown是什么东西。但是在这之前在菜鸟教程上面对HTML进行了学习。通过类比，这两个东西应该还是相通之处。</p>\n<hr>\n<h2 id=\"下一步计划\"><a href=\"#下一步计划\" class=\"headerlink\" title=\"下一步计划\"></a>下一步计划</h2><p>这里面的东西非常的庞大。例如“HTML”目前基础知识学习。“CSS”只是了解了具体的参数和实现方式，“JavaScript”还没有开始学。我后面要学的东西还很多很多。包括我现在所写的这个文本格式“markdown”。标记进行简单的了解。需要花个近日。后面要学的东西，还很多。做这种事情就是要有耐心持之以恒，慢慢来。太过急躁反而学不好，学不扎实。以后的计划就是将前面所提到的语言框架把他慢慢学扎实学透。然后对博客进行一个界面优化功能加入等等</p>\n<hr>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h2 id=\"终于成功了。\"><a href=\"#终于成功了。\" class=\"headerlink\" title=\"终于成功了。\"></a>终于成功了。</h2><p>首先我要感叹一下，终于成功了。按照着网上的视频文档，按部就班的进行操作。期间遇到过很多问题，网络问题、node.js安装问题、Git安装问题。由于我原来没有接触过相关的东西，我还需要学习github的基础使用方法。最后，我总算把网站部署到了github上去了。但是仍然没有成功，于是我就重新来过。并且我到处进行搜索问题所在我猜会不会是浏览器的问题呢？我就换了一个浏览器。我猜会不会是github设置的问题呢？我就又去把github了设置进行了调整。仍然没有解决到我的问题。最后我终于发现我在那个地址中的应该是github，我打成了guthub就是因为这一个字母之差让我多花了半天时间。这让我很生气,我生气自己怎么不仔细看一下。怎么不去仔细进行拼音写？总的说来，现在也已经成功了。给我带来的是满满的喜悦之情。这也不枉费我反复操作了好几遍。 </p>\n<hr>\n<h2 id=\"历程\"><a href=\"#历程\" class=\"headerlink\" title=\"历程\"></a>历程</h2><p>说起来我为什么要做这个事情呢？要部署自己的博客呢？这缘由。我在工作中所需要做到的一件事情。我当时需要制作一个我们专业领域软件的“功能模块树形图”(我专业是做测量软件技术支持人员专门教人家软件使用的想着做个树形图教学的时候会方便一点)。我就问我的读研的大学同学。有没有一些好的工具可以制作树形图？他最开始推荐我使用的是MindMaster等工具来进行操作,但是当我添加到100个树结点的时软件提示我，需要我付款购买，由于比较穷，我就另外去尝试了换一个免费的树形制作软件来进行操作。最后任然不是很理想。这个时候，这位大学同学给我推荐了一个百度开源的工具Apache ECharts里面有下载好的开源的案例，以树形图为例，我仅仅需要配置好配置文件。就可以制作出非常精美的树形图并且可以在浏览器里面进行播放。我花费了一天的时间去下载下来的案例里面的代码相关配置文件的格式。并且在同学的帮助下终于成功了，这给我带来很大的获得感。在这个过程中，我了解到一些基础的HTML的属性设置项。随后，我就去专门查看了HTML的教程。并且随之制作了一个简单html文件（用来直接在浏览器中打开HTML文件。在其中，我制作了一个表格。在表格后面有一个超链接可以直接跳转到相对应的教程视频网址进行视频观看。表格我们提前有统计好的Excel表。随后，后面还根据一些教程制作添加了筛选搜索）。在这里我了解到，有一个叫HTML的是一种标记语言，随后我就对HTML展开了深入学习。在我学习完HTML基础教程之后，我准备在进一步学习CSS的时候，我感觉到我的学习缺少了一点动机，因为已经没有具体的事物，需要我取运用CSS。这个时候我想，实现一下自己的梦想。建立一个属于自己的个人网站。并且利用我最近所学到的CSS，HTML等。去进行优化，以具体的项目实践带动我学习，同时也实现了自己的梦想。这就是我想做这件事情的原因。我的想法是从零开始写一个网站。然后去根据现有的一些源码去进行修改。然后慢慢通过自己积累的知识去优化自己的一个个人网站。刚开始我就问了一下我做开发的朋友，他让我去学一下网站的部署。我在网上搜了很多帖子，看了蛮多视频。最后我发现使用现在我所用到的这种方式是最节省时间，比较适合现阶段的我。这是我实现写个人网站中的一小步。就像B站UP主“程序羊”他所说的：“不管怎么样，你先玩起来”<br>理所当然的。我就从搭建个人博客网站开始。先玩起来。慢慢去了解这些东西。这就有了现在这个博客。</p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>虽然中间经历了很多波折。在这解决问题的过程中，我也学会了很多东西。因为不是专业人士。我对这里面很多东西都一知半解，甚至概念都还不清楚。在实际操作过程中，我慢慢的了解到一些一些新概念。HTML，CSS，JavaScript，他们具体是干什么的？例如在写下这篇文章的时候。我还不知道markdown是什么东西。但是在这之前在菜鸟教程上面对HTML进行了学习。通过类比，这两个东西应该还是相通之处。</p>\n<hr>\n<h2 id=\"下一步计划\"><a href=\"#下一步计划\" class=\"headerlink\" title=\"下一步计划\"></a>下一步计划</h2><p>这里面的东西非常的庞大。例如“HTML”目前基础知识学习。“CSS”只是了解了具体的参数和实现方式，“JavaScript”还没有开始学。我后面要学的东西还很多很多。包括我现在所写的这个文本格式“markdown”。标记进行简单的了解。需要花个近日。后面要学的东西，还很多。做这种事情就是要有耐心持之以恒，慢慢来。太过急躁反而学不好，学不扎实。以后的计划就是将前面所提到的语言框架把他慢慢学扎实学透。然后对博客进行一个界面优化功能加入等等</p>\n<hr>\n"},{"title":"博客更新与备份备忘录","author":"戴昌益","date":"2023-02-15T02:00:00.000Z","_content":"\n# 博客更新与备份备忘录\n\n建这个博客是因为自己的兴趣需求，希望有一个地方可以记录，并查看的在线平台。因为自己不是开发人员。全套教程都是照搬B站视频搭建以及搜索到的将备份信息放在github.io的source分支下。自己博文更新不频繁，年纪大了，记忆力也不好每一次都会忘记更新部署新的博文操作步骤，备份步骤每次都要吧教程翻出来再看一遍。所以这几记录一下。\n\n**首先是更新博文**\n\n1、将写好的MD文件放在source/_post/目录下。\n\n2、然后一次运行下面这些命令\n\n`hexo clean`\n\n清除缓存文件 (`db.json`) 和已生成的静态文件 (`public`)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n`hexo g`生成静态文件。\n\n`hexo d`文件生成后立即部署网站，部署或默认部署只github的master分支。\n\n**接下来是备份**\n\ngithub上有两个分支一个是master用来存放静态文件，一个是source用来存放资源文件，主题设置等。\n\n在blog总目录下运行git bash\n\ngit status\n\n`git add .` git 添加所有修改的文件\n\n`git commit -m \"此次提交的备注\"` \n\n`git push origin master:source`推送至备份前提是github中source分支已设置为默认分支否则需要推送至指定的分支例如git push <远程主机名> <本地分支名>:<远程分支名>\n\n","source":"_posts/博客更新与备份备忘录.md","raw":"---\ntitle: 博客更新与备份备忘录\nauthor: 戴昌益\ndate: 2023-02-15 10:00:00\ntags: [记录]\ncategories: 文|技\n---\n\n# 博客更新与备份备忘录\n\n建这个博客是因为自己的兴趣需求，希望有一个地方可以记录，并查看的在线平台。因为自己不是开发人员。全套教程都是照搬B站视频搭建以及搜索到的将备份信息放在github.io的source分支下。自己博文更新不频繁，年纪大了，记忆力也不好每一次都会忘记更新部署新的博文操作步骤，备份步骤每次都要吧教程翻出来再看一遍。所以这几记录一下。\n\n**首先是更新博文**\n\n1、将写好的MD文件放在source/_post/目录下。\n\n2、然后一次运行下面这些命令\n\n`hexo clean`\n\n清除缓存文件 (`db.json`) 和已生成的静态文件 (`public`)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n`hexo g`生成静态文件。\n\n`hexo d`文件生成后立即部署网站，部署或默认部署只github的master分支。\n\n**接下来是备份**\n\ngithub上有两个分支一个是master用来存放静态文件，一个是source用来存放资源文件，主题设置等。\n\n在blog总目录下运行git bash\n\ngit status\n\n`git add .` git 添加所有修改的文件\n\n`git commit -m \"此次提交的备注\"` \n\n`git push origin master:source`推送至备份前提是github中source分支已设置为默认分支否则需要推送至指定的分支例如git push <远程主机名> <本地分支名>:<远程分支名>\n\n","slug":"博客更新与备份备忘录","published":1,"updated":"2024-07-05T15:05:42.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc61001avbinht3w4y5u","content":"<h1 id=\"博客更新与备份备忘录\"><a href=\"#博客更新与备份备忘录\" class=\"headerlink\" title=\"博客更新与备份备忘录\"></a>博客更新与备份备忘录</h1><p>建这个博客是因为自己的兴趣需求，希望有一个地方可以记录，并查看的在线平台。因为自己不是开发人员。全套教程都是照搬B站视频搭建以及搜索到的将备份信息放在github.io的source分支下。自己博文更新不频繁，年纪大了，记忆力也不好每一次都会忘记更新部署新的博文操作步骤，备份步骤每次都要吧教程翻出来再看一遍。所以这几记录一下。</p>\n<p><strong>首先是更新博文</strong></p>\n<p>1、将写好的MD文件放在source/_post/目录下。</p>\n<p>2、然后一次运行下面这些命令</p>\n<p><code>hexo clean</code></p>\n<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<p><code>hexo g</code>生成静态文件。</p>\n<p><code>hexo d</code>文件生成后立即部署网站，部署或默认部署只github的master分支。</p>\n<p><strong>接下来是备份</strong></p>\n<p>github上有两个分支一个是master用来存放静态文件，一个是source用来存放资源文件，主题设置等。</p>\n<p>在blog总目录下运行git bash</p>\n<p>git status</p>\n<p><code>git add .</code> git 添加所有修改的文件</p>\n<p><code>git commit -m &quot;此次提交的备注&quot;</code> </p>\n<p><code>git push origin master:source</code>推送至备份前提是github中source分支已设置为默认分支否则需要推送至指定的分支例如git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</p>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<h1 id=\"博客更新与备份备忘录\"><a href=\"#博客更新与备份备忘录\" class=\"headerlink\" title=\"博客更新与备份备忘录\"></a>博客更新与备份备忘录</h1><p>建这个博客是因为自己的兴趣需求，希望有一个地方可以记录，并查看的在线平台。因为自己不是开发人员。全套教程都是照搬B站视频搭建以及搜索到的将备份信息放在github.io的source分支下。自己博文更新不频繁，年纪大了，记忆力也不好每一次都会忘记更新部署新的博文操作步骤，备份步骤每次都要吧教程翻出来再看一遍。所以这几记录一下。</p>\n<p><strong>首先是更新博文</strong></p>\n<p>1、将写好的MD文件放在source/_post/目录下。</p>\n<p>2、然后一次运行下面这些命令</p>\n<p><code>hexo clean</code></p>\n<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<p><code>hexo g</code>生成静态文件。</p>\n<p><code>hexo d</code>文件生成后立即部署网站，部署或默认部署只github的master分支。</p>\n<p><strong>接下来是备份</strong></p>\n<p>github上有两个分支一个是master用来存放静态文件，一个是source用来存放资源文件，主题设置等。</p>\n<p>在blog总目录下运行git bash</p>\n<p>git status</p>\n<p><code>git add .</code> git 添加所有修改的文件</p>\n<p><code>git commit -m &quot;此次提交的备注&quot;</code> </p>\n<p><code>git push origin master:source</code>推送至备份前提是github中source分支已设置为默认分支否则需要推送至指定的分支例如git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</p>\n"},{"title":"我想留在深圳","author":"戴昌益","date":"2023-02-14T02:52:07.000Z","_content":"\n# 我想留在深圳\n\n来深圳也快一年了，来深圳之前就考虑过很多要不要去深圳，我该不该去深圳。\n\n深圳能看的见的就有房价高不可攀，在事物没有变化或者转机的话，按照现有水平基本是此生无望，深圳生活水平高流传最广的一句谚语就是：“深圳挣钱深圳花，一分别想带回家。”深圳通勤压力大，到处都是人挤人，乘车难住的离公司稍微远点就通勤困难。更加让人望而却步的是深圳人人都是打工狂魔，人人都是为挣钱拼尽全力。这些理由都在告诉我深圳是一个不属于我的城市，去深圳是长久不了的。\n\n但是我还是来了深圳，深圳也不是像前面说的那么一无是处。深圳市一个做充满生机的城市到处都工作机会不怕找不到工作。更为重要的是我的对象她在深圳，两个人在一起生活就应该待在一起。另外当时我也想换工作想更上一层楼，想去更加正规的公司去试一试，去多尝试尝试多经历经历。深圳也是一个不错的选择。那个时候接近年底，马上就要发年终奖了。我想着过完年我再辞职，我再坚持在长沙工作一阵子拿到年终奖。后来在跟家人沟通过后，家人也支持我辞职回深圳去跟对象团聚。结合公司的的经营情况，以及当时公司的德性我明白要想顺利拿到年终奖，以及自己应得的奖金并没有那么容易。与其在公司耗着不如早日辞职脱离苦海。就这样我来到了深圳。\n\n来深圳对我来说并不轻松，每天早上要去做人挤人的地铁，我个人一直以来都不喜欢人挤人。不喜欢这种感受。我过去在老家小县城因为坐公交比较拥挤，我宁愿背着书包从城市的这一头步行到城市的那一头，这是我受到的首个挑战。后面还有更多的挑战，刚开始在深圳的第一份工作是某公司技术支持部门主管的工作。我需要重新熟悉公司氛围，文化需要熟悉老板，领导的秉性，甚至还得好好管理我的手下。这也是自己第一次直接做部门领导，还是从外面空降的没有根基并不顺利，公司规模也就30号人每天都在换不同的员工我在职的短短几个月公司人事主管换了3轮。后来我也没干了，待业在宿舍准备重新找工作。很不巧，这个时候又赶上疫情，深圳全市静默。重新找工作也不顺利。\n\n那个时候也没什么钱，找不到工作是非常痛苦的。陆陆续续每天投10个简历。投了一个月大部分石沉大海，好在后面情况慢慢缓解了，在四月底可算有一个公司联系了过来，虽然待遇不理想，但这个时候对我我的心理来说已经到了山穷水尽的时候了，啥工作能要我我就会去干了。面试完基本就定了，对方也发来了offer，要先去总部去培训一个月，总部在广州。我不太想去广州，与对象商量后，综合考虑下还是拒绝了。另外又去了另外一家公司。也就是我现在的这家公司。后面顺利顺利入职。\n\n在现在这家公司也有一年了，这一年也并不顺利，但好在有一份工作糊口能生存下去。在这家公司我的岗位是项目经理，主要对接一些项目上的需求，并安排项目的一些工作。这对于我来说是一个全新的领域，我啥也不知道经历了及其痛苦的一段时间才慢慢了解应该怎么处理。虽然还比较生疏但好在也上路了。\n\n来深圳一年了，所经历的所感受的并不好。但是我还是给自己下了一个决心我要留在深圳。直到我后悔的那一天，目前位置我还不后悔。要不要留在深圳或者换个说法在深圳长期发展？这个问题从我来深圳起我就一直在考虑。好几个夜深人静的时候我在知乎上百度上搜索着“深圳是一个怎么样的城市”，“留在深圳的理由”，”深圳现在开始衰落了吗“，”深圳有什么好“等等如此种种的问题。我试图去网上找到答案，试图去找寻自己未来的方向。我看到所很多不同的答案，有大把的人觉得深圳有这种那种各种各样的问题而逃离深圳的。但是不断有人前赴后继的人来到深圳的，似乎深圳每年都要换一茬人似的。我也会时常去问那些深圳定居买房的同事或朋友，为求多了解一些。\n\n最后我还是决定在深圳长期发展了，不知道未来我会不会有其他的想法，未来的事情未来再说。我要留在深圳这是结合自己的背景最后深刻做出的决断。首要因素就是就业机会。在湖南作为年轻人要想有好的发展或者说就业机会，首要选择的就是长沙、广州、深圳以及珠三角一带。这里面长沙的房价最为理想也是最有可能实现的买房定居的目标城市，而广州深圳房价却是那么遥不可及。这几个地方我都去工作过。各有特色各有各的好，但是就工作机会来说产业链来说，最为强盛的是广州跟深圳。深圳又比广州更为有创造力。长期来看未来有新的产业新的风口必将发生在深圳。作为一个普通人的下层人士要想跨越阶级就必须乘风而上。要想乘风而上深圳市拥有风口最多的地方。如果风口来了，也许自己搭不上这个便车。但是想一想啊，只要待在深圳才会有机会啊。去其他的二线三线这样的机会会少的多。为了这么一丝丝的机会就应该待着深圳。\n\n深圳是一座发展的城市，只要中国共产党还是中国的执政党，深圳就会发展下去。就算全国经济下行，全国经济崩溃深圳也会是最有耐力，最有机会的城市之一。我们现在生活面临这许多的问题，面临到医疗教育资源匮乏，面临这房价高到难以企望，面临着高压工作。但是我想说给深圳一点时间，这些问题都会慢慢好起来的。翻开深圳政府在线的官网，我们搜索关键词教育。可以看到一年内《龙华区今年新建改建8所学校》、《公办学校建设大提速》、《光明又有两所新学校9月投用》等等相关的内容，我们可以看出我们看到了问题，深圳政府同样也看到了问题并且在积极解决。不久的将来教育资源将会越来好，同样根据教育相关的政策也是不断的出台。医疗问题也是同样都在积极处理。现在有些问题是暂时的我相信未来深圳必将成为北上广那种的层级，那种底蕴的城市。至于房价高，这个问题不仅仅是深圳所面临的问题在全国所有的城市都面临这这样一个问题只是深圳显得尤为突出，房产将要改革那么改革的第一站必将会是深圳。深圳是一个求变的城市，有很多变化，有变化才会有机会，并且还有公租房可以选择，而且政府也在不断完善新增房产这些终将会得到缓解。我们当下就应该广积粮，缓称王，厚积而薄发。总会有机会来临的那一天，等到机会来临的那一天我们再牢牢的抓住。至于说在深圳没有归属感，没有感情。这不过是情绪上作为一个外来人的感受罢了，在这里没有形成自己的圈子。是自己把自己装在套子里，把自己排除出了深圳之外。随着时间的推移，多交朋友多交流。在未来深圳必将会是你的城市。有个朋友曾经跟我说过深圳是一个你越呆越离不开的城市，现在我深以为然，这一切的一切都需要时间来给我们答案，就目前而言远远还没到我需要放弃而离开的时候。\n\n关于内卷我觉得远远没有想想中的那么糟糕。内卷是社会增长变少了，人们只能通过竞争来获取岗位，最后干更多的工作但是拿到的钱却更少了。这在深圳并不是普遍现象，深圳的经济仍然在不断增长。在深圳的普遍现象是干同样的活拿到的钱却多了，尽管深圳生活成本同样高了。目前大家口口声声说这也卷那也卷，这只不过是竞争激烈的代名词，竞争并不代表内卷。大家秉持的理念是：大家都是来搞钱，多干就得多给钱，你看你不给钱在深圳有没有人给你多干活。那些喜欢说卷的人不过是自己不努力还不希望别人努力提高自己的人，看到自己竞争力日益变弱就常常把内卷挂在口中自己骗自己安慰自己把责任推给内卷。人生本来就是一个不断成长的过程愿意付出一些代价去让自己成长，愿意通过努力去获得自己想要的东西本生就是是一个优良的品质，是严格的自我修养，是人与生俱来的。\n\n如果觉得这种环境很累我认为大可不必。努力学习，提高自我这些应该是融入日常的就像吃饭睡觉一样平常的事情，不应该成为内心的负担，调整好心态尤为重要。今天看到一句话作为结尾吧------内心没有方向的人，去哪里都是逃离，生命有方向的人，走向哪里都是追寻。\n","source":"_posts/我想留在深圳.md","raw":"---\ntitle: 我想留在深圳\nauthor: 戴昌益\ndate: 2023-02-14 10:52:07\ntags: [叙述]\ncategories: 文\n---\n\n# 我想留在深圳\n\n来深圳也快一年了，来深圳之前就考虑过很多要不要去深圳，我该不该去深圳。\n\n深圳能看的见的就有房价高不可攀，在事物没有变化或者转机的话，按照现有水平基本是此生无望，深圳生活水平高流传最广的一句谚语就是：“深圳挣钱深圳花，一分别想带回家。”深圳通勤压力大，到处都是人挤人，乘车难住的离公司稍微远点就通勤困难。更加让人望而却步的是深圳人人都是打工狂魔，人人都是为挣钱拼尽全力。这些理由都在告诉我深圳是一个不属于我的城市，去深圳是长久不了的。\n\n但是我还是来了深圳，深圳也不是像前面说的那么一无是处。深圳市一个做充满生机的城市到处都工作机会不怕找不到工作。更为重要的是我的对象她在深圳，两个人在一起生活就应该待在一起。另外当时我也想换工作想更上一层楼，想去更加正规的公司去试一试，去多尝试尝试多经历经历。深圳也是一个不错的选择。那个时候接近年底，马上就要发年终奖了。我想着过完年我再辞职，我再坚持在长沙工作一阵子拿到年终奖。后来在跟家人沟通过后，家人也支持我辞职回深圳去跟对象团聚。结合公司的的经营情况，以及当时公司的德性我明白要想顺利拿到年终奖，以及自己应得的奖金并没有那么容易。与其在公司耗着不如早日辞职脱离苦海。就这样我来到了深圳。\n\n来深圳对我来说并不轻松，每天早上要去做人挤人的地铁，我个人一直以来都不喜欢人挤人。不喜欢这种感受。我过去在老家小县城因为坐公交比较拥挤，我宁愿背着书包从城市的这一头步行到城市的那一头，这是我受到的首个挑战。后面还有更多的挑战，刚开始在深圳的第一份工作是某公司技术支持部门主管的工作。我需要重新熟悉公司氛围，文化需要熟悉老板，领导的秉性，甚至还得好好管理我的手下。这也是自己第一次直接做部门领导，还是从外面空降的没有根基并不顺利，公司规模也就30号人每天都在换不同的员工我在职的短短几个月公司人事主管换了3轮。后来我也没干了，待业在宿舍准备重新找工作。很不巧，这个时候又赶上疫情，深圳全市静默。重新找工作也不顺利。\n\n那个时候也没什么钱，找不到工作是非常痛苦的。陆陆续续每天投10个简历。投了一个月大部分石沉大海，好在后面情况慢慢缓解了，在四月底可算有一个公司联系了过来，虽然待遇不理想，但这个时候对我我的心理来说已经到了山穷水尽的时候了，啥工作能要我我就会去干了。面试完基本就定了，对方也发来了offer，要先去总部去培训一个月，总部在广州。我不太想去广州，与对象商量后，综合考虑下还是拒绝了。另外又去了另外一家公司。也就是我现在的这家公司。后面顺利顺利入职。\n\n在现在这家公司也有一年了，这一年也并不顺利，但好在有一份工作糊口能生存下去。在这家公司我的岗位是项目经理，主要对接一些项目上的需求，并安排项目的一些工作。这对于我来说是一个全新的领域，我啥也不知道经历了及其痛苦的一段时间才慢慢了解应该怎么处理。虽然还比较生疏但好在也上路了。\n\n来深圳一年了，所经历的所感受的并不好。但是我还是给自己下了一个决心我要留在深圳。直到我后悔的那一天，目前位置我还不后悔。要不要留在深圳或者换个说法在深圳长期发展？这个问题从我来深圳起我就一直在考虑。好几个夜深人静的时候我在知乎上百度上搜索着“深圳是一个怎么样的城市”，“留在深圳的理由”，”深圳现在开始衰落了吗“，”深圳有什么好“等等如此种种的问题。我试图去网上找到答案，试图去找寻自己未来的方向。我看到所很多不同的答案，有大把的人觉得深圳有这种那种各种各样的问题而逃离深圳的。但是不断有人前赴后继的人来到深圳的，似乎深圳每年都要换一茬人似的。我也会时常去问那些深圳定居买房的同事或朋友，为求多了解一些。\n\n最后我还是决定在深圳长期发展了，不知道未来我会不会有其他的想法，未来的事情未来再说。我要留在深圳这是结合自己的背景最后深刻做出的决断。首要因素就是就业机会。在湖南作为年轻人要想有好的发展或者说就业机会，首要选择的就是长沙、广州、深圳以及珠三角一带。这里面长沙的房价最为理想也是最有可能实现的买房定居的目标城市，而广州深圳房价却是那么遥不可及。这几个地方我都去工作过。各有特色各有各的好，但是就工作机会来说产业链来说，最为强盛的是广州跟深圳。深圳又比广州更为有创造力。长期来看未来有新的产业新的风口必将发生在深圳。作为一个普通人的下层人士要想跨越阶级就必须乘风而上。要想乘风而上深圳市拥有风口最多的地方。如果风口来了，也许自己搭不上这个便车。但是想一想啊，只要待在深圳才会有机会啊。去其他的二线三线这样的机会会少的多。为了这么一丝丝的机会就应该待着深圳。\n\n深圳是一座发展的城市，只要中国共产党还是中国的执政党，深圳就会发展下去。就算全国经济下行，全国经济崩溃深圳也会是最有耐力，最有机会的城市之一。我们现在生活面临这许多的问题，面临到医疗教育资源匮乏，面临这房价高到难以企望，面临着高压工作。但是我想说给深圳一点时间，这些问题都会慢慢好起来的。翻开深圳政府在线的官网，我们搜索关键词教育。可以看到一年内《龙华区今年新建改建8所学校》、《公办学校建设大提速》、《光明又有两所新学校9月投用》等等相关的内容，我们可以看出我们看到了问题，深圳政府同样也看到了问题并且在积极解决。不久的将来教育资源将会越来好，同样根据教育相关的政策也是不断的出台。医疗问题也是同样都在积极处理。现在有些问题是暂时的我相信未来深圳必将成为北上广那种的层级，那种底蕴的城市。至于房价高，这个问题不仅仅是深圳所面临的问题在全国所有的城市都面临这这样一个问题只是深圳显得尤为突出，房产将要改革那么改革的第一站必将会是深圳。深圳是一个求变的城市，有很多变化，有变化才会有机会，并且还有公租房可以选择，而且政府也在不断完善新增房产这些终将会得到缓解。我们当下就应该广积粮，缓称王，厚积而薄发。总会有机会来临的那一天，等到机会来临的那一天我们再牢牢的抓住。至于说在深圳没有归属感，没有感情。这不过是情绪上作为一个外来人的感受罢了，在这里没有形成自己的圈子。是自己把自己装在套子里，把自己排除出了深圳之外。随着时间的推移，多交朋友多交流。在未来深圳必将会是你的城市。有个朋友曾经跟我说过深圳是一个你越呆越离不开的城市，现在我深以为然，这一切的一切都需要时间来给我们答案，就目前而言远远还没到我需要放弃而离开的时候。\n\n关于内卷我觉得远远没有想想中的那么糟糕。内卷是社会增长变少了，人们只能通过竞争来获取岗位，最后干更多的工作但是拿到的钱却更少了。这在深圳并不是普遍现象，深圳的经济仍然在不断增长。在深圳的普遍现象是干同样的活拿到的钱却多了，尽管深圳生活成本同样高了。目前大家口口声声说这也卷那也卷，这只不过是竞争激烈的代名词，竞争并不代表内卷。大家秉持的理念是：大家都是来搞钱，多干就得多给钱，你看你不给钱在深圳有没有人给你多干活。那些喜欢说卷的人不过是自己不努力还不希望别人努力提高自己的人，看到自己竞争力日益变弱就常常把内卷挂在口中自己骗自己安慰自己把责任推给内卷。人生本来就是一个不断成长的过程愿意付出一些代价去让自己成长，愿意通过努力去获得自己想要的东西本生就是是一个优良的品质，是严格的自我修养，是人与生俱来的。\n\n如果觉得这种环境很累我认为大可不必。努力学习，提高自我这些应该是融入日常的就像吃饭睡觉一样平常的事情，不应该成为内心的负担，调整好心态尤为重要。今天看到一句话作为结尾吧------内心没有方向的人，去哪里都是逃离，生命有方向的人，走向哪里都是追寻。\n","slug":"我想留在深圳","published":1,"updated":"2024-07-05T15:05:43.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc64001dvbinh85s5mza","content":"<h1 id=\"我想留在深圳\"><a href=\"#我想留在深圳\" class=\"headerlink\" title=\"我想留在深圳\"></a>我想留在深圳</h1><p>来深圳也快一年了，来深圳之前就考虑过很多要不要去深圳，我该不该去深圳。</p>\n<p>深圳能看的见的就有房价高不可攀，在事物没有变化或者转机的话，按照现有水平基本是此生无望，深圳生活水平高流传最广的一句谚语就是：“深圳挣钱深圳花，一分别想带回家。”深圳通勤压力大，到处都是人挤人，乘车难住的离公司稍微远点就通勤困难。更加让人望而却步的是深圳人人都是打工狂魔，人人都是为挣钱拼尽全力。这些理由都在告诉我深圳是一个不属于我的城市，去深圳是长久不了的。</p>\n<p>但是我还是来了深圳，深圳也不是像前面说的那么一无是处。深圳市一个做充满生机的城市到处都工作机会不怕找不到工作。更为重要的是我的对象她在深圳，两个人在一起生活就应该待在一起。另外当时我也想换工作想更上一层楼，想去更加正规的公司去试一试，去多尝试尝试多经历经历。深圳也是一个不错的选择。那个时候接近年底，马上就要发年终奖了。我想着过完年我再辞职，我再坚持在长沙工作一阵子拿到年终奖。后来在跟家人沟通过后，家人也支持我辞职回深圳去跟对象团聚。结合公司的的经营情况，以及当时公司的德性我明白要想顺利拿到年终奖，以及自己应得的奖金并没有那么容易。与其在公司耗着不如早日辞职脱离苦海。就这样我来到了深圳。</p>\n<p>来深圳对我来说并不轻松，每天早上要去做人挤人的地铁，我个人一直以来都不喜欢人挤人。不喜欢这种感受。我过去在老家小县城因为坐公交比较拥挤，我宁愿背着书包从城市的这一头步行到城市的那一头，这是我受到的首个挑战。后面还有更多的挑战，刚开始在深圳的第一份工作是某公司技术支持部门主管的工作。我需要重新熟悉公司氛围，文化需要熟悉老板，领导的秉性，甚至还得好好管理我的手下。这也是自己第一次直接做部门领导，还是从外面空降的没有根基并不顺利，公司规模也就30号人每天都在换不同的员工我在职的短短几个月公司人事主管换了3轮。后来我也没干了，待业在宿舍准备重新找工作。很不巧，这个时候又赶上疫情，深圳全市静默。重新找工作也不顺利。</p>\n<p>那个时候也没什么钱，找不到工作是非常痛苦的。陆陆续续每天投10个简历。投了一个月大部分石沉大海，好在后面情况慢慢缓解了，在四月底可算有一个公司联系了过来，虽然待遇不理想，但这个时候对我我的心理来说已经到了山穷水尽的时候了，啥工作能要我我就会去干了。面试完基本就定了，对方也发来了offer，要先去总部去培训一个月，总部在广州。我不太想去广州，与对象商量后，综合考虑下还是拒绝了。另外又去了另外一家公司。也就是我现在的这家公司。后面顺利顺利入职。</p>\n<p>在现在这家公司也有一年了，这一年也并不顺利，但好在有一份工作糊口能生存下去。在这家公司我的岗位是项目经理，主要对接一些项目上的需求，并安排项目的一些工作。这对于我来说是一个全新的领域，我啥也不知道经历了及其痛苦的一段时间才慢慢了解应该怎么处理。虽然还比较生疏但好在也上路了。</p>\n<p>来深圳一年了，所经历的所感受的并不好。但是我还是给自己下了一个决心我要留在深圳。直到我后悔的那一天，目前位置我还不后悔。要不要留在深圳或者换个说法在深圳长期发展？这个问题从我来深圳起我就一直在考虑。好几个夜深人静的时候我在知乎上百度上搜索着“深圳是一个怎么样的城市”，“留在深圳的理由”，”深圳现在开始衰落了吗“，”深圳有什么好“等等如此种种的问题。我试图去网上找到答案，试图去找寻自己未来的方向。我看到所很多不同的答案，有大把的人觉得深圳有这种那种各种各样的问题而逃离深圳的。但是不断有人前赴后继的人来到深圳的，似乎深圳每年都要换一茬人似的。我也会时常去问那些深圳定居买房的同事或朋友，为求多了解一些。</p>\n<p>最后我还是决定在深圳长期发展了，不知道未来我会不会有其他的想法，未来的事情未来再说。我要留在深圳这是结合自己的背景最后深刻做出的决断。首要因素就是就业机会。在湖南作为年轻人要想有好的发展或者说就业机会，首要选择的就是长沙、广州、深圳以及珠三角一带。这里面长沙的房价最为理想也是最有可能实现的买房定居的目标城市，而广州深圳房价却是那么遥不可及。这几个地方我都去工作过。各有特色各有各的好，但是就工作机会来说产业链来说，最为强盛的是广州跟深圳。深圳又比广州更为有创造力。长期来看未来有新的产业新的风口必将发生在深圳。作为一个普通人的下层人士要想跨越阶级就必须乘风而上。要想乘风而上深圳市拥有风口最多的地方。如果风口来了，也许自己搭不上这个便车。但是想一想啊，只要待在深圳才会有机会啊。去其他的二线三线这样的机会会少的多。为了这么一丝丝的机会就应该待着深圳。</p>\n<p>深圳是一座发展的城市，只要中国共产党还是中国的执政党，深圳就会发展下去。就算全国经济下行，全国经济崩溃深圳也会是最有耐力，最有机会的城市之一。我们现在生活面临这许多的问题，面临到医疗教育资源匮乏，面临这房价高到难以企望，面临着高压工作。但是我想说给深圳一点时间，这些问题都会慢慢好起来的。翻开深圳政府在线的官网，我们搜索关键词教育。可以看到一年内《龙华区今年新建改建8所学校》、《公办学校建设大提速》、《光明又有两所新学校9月投用》等等相关的内容，我们可以看出我们看到了问题，深圳政府同样也看到了问题并且在积极解决。不久的将来教育资源将会越来好，同样根据教育相关的政策也是不断的出台。医疗问题也是同样都在积极处理。现在有些问题是暂时的我相信未来深圳必将成为北上广那种的层级，那种底蕴的城市。至于房价高，这个问题不仅仅是深圳所面临的问题在全国所有的城市都面临这这样一个问题只是深圳显得尤为突出，房产将要改革那么改革的第一站必将会是深圳。深圳是一个求变的城市，有很多变化，有变化才会有机会，并且还有公租房可以选择，而且政府也在不断完善新增房产这些终将会得到缓解。我们当下就应该广积粮，缓称王，厚积而薄发。总会有机会来临的那一天，等到机会来临的那一天我们再牢牢的抓住。至于说在深圳没有归属感，没有感情。这不过是情绪上作为一个外来人的感受罢了，在这里没有形成自己的圈子。是自己把自己装在套子里，把自己排除出了深圳之外。随着时间的推移，多交朋友多交流。在未来深圳必将会是你的城市。有个朋友曾经跟我说过深圳是一个你越呆越离不开的城市，现在我深以为然，这一切的一切都需要时间来给我们答案，就目前而言远远还没到我需要放弃而离开的时候。</p>\n<p>关于内卷我觉得远远没有想想中的那么糟糕。内卷是社会增长变少了，人们只能通过竞争来获取岗位，最后干更多的工作但是拿到的钱却更少了。这在深圳并不是普遍现象，深圳的经济仍然在不断增长。在深圳的普遍现象是干同样的活拿到的钱却多了，尽管深圳生活成本同样高了。目前大家口口声声说这也卷那也卷，这只不过是竞争激烈的代名词，竞争并不代表内卷。大家秉持的理念是：大家都是来搞钱，多干就得多给钱，你看你不给钱在深圳有没有人给你多干活。那些喜欢说卷的人不过是自己不努力还不希望别人努力提高自己的人，看到自己竞争力日益变弱就常常把内卷挂在口中自己骗自己安慰自己把责任推给内卷。人生本来就是一个不断成长的过程愿意付出一些代价去让自己成长，愿意通过努力去获得自己想要的东西本生就是是一个优良的品质，是严格的自我修养，是人与生俱来的。</p>\n<p>如果觉得这种环境很累我认为大可不必。努力学习，提高自我这些应该是融入日常的就像吃饭睡觉一样平常的事情，不应该成为内心的负担，调整好心态尤为重要。今天看到一句话作为结尾吧——内心没有方向的人，去哪里都是逃离，生命有方向的人，走向哪里都是追寻。</p>\n","site":{"data":{}},"cover":"http://pic1.win4000.com/wallpaper/f/5860af34d5340.jpg","excerpt":"","more":"<h1 id=\"我想留在深圳\"><a href=\"#我想留在深圳\" class=\"headerlink\" title=\"我想留在深圳\"></a>我想留在深圳</h1><p>来深圳也快一年了，来深圳之前就考虑过很多要不要去深圳，我该不该去深圳。</p>\n<p>深圳能看的见的就有房价高不可攀，在事物没有变化或者转机的话，按照现有水平基本是此生无望，深圳生活水平高流传最广的一句谚语就是：“深圳挣钱深圳花，一分别想带回家。”深圳通勤压力大，到处都是人挤人，乘车难住的离公司稍微远点就通勤困难。更加让人望而却步的是深圳人人都是打工狂魔，人人都是为挣钱拼尽全力。这些理由都在告诉我深圳是一个不属于我的城市，去深圳是长久不了的。</p>\n<p>但是我还是来了深圳，深圳也不是像前面说的那么一无是处。深圳市一个做充满生机的城市到处都工作机会不怕找不到工作。更为重要的是我的对象她在深圳，两个人在一起生活就应该待在一起。另外当时我也想换工作想更上一层楼，想去更加正规的公司去试一试，去多尝试尝试多经历经历。深圳也是一个不错的选择。那个时候接近年底，马上就要发年终奖了。我想着过完年我再辞职，我再坚持在长沙工作一阵子拿到年终奖。后来在跟家人沟通过后，家人也支持我辞职回深圳去跟对象团聚。结合公司的的经营情况，以及当时公司的德性我明白要想顺利拿到年终奖，以及自己应得的奖金并没有那么容易。与其在公司耗着不如早日辞职脱离苦海。就这样我来到了深圳。</p>\n<p>来深圳对我来说并不轻松，每天早上要去做人挤人的地铁，我个人一直以来都不喜欢人挤人。不喜欢这种感受。我过去在老家小县城因为坐公交比较拥挤，我宁愿背着书包从城市的这一头步行到城市的那一头，这是我受到的首个挑战。后面还有更多的挑战，刚开始在深圳的第一份工作是某公司技术支持部门主管的工作。我需要重新熟悉公司氛围，文化需要熟悉老板，领导的秉性，甚至还得好好管理我的手下。这也是自己第一次直接做部门领导，还是从外面空降的没有根基并不顺利，公司规模也就30号人每天都在换不同的员工我在职的短短几个月公司人事主管换了3轮。后来我也没干了，待业在宿舍准备重新找工作。很不巧，这个时候又赶上疫情，深圳全市静默。重新找工作也不顺利。</p>\n<p>那个时候也没什么钱，找不到工作是非常痛苦的。陆陆续续每天投10个简历。投了一个月大部分石沉大海，好在后面情况慢慢缓解了，在四月底可算有一个公司联系了过来，虽然待遇不理想，但这个时候对我我的心理来说已经到了山穷水尽的时候了，啥工作能要我我就会去干了。面试完基本就定了，对方也发来了offer，要先去总部去培训一个月，总部在广州。我不太想去广州，与对象商量后，综合考虑下还是拒绝了。另外又去了另外一家公司。也就是我现在的这家公司。后面顺利顺利入职。</p>\n<p>在现在这家公司也有一年了，这一年也并不顺利，但好在有一份工作糊口能生存下去。在这家公司我的岗位是项目经理，主要对接一些项目上的需求，并安排项目的一些工作。这对于我来说是一个全新的领域，我啥也不知道经历了及其痛苦的一段时间才慢慢了解应该怎么处理。虽然还比较生疏但好在也上路了。</p>\n<p>来深圳一年了，所经历的所感受的并不好。但是我还是给自己下了一个决心我要留在深圳。直到我后悔的那一天，目前位置我还不后悔。要不要留在深圳或者换个说法在深圳长期发展？这个问题从我来深圳起我就一直在考虑。好几个夜深人静的时候我在知乎上百度上搜索着“深圳是一个怎么样的城市”，“留在深圳的理由”，”深圳现在开始衰落了吗“，”深圳有什么好“等等如此种种的问题。我试图去网上找到答案，试图去找寻自己未来的方向。我看到所很多不同的答案，有大把的人觉得深圳有这种那种各种各样的问题而逃离深圳的。但是不断有人前赴后继的人来到深圳的，似乎深圳每年都要换一茬人似的。我也会时常去问那些深圳定居买房的同事或朋友，为求多了解一些。</p>\n<p>最后我还是决定在深圳长期发展了，不知道未来我会不会有其他的想法，未来的事情未来再说。我要留在深圳这是结合自己的背景最后深刻做出的决断。首要因素就是就业机会。在湖南作为年轻人要想有好的发展或者说就业机会，首要选择的就是长沙、广州、深圳以及珠三角一带。这里面长沙的房价最为理想也是最有可能实现的买房定居的目标城市，而广州深圳房价却是那么遥不可及。这几个地方我都去工作过。各有特色各有各的好，但是就工作机会来说产业链来说，最为强盛的是广州跟深圳。深圳又比广州更为有创造力。长期来看未来有新的产业新的风口必将发生在深圳。作为一个普通人的下层人士要想跨越阶级就必须乘风而上。要想乘风而上深圳市拥有风口最多的地方。如果风口来了，也许自己搭不上这个便车。但是想一想啊，只要待在深圳才会有机会啊。去其他的二线三线这样的机会会少的多。为了这么一丝丝的机会就应该待着深圳。</p>\n<p>深圳是一座发展的城市，只要中国共产党还是中国的执政党，深圳就会发展下去。就算全国经济下行，全国经济崩溃深圳也会是最有耐力，最有机会的城市之一。我们现在生活面临这许多的问题，面临到医疗教育资源匮乏，面临这房价高到难以企望，面临着高压工作。但是我想说给深圳一点时间，这些问题都会慢慢好起来的。翻开深圳政府在线的官网，我们搜索关键词教育。可以看到一年内《龙华区今年新建改建8所学校》、《公办学校建设大提速》、《光明又有两所新学校9月投用》等等相关的内容，我们可以看出我们看到了问题，深圳政府同样也看到了问题并且在积极解决。不久的将来教育资源将会越来好，同样根据教育相关的政策也是不断的出台。医疗问题也是同样都在积极处理。现在有些问题是暂时的我相信未来深圳必将成为北上广那种的层级，那种底蕴的城市。至于房价高，这个问题不仅仅是深圳所面临的问题在全国所有的城市都面临这这样一个问题只是深圳显得尤为突出，房产将要改革那么改革的第一站必将会是深圳。深圳是一个求变的城市，有很多变化，有变化才会有机会，并且还有公租房可以选择，而且政府也在不断完善新增房产这些终将会得到缓解。我们当下就应该广积粮，缓称王，厚积而薄发。总会有机会来临的那一天，等到机会来临的那一天我们再牢牢的抓住。至于说在深圳没有归属感，没有感情。这不过是情绪上作为一个外来人的感受罢了，在这里没有形成自己的圈子。是自己把自己装在套子里，把自己排除出了深圳之外。随着时间的推移，多交朋友多交流。在未来深圳必将会是你的城市。有个朋友曾经跟我说过深圳是一个你越呆越离不开的城市，现在我深以为然，这一切的一切都需要时间来给我们答案，就目前而言远远还没到我需要放弃而离开的时候。</p>\n<p>关于内卷我觉得远远没有想想中的那么糟糕。内卷是社会增长变少了，人们只能通过竞争来获取岗位，最后干更多的工作但是拿到的钱却更少了。这在深圳并不是普遍现象，深圳的经济仍然在不断增长。在深圳的普遍现象是干同样的活拿到的钱却多了，尽管深圳生活成本同样高了。目前大家口口声声说这也卷那也卷，这只不过是竞争激烈的代名词，竞争并不代表内卷。大家秉持的理念是：大家都是来搞钱，多干就得多给钱，你看你不给钱在深圳有没有人给你多干活。那些喜欢说卷的人不过是自己不努力还不希望别人努力提高自己的人，看到自己竞争力日益变弱就常常把内卷挂在口中自己骗自己安慰自己把责任推给内卷。人生本来就是一个不断成长的过程愿意付出一些代价去让自己成长，愿意通过努力去获得自己想要的东西本生就是是一个优良的品质，是严格的自我修养，是人与生俱来的。</p>\n<p>如果觉得这种环境很累我认为大可不必。努力学习，提高自我这些应该是融入日常的就像吃饭睡觉一样平常的事情，不应该成为内心的负担，调整好心态尤为重要。今天看到一句话作为结尾吧——内心没有方向的人，去哪里都是逃离，生命有方向的人，走向哪里都是追寻。</p>\n"},{"title":"换电脑后linux下迁移恢复HEXO","author":"戴昌益","date":"2024-07-03T01:52:07.000Z","_content":"\n# 换电脑后linux下迁移恢复HEXO\n\n\n\n1、安装好git后拉取或者上传备份好的source文件。我这里有备份在github.io上的source分支中。\n\n```\ngit clone https://github.com/dailaoda45/dailaoda45.github.io.git\n```\n\n2、安装node.js\n\n1、下载node.js\n\n这里使用wget直接下载到服务器也可以网站上下载下来后自行上传到服务器。\n\n2、/usr/local下创建目录\n\n```\ncd /usr/local\nmkdir nodejs\n```\n\n3、移动到nodejs中\n\n```\ncd /usr/local/nodejs\n```\n\n4、下载node.js包\n\n```\n# 安装npm\napt install npm\n# 这里不知道为什么就自带了nodejs\n```\n\n5、查看版本\n\n```\nnpm -v\nnodejs -v\n```\n\n6、安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```\n$ npm install -g hexo-cli\n```\n\n此时显示\n\n```\nnpm install -g hexo-cli\n\n   required: { node: '>=14' },\nnpm WARN EBADENGINE   current: { node: 'v12.22.9', npm: '8.5.1' }\nnpm WARN EBADENGINE }\n```\n\n\n\n应该是需要升级node版本\n\n运行\n\n```\n# 清除缓存\nnpm cache clean -f\n# 下载node安装包\nnpm install -g n\n# 升级到nodejs最新版本\nn stable\n# 查看当前版本\nnode -v\n```\n\n再次安装hexo提示下面内容。\n\n```\nchanged 53 packages in 5s\n\n14 packages are looking for funding\n  run `npm fund` for details\n```\n\n不管继续往后执行\n\n\n# 新方法\n\n前面的安装好后发现不能用另外找了个方法\n\n1、按前面的方法安装好git跟nodejs，还有npm\n\n2、在备份文件夹中运行\n\n```\n# 安装hexo\nnpm install hexo-cli -g\n#安装依赖（把之前删除的node_nodules文件装回来）\nnpm install \n# 下载hexo的git工具\nnpm install hexo-deployer-git --save\n\n```\n\n然后就可以正常的更新博客了\n\n```\nhexo clean \nhexo d\n\n```\n\n","source":"_posts/换电脑后linux下迁移恢复hexo.md","raw":"---\ntitle: 换电脑后linux下迁移恢复HEXO\nauthor: 戴昌益\ndate: 2024-7-3 9:52:07\ntags: [博客部署安装]\ncategories: 技\n---\n\n# 换电脑后linux下迁移恢复HEXO\n\n\n\n1、安装好git后拉取或者上传备份好的source文件。我这里有备份在github.io上的source分支中。\n\n```\ngit clone https://github.com/dailaoda45/dailaoda45.github.io.git\n```\n\n2、安装node.js\n\n1、下载node.js\n\n这里使用wget直接下载到服务器也可以网站上下载下来后自行上传到服务器。\n\n2、/usr/local下创建目录\n\n```\ncd /usr/local\nmkdir nodejs\n```\n\n3、移动到nodejs中\n\n```\ncd /usr/local/nodejs\n```\n\n4、下载node.js包\n\n```\n# 安装npm\napt install npm\n# 这里不知道为什么就自带了nodejs\n```\n\n5、查看版本\n\n```\nnpm -v\nnodejs -v\n```\n\n6、安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```\n$ npm install -g hexo-cli\n```\n\n此时显示\n\n```\nnpm install -g hexo-cli\n\n   required: { node: '>=14' },\nnpm WARN EBADENGINE   current: { node: 'v12.22.9', npm: '8.5.1' }\nnpm WARN EBADENGINE }\n```\n\n\n\n应该是需要升级node版本\n\n运行\n\n```\n# 清除缓存\nnpm cache clean -f\n# 下载node安装包\nnpm install -g n\n# 升级到nodejs最新版本\nn stable\n# 查看当前版本\nnode -v\n```\n\n再次安装hexo提示下面内容。\n\n```\nchanged 53 packages in 5s\n\n14 packages are looking for funding\n  run `npm fund` for details\n```\n\n不管继续往后执行\n\n\n# 新方法\n\n前面的安装好后发现不能用另外找了个方法\n\n1、按前面的方法安装好git跟nodejs，还有npm\n\n2、在备份文件夹中运行\n\n```\n# 安装hexo\nnpm install hexo-cli -g\n#安装依赖（把之前删除的node_nodules文件装回来）\nnpm install \n# 下载hexo的git工具\nnpm install hexo-deployer-git --save\n\n```\n\n然后就可以正常的更新博客了\n\n```\nhexo clean \nhexo d\n\n```\n\n","slug":"换电脑后linux下迁移恢复hexo","published":1,"updated":"2024-07-05T15:05:42.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc67001ivbin0r8odyb2","content":"<h1 id=\"换电脑后linux下迁移恢复HEXO\"><a href=\"#换电脑后linux下迁移恢复HEXO\" class=\"headerlink\" title=\"换电脑后linux下迁移恢复HEXO\"></a>换电脑后linux下迁移恢复HEXO</h1><p>1、安装好git后拉取或者上传备份好的source文件。我这里有备份在github.io上的source分支中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;dailaoda45&#x2F;dailaoda45.github.io.git</span><br></pre></td></tr></table></figure>\n<p>2、安装node.js</p>\n<p>1、下载node.js</p>\n<p>这里使用wget直接下载到服务器也可以网站上下载下来后自行上传到服务器。</p>\n<p>2、/usr/local下创建目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local</span><br><span class=\"line\">mkdir nodejs</span><br></pre></td></tr></table></figure>\n<p>3、移动到nodejs中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;nodejs</span><br></pre></td></tr></table></figure>\n<p>4、下载node.js包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装npm</span><br><span class=\"line\">apt install npm</span><br><span class=\"line\"># 这里不知道为什么就自带了nodejs</span><br></pre></td></tr></table></figure>\n<p>5、查看版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm -v</span><br><span class=\"line\">nodejs -v</span><br></pre></td></tr></table></figure>\n<p>6、安装 Hexo</p>\n<p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>此时显示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\"></span><br><span class=\"line\">   required: &#123; node: &#39;&gt;&#x3D;14&#39; &#125;,</span><br><span class=\"line\">npm WARN EBADENGINE   current: &#123; node: &#39;v12.22.9&#39;, npm: &#39;8.5.1&#39; &#125;</span><br><span class=\"line\">npm WARN EBADENGINE &#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>应该是需要升级node版本</p>\n<p>运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 清除缓存</span><br><span class=\"line\">npm cache clean -f</span><br><span class=\"line\"># 下载node安装包</span><br><span class=\"line\">npm install -g n</span><br><span class=\"line\"># 升级到nodejs最新版本</span><br><span class=\"line\">n stable</span><br><span class=\"line\"># 查看当前版本</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>再次安装hexo提示下面内容。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">changed 53 packages in 5s</span><br><span class=\"line\"></span><br><span class=\"line\">14 packages are looking for funding</span><br><span class=\"line\">  run &#96;npm fund&#96; for details</span><br></pre></td></tr></table></figure>\n<p>不管继续往后执行</p>\n<h1 id=\"新方法\"><a href=\"#新方法\" class=\"headerlink\" title=\"新方法\"></a>新方法</h1><p>前面的安装好后发现不能用另外找了个方法</p>\n<p>1、按前面的方法安装好git跟nodejs，还有npm</p>\n<p>2、在备份文件夹中运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装hexo</span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">#安装依赖（把之前删除的node_nodules文件装回来）</span><br><span class=\"line\">npm install </span><br><span class=\"line\"># 下载hexo的git工具</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后就可以正常的更新博客了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo d</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627Hqj.jpg","excerpt":"","more":"<h1 id=\"换电脑后linux下迁移恢复HEXO\"><a href=\"#换电脑后linux下迁移恢复HEXO\" class=\"headerlink\" title=\"换电脑后linux下迁移恢复HEXO\"></a>换电脑后linux下迁移恢复HEXO</h1><p>1、安装好git后拉取或者上传备份好的source文件。我这里有备份在github.io上的source分支中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;dailaoda45&#x2F;dailaoda45.github.io.git</span><br></pre></td></tr></table></figure>\n<p>2、安装node.js</p>\n<p>1、下载node.js</p>\n<p>这里使用wget直接下载到服务器也可以网站上下载下来后自行上传到服务器。</p>\n<p>2、/usr/local下创建目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local</span><br><span class=\"line\">mkdir nodejs</span><br></pre></td></tr></table></figure>\n<p>3、移动到nodejs中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;nodejs</span><br></pre></td></tr></table></figure>\n<p>4、下载node.js包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装npm</span><br><span class=\"line\">apt install npm</span><br><span class=\"line\"># 这里不知道为什么就自带了nodejs</span><br></pre></td></tr></table></figure>\n<p>5、查看版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm -v</span><br><span class=\"line\">nodejs -v</span><br></pre></td></tr></table></figure>\n<p>6、安装 Hexo</p>\n<p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>此时显示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\"></span><br><span class=\"line\">   required: &#123; node: &#39;&gt;&#x3D;14&#39; &#125;,</span><br><span class=\"line\">npm WARN EBADENGINE   current: &#123; node: &#39;v12.22.9&#39;, npm: &#39;8.5.1&#39; &#125;</span><br><span class=\"line\">npm WARN EBADENGINE &#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>应该是需要升级node版本</p>\n<p>运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 清除缓存</span><br><span class=\"line\">npm cache clean -f</span><br><span class=\"line\"># 下载node安装包</span><br><span class=\"line\">npm install -g n</span><br><span class=\"line\"># 升级到nodejs最新版本</span><br><span class=\"line\">n stable</span><br><span class=\"line\"># 查看当前版本</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>再次安装hexo提示下面内容。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">changed 53 packages in 5s</span><br><span class=\"line\"></span><br><span class=\"line\">14 packages are looking for funding</span><br><span class=\"line\">  run &#96;npm fund&#96; for details</span><br></pre></td></tr></table></figure>\n<p>不管继续往后执行</p>\n<h1 id=\"新方法\"><a href=\"#新方法\" class=\"headerlink\" title=\"新方法\"></a>新方法</h1><p>前面的安装好后发现不能用另外找了个方法</p>\n<p>1、按前面的方法安装好git跟nodejs，还有npm</p>\n<p>2、在备份文件夹中运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装hexo</span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">#安装依赖（把之前删除的node_nodules文件装回来）</span><br><span class=\"line\">npm install </span><br><span class=\"line\"># 下载hexo的git工具</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后就可以正常的更新博客了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo d</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"十一种孤独歌词","author":"戴昌益","date":"2022-12-29T16:00:00.000Z","_content":"\n## 十一种孤独歌词\n\n最孤独是读评论区未署名情书\n\n像不小心掀开了时光的典故\n\n第十是睁开眼就已黄昏迟暮\n\n寒星三两落在远远处\n\n第九是海蓝时见鲸，林深时见鹿\n\n却不见你，在梦醒之处\n\n第八是回家的路途绕了几次远路\n\n像电台的老情歌循环着音符\n\n第七是看一场一群人的演出\n\n荧光满眼却看不清楚\n\n第六是一个人吃饭，一个人写书\n\n一个人拼岁月拼图\n\n第五是骑单车过陌生的马路\n\n在拥挤的人海中踌躇\n\n第四是给空白的纸上画上五线谱\n\n每一行都好像是世界的遗嘱\n\n第三是假装很成熟，假装很忙碌\n\n假装擅长一个人独处\n\n第二是穿过万家灯火无数\n\n却无一人等我在归途\n\n第一是收到远方一纸家书\n\n说照顾自己，累了别忍着不哭\n\n---\n\n愿你风尘仆仆，深情不被辜负\n\n虽回不到过去，也回不到当初\n\n愿你半生漂浮此生能有归宿\n\n愿你风雨落幕能有人免你孤独","source":"_posts/歌曲《十一种孤独》歌词收藏.md","raw":"---\ntitle: 十一种孤独歌词\nauthor: 戴昌益\ndate: 2022-12-30\ntags: [诗歌]\ncategories: 文\n---\n\n## 十一种孤独歌词\n\n最孤独是读评论区未署名情书\n\n像不小心掀开了时光的典故\n\n第十是睁开眼就已黄昏迟暮\n\n寒星三两落在远远处\n\n第九是海蓝时见鲸，林深时见鹿\n\n却不见你，在梦醒之处\n\n第八是回家的路途绕了几次远路\n\n像电台的老情歌循环着音符\n\n第七是看一场一群人的演出\n\n荧光满眼却看不清楚\n\n第六是一个人吃饭，一个人写书\n\n一个人拼岁月拼图\n\n第五是骑单车过陌生的马路\n\n在拥挤的人海中踌躇\n\n第四是给空白的纸上画上五线谱\n\n每一行都好像是世界的遗嘱\n\n第三是假装很成熟，假装很忙碌\n\n假装擅长一个人独处\n\n第二是穿过万家灯火无数\n\n却无一人等我在归途\n\n第一是收到远方一纸家书\n\n说照顾自己，累了别忍着不哭\n\n---\n\n愿你风尘仆仆，深情不被辜负\n\n虽回不到过去，也回不到当初\n\n愿你半生漂浮此生能有归宿\n\n愿你风雨落幕能有人免你孤独","slug":"歌曲《十一种孤独》歌词收藏","published":1,"updated":"2024-07-05T15:05:42.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc6a001lvbincz0a5m4y","content":"<h2 id=\"十一种孤独歌词\"><a href=\"#十一种孤独歌词\" class=\"headerlink\" title=\"十一种孤独歌词\"></a>十一种孤独歌词</h2><p>最孤独是读评论区未署名情书</p>\n<p>像不小心掀开了时光的典故</p>\n<p>第十是睁开眼就已黄昏迟暮</p>\n<p>寒星三两落在远远处</p>\n<p>第九是海蓝时见鲸，林深时见鹿</p>\n<p>却不见你，在梦醒之处</p>\n<p>第八是回家的路途绕了几次远路</p>\n<p>像电台的老情歌循环着音符</p>\n<p>第七是看一场一群人的演出</p>\n<p>荧光满眼却看不清楚</p>\n<p>第六是一个人吃饭，一个人写书</p>\n<p>一个人拼岁月拼图</p>\n<p>第五是骑单车过陌生的马路</p>\n<p>在拥挤的人海中踌躇</p>\n<p>第四是给空白的纸上画上五线谱</p>\n<p>每一行都好像是世界的遗嘱</p>\n<p>第三是假装很成熟，假装很忙碌</p>\n<p>假装擅长一个人独处</p>\n<p>第二是穿过万家灯火无数</p>\n<p>却无一人等我在归途</p>\n<p>第一是收到远方一纸家书</p>\n<p>说照顾自己，累了别忍着不哭</p>\n<hr>\n<p>愿你风尘仆仆，深情不被辜负</p>\n<p>虽回不到过去，也回不到当初</p>\n<p>愿你半生漂浮此生能有归宿</p>\n<p>愿你风雨落幕能有人免你孤独</p>\n","site":{"data":{}},"cover":"http://pic1.win4000.com/wallpaper/f/5860af34d5340.jpg","excerpt":"","more":"<h2 id=\"十一种孤独歌词\"><a href=\"#十一种孤独歌词\" class=\"headerlink\" title=\"十一种孤独歌词\"></a>十一种孤独歌词</h2><p>最孤独是读评论区未署名情书</p>\n<p>像不小心掀开了时光的典故</p>\n<p>第十是睁开眼就已黄昏迟暮</p>\n<p>寒星三两落在远远处</p>\n<p>第九是海蓝时见鲸，林深时见鹿</p>\n<p>却不见你，在梦醒之处</p>\n<p>第八是回家的路途绕了几次远路</p>\n<p>像电台的老情歌循环着音符</p>\n<p>第七是看一场一群人的演出</p>\n<p>荧光满眼却看不清楚</p>\n<p>第六是一个人吃饭，一个人写书</p>\n<p>一个人拼岁月拼图</p>\n<p>第五是骑单车过陌生的马路</p>\n<p>在拥挤的人海中踌躇</p>\n<p>第四是给空白的纸上画上五线谱</p>\n<p>每一行都好像是世界的遗嘱</p>\n<p>第三是假装很成熟，假装很忙碌</p>\n<p>假装擅长一个人独处</p>\n<p>第二是穿过万家灯火无数</p>\n<p>却无一人等我在归途</p>\n<p>第一是收到远方一纸家书</p>\n<p>说照顾自己，累了别忍着不哭</p>\n<hr>\n<p>愿你风尘仆仆，深情不被辜负</p>\n<p>虽回不到过去，也回不到当初</p>\n<p>愿你半生漂浮此生能有归宿</p>\n<p>愿你风雨落幕能有人免你孤独</p>\n"},{"title":"HTML五种布局","author":"戴昌益","date":"2022-12-29T16:00:00.000Z","_content":"\n# HTML五种布局\n---\n## 一、浮动布局\n\n浮动布局的兼容性比较好，但是浮动带来的影响比较多，页面宽度不够的时候会影响布局。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>浮动布局</title>\n    <style type=\"text/css\">\n      .wrap1 div{\n            min-height: 200px;\n        }\n        .wrap1 .left{\n            float: left;\n            width: 300px;\n            background: red;\n        }\n        .wrap1 .right{\n            float: right;\n            width: 300px;\n            background: blue;\n        }\n        .wrap1 .center{\n            background: pink;\n        }  \n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap1\">\n        <div class=\"left\"></div>\n        <div class=\"right\"></div>\n        <div class=\"center\">\n            浮动布局\n        </div>  \n    </div>\n    \n</body>\n</html>\n————————————————\n```\n\n## 二、绝对定位布局\n\n绝对定位布局快捷，但是有效性比较差，因为脱离了文档流。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>绝对定位布局</title>\n    <style type=\"text/css\">\n      .wrap2 div{\n            position: absolute;\n            min-height: 200px;\n        }\n        .wrap2 .left{\n            left: 0;\n            width: 300px;\n            background: red;\n        }\n        .wrap2 .right{\n            right: 0;\n            width: 300px;\n            background: blue;\n        }\n        .wrap2 .center{\n            left: 300px;\n            right: 300px;\n            background: pink;\n        } \n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap2 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            绝对定位布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n```\n\n## 三、flex布局\n\n自适应好，高度能够自动撑开\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>flex布局</title>\n    <style type=\"text/css\">\n      .wrap3{\n            display: flex;\n            min-height: 200px;\n        }\n        .wrap3 .left{            \n            flex-basis: 300px;\n            background: red;\n        }\n        .wrap3 .right{            \n            flex-basis: 300px;\n            background: blue;\n        }\n        .wrap3 .center{\n            flex: 1;\n            background: pink;\n        }\n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap3 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            flex布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n```\n\n## 四、table-cell表格布局\n\n兼容性好，但是有时候不能固定高度，因为会被内容撑高。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>table-cell表格布局</title>\n    <style type=\"text/css\">\n      .wrap4{\n            display: table;\n            width: 100%;\n            height: 200px;\n        }\n        .wrap4>div{\n            display: table-cell;\n        }\n        .wrap4 .left{           \n            width: 300px;\n            background: red;\n        }\n        .wrap4 .right{          \n            width: 300px;\n            background: blue;\n        }\n        .wrap4 .center{\n            background: pink;\n        }\n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap4 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            表格布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n\n```\n\n## 五、网格布局\n\n比较新的一种布局方式，兼容性没那么好。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>网格布局</title>\n    <style type=\"text/css\">\n      .wrap5{\n            display: grid;\n            width: 100%;\n            grid-template-rows: 200px;\n            grid-template-columns: 300px auto 300px;\n        }\n        .wrap5 .left{   \n            background: red;\n        }\n        .wrap5 .right{  \n            background: blue;\n        }\n        .wrap5 .center{\n            background: pink;\n        }\n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap5 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            网格布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n```\n\n","source":"_posts/记录HTML五种布局.md","raw":"---\ntitle: HTML五种布局\nauthor: 戴昌益\ndate: 2022-12-30\ntags: [教程]\ncategories: 文\n---\n\n# HTML五种布局\n---\n## 一、浮动布局\n\n浮动布局的兼容性比较好，但是浮动带来的影响比较多，页面宽度不够的时候会影响布局。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>浮动布局</title>\n    <style type=\"text/css\">\n      .wrap1 div{\n            min-height: 200px;\n        }\n        .wrap1 .left{\n            float: left;\n            width: 300px;\n            background: red;\n        }\n        .wrap1 .right{\n            float: right;\n            width: 300px;\n            background: blue;\n        }\n        .wrap1 .center{\n            background: pink;\n        }  \n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap1\">\n        <div class=\"left\"></div>\n        <div class=\"right\"></div>\n        <div class=\"center\">\n            浮动布局\n        </div>  \n    </div>\n    \n</body>\n</html>\n————————————————\n```\n\n## 二、绝对定位布局\n\n绝对定位布局快捷，但是有效性比较差，因为脱离了文档流。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>绝对定位布局</title>\n    <style type=\"text/css\">\n      .wrap2 div{\n            position: absolute;\n            min-height: 200px;\n        }\n        .wrap2 .left{\n            left: 0;\n            width: 300px;\n            background: red;\n        }\n        .wrap2 .right{\n            right: 0;\n            width: 300px;\n            background: blue;\n        }\n        .wrap2 .center{\n            left: 300px;\n            right: 300px;\n            background: pink;\n        } \n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap2 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            绝对定位布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n```\n\n## 三、flex布局\n\n自适应好，高度能够自动撑开\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>flex布局</title>\n    <style type=\"text/css\">\n      .wrap3{\n            display: flex;\n            min-height: 200px;\n        }\n        .wrap3 .left{            \n            flex-basis: 300px;\n            background: red;\n        }\n        .wrap3 .right{            \n            flex-basis: 300px;\n            background: blue;\n        }\n        .wrap3 .center{\n            flex: 1;\n            background: pink;\n        }\n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap3 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            flex布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n```\n\n## 四、table-cell表格布局\n\n兼容性好，但是有时候不能固定高度，因为会被内容撑高。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>table-cell表格布局</title>\n    <style type=\"text/css\">\n      .wrap4{\n            display: table;\n            width: 100%;\n            height: 200px;\n        }\n        .wrap4>div{\n            display: table-cell;\n        }\n        .wrap4 .left{           \n            width: 300px;\n            background: red;\n        }\n        .wrap4 .right{          \n            width: 300px;\n            background: blue;\n        }\n        .wrap4 .center{\n            background: pink;\n        }\n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap4 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            表格布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n\n```\n\n## 五、网格布局\n\n比较新的一种布局方式，兼容性没那么好。\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>网格布局</title>\n    <style type=\"text/css\">\n      .wrap5{\n            display: grid;\n            width: 100%;\n            grid-template-rows: 200px;\n            grid-template-columns: 300px auto 300px;\n        }\n        .wrap5 .left{   \n            background: red;\n        }\n        .wrap5 .right{  \n            background: blue;\n        }\n        .wrap5 .center{\n            background: pink;\n        }\n\n    </style>\n</head>\n<body>\n\n    <div class=\"wrap5 wrap\">\n        <div class=\"left\"></div>\n        <div class=\"center\">\n            网格布局\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n</body>\n</html>\n————————————————\n```\n\n","slug":"记录HTML五种布局","published":1,"updated":"2024-07-05T15:05:43.089Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cly8txc6e001ovbin8g0861cg","content":"<h1 id=\"HTML五种布局\"><a href=\"#HTML五种布局\" class=\"headerlink\" title=\"HTML五种布局\"></a>HTML五种布局</h1><hr>\n<h2 id=\"一、浮动布局\"><a href=\"#一、浮动布局\" class=\"headerlink\" title=\"一、浮动布局\"></a>一、浮动布局</h2><p>浮动布局的兼容性比较好，但是浮动带来的影响比较多，页面宽度不够的时候会影响布局。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>浮动布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap1</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\">            min-height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap1</span> <span class=\"selector-class\">.left</span>&#123;</span></span><br><span class=\"line\">            float: left;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap1</span> <span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\">            float: right;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap1</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap1&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            浮动布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、绝对定位布局\"><a href=\"#二、绝对定位布局\" class=\"headerlink\" title=\"二、绝对定位布局\"></a>二、绝对定位布局</h2><p>绝对定位布局快捷，但是有效性比较差，因为脱离了文档流。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>绝对定位布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap2</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            min-height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap2</span> <span class=\"selector-class\">.left</span>&#123;</span></span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap2</span> <span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\">            right: 0;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap2</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            left: 300px;</span><br><span class=\"line\">            right: 300px;</span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap2 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            绝对定位布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、flex布局\"><a href=\"#三、flex布局\" class=\"headerlink\" title=\"三、flex布局\"></a>三、flex布局</h2><p>自适应好，高度能够自动撑开</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>flex布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap3</span>&#123;</span></span><br><span class=\"line\">            display: flex;</span><br><span class=\"line\">            min-height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap3</span> <span class=\"selector-class\">.left</span>&#123;            </span></span><br><span class=\"line\">            flex-basis: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap3</span> <span class=\"selector-class\">.right</span>&#123;            </span></span><br><span class=\"line\">            flex-basis: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap3</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            flex: 1;</span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap3 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            flex布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、table-cell表格布局\"><a href=\"#四、table-cell表格布局\" class=\"headerlink\" title=\"四、table-cell表格布局\"></a>四、table-cell表格布局</h2><p>兼容性好，但是有时候不能固定高度，因为会被内容撑高。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>table-cell表格布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap4</span>&#123;</span></span><br><span class=\"line\">            display: table;</span><br><span class=\"line\">            width: 100%;</span><br><span class=\"line\">            height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span>&gt;<span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\">            display: table-cell;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span> <span class=\"selector-class\">.left</span>&#123;           </span></span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span> <span class=\"selector-class\">.right</span>&#123;          </span></span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap4 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            表格布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、网格布局\"><a href=\"#五、网格布局\" class=\"headerlink\" title=\"五、网格布局\"></a>五、网格布局</h2><p>比较新的一种布局方式，兼容性没那么好。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>网格布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap5</span>&#123;</span></span><br><span class=\"line\">            display: grid;</span><br><span class=\"line\">            width: 100%;</span><br><span class=\"line\">            grid-template-rows: 200px;</span><br><span class=\"line\">            grid-template-columns: 300px auto 300px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap5</span> <span class=\"selector-class\">.left</span>&#123;   </span></span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap5</span> <span class=\"selector-class\">.right</span>&#123;  </span></span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap5</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap5 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            网格布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"http://images.shejidaren.com/wp-content/uploads/2014/07/085627fSu.jpg","excerpt":"","more":"<h1 id=\"HTML五种布局\"><a href=\"#HTML五种布局\" class=\"headerlink\" title=\"HTML五种布局\"></a>HTML五种布局</h1><hr>\n<h2 id=\"一、浮动布局\"><a href=\"#一、浮动布局\" class=\"headerlink\" title=\"一、浮动布局\"></a>一、浮动布局</h2><p>浮动布局的兼容性比较好，但是浮动带来的影响比较多，页面宽度不够的时候会影响布局。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>浮动布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap1</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\">            min-height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap1</span> <span class=\"selector-class\">.left</span>&#123;</span></span><br><span class=\"line\">            float: left;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap1</span> <span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\">            float: right;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap1</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap1&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            浮动布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、绝对定位布局\"><a href=\"#二、绝对定位布局\" class=\"headerlink\" title=\"二、绝对定位布局\"></a>二、绝对定位布局</h2><p>绝对定位布局快捷，但是有效性比较差，因为脱离了文档流。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>绝对定位布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap2</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            min-height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap2</span> <span class=\"selector-class\">.left</span>&#123;</span></span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap2</span> <span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\">            right: 0;</span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap2</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            left: 300px;</span><br><span class=\"line\">            right: 300px;</span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap2 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            绝对定位布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、flex布局\"><a href=\"#三、flex布局\" class=\"headerlink\" title=\"三、flex布局\"></a>三、flex布局</h2><p>自适应好，高度能够自动撑开</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>flex布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap3</span>&#123;</span></span><br><span class=\"line\">            display: flex;</span><br><span class=\"line\">            min-height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap3</span> <span class=\"selector-class\">.left</span>&#123;            </span></span><br><span class=\"line\">            flex-basis: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap3</span> <span class=\"selector-class\">.right</span>&#123;            </span></span><br><span class=\"line\">            flex-basis: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap3</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            flex: 1;</span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap3 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            flex布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、table-cell表格布局\"><a href=\"#四、table-cell表格布局\" class=\"headerlink\" title=\"四、table-cell表格布局\"></a>四、table-cell表格布局</h2><p>兼容性好，但是有时候不能固定高度，因为会被内容撑高。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>table-cell表格布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap4</span>&#123;</span></span><br><span class=\"line\">            display: table;</span><br><span class=\"line\">            width: 100%;</span><br><span class=\"line\">            height: 200px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span>&gt;<span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\">            display: table-cell;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span> <span class=\"selector-class\">.left</span>&#123;           </span></span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span> <span class=\"selector-class\">.right</span>&#123;          </span></span><br><span class=\"line\">            width: 300px;</span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap4</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap4 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            表格布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、网格布局\"><a href=\"#五、网格布局\" class=\"headerlink\" title=\"五、网格布局\"></a>五、网格布局</h2><p>比较新的一种布局方式，兼容性没那么好。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>网格布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wrap5</span>&#123;</span></span><br><span class=\"line\">            display: grid;</span><br><span class=\"line\">            width: 100%;</span><br><span class=\"line\">            grid-template-rows: 200px;</span><br><span class=\"line\">            grid-template-columns: 300px auto 300px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap5</span> <span class=\"selector-class\">.left</span>&#123;   </span></span><br><span class=\"line\">            background: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap5</span> <span class=\"selector-class\">.right</span>&#123;  </span></span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.wrap5</span> <span class=\"selector-class\">.center</span>&#123;</span></span><br><span class=\"line\">            background: pink;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap5 wrap&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            网格布局</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">————————————————</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cly8txc4w0009vbin5elg6o1m","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5e000jvbinap8ycmm7"},{"post_id":"cly8txc4e0001vbinezfbdqjr","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5j000pvbinfsqsd720"},{"post_id":"cly8txc4k0003vbin40z476ns","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5n000tvbin2g73gifp"},{"post_id":"cly8txc5c000ivbinh8voaapd","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5s000xvbin7vmif3y7"},{"post_id":"cly8txc5i000ovbin13pc4yn0","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5u0010vbinghpi3ddj"},{"post_id":"cly8txc4t0007vbinbo559wuo","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5x0014vbin0yfbd7jb"},{"post_id":"cly8txc5m000rvbin3xhd11sf","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc5z0017vbin0ym2c0ck"},{"post_id":"cly8txc5q000wvbin11xk5k6j","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc63001bvbin17owfkmx"},{"post_id":"cly8txc4y000bvbin51vp6ahn","category_id":"cly8txc5n000svbin61i1819j","_id":"cly8txc65001evbinfsbp1nqw"},{"post_id":"cly8txc58000gvbing239bw2s","category_id":"cly8txc5n000svbin61i1819j","_id":"cly8txc68001jvbindvjb9qpz"},{"post_id":"cly8txc5y0016vbin1nhqf1c9","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc6c001mvbinbsycf1ea"},{"post_id":"cly8txc61001avbinht3w4y5u","category_id":"cly8txc5n000svbin61i1819j","_id":"cly8txc6f001pvbin8qothbiv"},{"post_id":"cly8txc5s000zvbin32aa1aff","category_id":"cly8txc5z0018vbin595r3gj6","_id":"cly8txc6i001rvbineqp8h13f"},{"post_id":"cly8txc64001dvbinh85s5mza","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc6k001tvbin1lrs46rf"},{"post_id":"cly8txc67001ivbin0r8odyb2","category_id":"cly8txc5z0018vbin595r3gj6","_id":"cly8txc6l001vvbin7ij947pt"},{"post_id":"cly8txc5w0013vbinespve70a","category_id":"cly8txc5z0018vbin595r3gj6","_id":"cly8txc6l001wvbin5pjdbpiw"},{"post_id":"cly8txc6a001lvbincz0a5m4y","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc6m001zvbinbx5xe6yb"},{"post_id":"cly8txc6e001ovbin8g0861cg","category_id":"cly8txc4o0004vbinhyoq84jk","_id":"cly8txc6n0020vbin5y3b2dbh"}],"PostTag":[{"post_id":"cly8txc4e0001vbinezfbdqjr","tag_id":"cly8txc4q0005vbin3mcq3xt5","_id":"cly8txc56000evbina0x61bxy"},{"post_id":"cly8txc58000gvbing239bw2s","tag_id":"cly8txc51000dvbin1c73gr5f","_id":"cly8txc5h000mvbina6z1gxrn"},{"post_id":"cly8txc4k0003vbin40z476ns","tag_id":"cly8txc51000dvbin1c73gr5f","_id":"cly8txc5l000qvbin4ecm4xr1"},{"post_id":"cly8txc5c000ivbinh8voaapd","tag_id":"cly8txc51000dvbin1c73gr5f","_id":"cly8txc5p000vvbinb9isbtvm"},{"post_id":"cly8txc4t0007vbinbo559wuo","tag_id":"cly8txc5g000lvbin9h2pbxf0","_id":"cly8txc5s000yvbinfyi0d72d"},{"post_id":"cly8txc4w0009vbin5elg6o1m","tag_id":"cly8txc5g000lvbin9h2pbxf0","_id":"cly8txc5y0015vbin4o7if35m"},{"post_id":"cly8txc4y000bvbin51vp6ahn","tag_id":"cly8txc5v0012vbinaw6x1amc","_id":"cly8txc63001cvbin8273dzxf"},{"post_id":"cly8txc61001avbinht3w4y5u","tag_id":"cly8txc51000dvbin1c73gr5f","_id":"cly8txc66001gvbindkj01ufe"},{"post_id":"cly8txc5i000ovbin13pc4yn0","tag_id":"cly8txc5v0012vbinaw6x1amc","_id":"cly8txc6a001kvbin5c7t9h45"},{"post_id":"cly8txc5m000rvbin3xhd11sf","tag_id":"cly8txc5v0012vbinaw6x1amc","_id":"cly8txc6h001qvbinfwj5ave7"},{"post_id":"cly8txc5q000wvbin11xk5k6j","tag_id":"cly8txc5v0012vbinaw6x1amc","_id":"cly8txc6k001uvbinfmtg813w"},{"post_id":"cly8txc5s000zvbin32aa1aff","tag_id":"cly8txc6i001svbinb1fm5p8l","_id":"cly8txc6m001yvbings3b9dwd"},{"post_id":"cly8txc5w0013vbinespve70a","tag_id":"cly8txc6l001xvbinedik2g4b","_id":"cly8txc6o0022vbin3py4a2hz"},{"post_id":"cly8txc5y0016vbin1nhqf1c9","tag_id":"cly8txc6n0021vbin5btxdzue","_id":"cly8txc6p0024vbinf95s3cj5"},{"post_id":"cly8txc64001dvbinh85s5mza","tag_id":"cly8txc6o0023vbinh63b6spl","_id":"cly8txc6q0026vbinci1xgr3r"},{"post_id":"cly8txc67001ivbin0r8odyb2","tag_id":"cly8txc6l001xvbinedik2g4b","_id":"cly8txc6r0028vbinbehb2rl5"},{"post_id":"cly8txc6a001lvbincz0a5m4y","tag_id":"cly8txc6n0021vbin5btxdzue","_id":"cly8txc6s002avbin2mkddwqo"},{"post_id":"cly8txc6e001ovbin8g0861cg","tag_id":"cly8txc6r0029vbin49952aab","_id":"cly8txc6s002bvbinfiis30ti"}],"Tag":[{"name":"日记","_id":"cly8txc4q0005vbin3mcq3xt5"},{"name":"记录","_id":"cly8txc51000dvbin1c73gr5f"},{"name":"实践","_id":"cly8txc5g000lvbin9h2pbxf0"},{"name":"学习","_id":"cly8txc5v0012vbinaw6x1amc"},{"name":"git","_id":"cly8txc6i001svbinb1fm5p8l"},{"name":"博客部署安装","_id":"cly8txc6l001xvbinedik2g4b"},{"name":"诗歌","_id":"cly8txc6n0021vbin5btxdzue"},{"name":"叙述","_id":"cly8txc6o0023vbinh63b6spl"},{"name":"教程","_id":"cly8txc6r0029vbin49952aab"}]}}